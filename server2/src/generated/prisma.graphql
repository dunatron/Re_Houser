type Accommodation {
  id: ID!
  property: Property!
  roomSize: Float
  rent: Float
  expenses: Float
  description: String
}

type AccommodationConnection {
  pageInfo: PageInfo!
  edges: [AccommodationEdge]!
  aggregate: AggregateAccommodation!
}

input AccommodationCreateInput {
  id: ID
  property: PropertyCreateOneWithoutAccommodationInput!
  roomSize: Float
  rent: Float
  expenses: Float
  description: String
}

input AccommodationCreateManyWithoutPropertyInput {
  create: [AccommodationCreateWithoutPropertyInput!]
  connect: [AccommodationWhereUniqueInput!]
}

input AccommodationCreateWithoutPropertyInput {
  id: ID
  roomSize: Float
  rent: Float
  expenses: Float
  description: String
}

type AccommodationEdge {
  node: Accommodation!
  cursor: String!
}

enum AccommodationOrderByInput {
  id_ASC
  id_DESC
  roomSize_ASC
  roomSize_DESC
  rent_ASC
  rent_DESC
  expenses_ASC
  expenses_DESC
  description_ASC
  description_DESC
}

type AccommodationPreviousValues {
  id: ID!
  roomSize: Float
  rent: Float
  expenses: Float
  description: String
}

input AccommodationScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  roomSize: Float
  roomSize_not: Float
  roomSize_in: [Float!]
  roomSize_not_in: [Float!]
  roomSize_lt: Float
  roomSize_lte: Float
  roomSize_gt: Float
  roomSize_gte: Float
  rent: Float
  rent_not: Float
  rent_in: [Float!]
  rent_not_in: [Float!]
  rent_lt: Float
  rent_lte: Float
  rent_gt: Float
  rent_gte: Float
  expenses: Float
  expenses_not: Float
  expenses_in: [Float!]
  expenses_not_in: [Float!]
  expenses_lt: Float
  expenses_lte: Float
  expenses_gt: Float
  expenses_gte: Float
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  AND: [AccommodationScalarWhereInput!]
  OR: [AccommodationScalarWhereInput!]
  NOT: [AccommodationScalarWhereInput!]
}

type AccommodationSubscriptionPayload {
  mutation: MutationType!
  node: Accommodation
  updatedFields: [String!]
  previousValues: AccommodationPreviousValues
}

input AccommodationSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: AccommodationWhereInput
  AND: [AccommodationSubscriptionWhereInput!]
  OR: [AccommodationSubscriptionWhereInput!]
  NOT: [AccommodationSubscriptionWhereInput!]
}

input AccommodationUpdateInput {
  property: PropertyUpdateOneRequiredWithoutAccommodationInput
  roomSize: Float
  rent: Float
  expenses: Float
  description: String
}

input AccommodationUpdateManyDataInput {
  roomSize: Float
  rent: Float
  expenses: Float
  description: String
}

input AccommodationUpdateManyMutationInput {
  roomSize: Float
  rent: Float
  expenses: Float
  description: String
}

input AccommodationUpdateManyWithoutPropertyInput {
  create: [AccommodationCreateWithoutPropertyInput!]
  delete: [AccommodationWhereUniqueInput!]
  connect: [AccommodationWhereUniqueInput!]
  set: [AccommodationWhereUniqueInput!]
  disconnect: [AccommodationWhereUniqueInput!]
  update: [AccommodationUpdateWithWhereUniqueWithoutPropertyInput!]
  upsert: [AccommodationUpsertWithWhereUniqueWithoutPropertyInput!]
  deleteMany: [AccommodationScalarWhereInput!]
  updateMany: [AccommodationUpdateManyWithWhereNestedInput!]
}

input AccommodationUpdateManyWithWhereNestedInput {
  where: AccommodationScalarWhereInput!
  data: AccommodationUpdateManyDataInput!
}

input AccommodationUpdateWithoutPropertyDataInput {
  roomSize: Float
  rent: Float
  expenses: Float
  description: String
}

input AccommodationUpdateWithWhereUniqueWithoutPropertyInput {
  where: AccommodationWhereUniqueInput!
  data: AccommodationUpdateWithoutPropertyDataInput!
}

input AccommodationUpsertWithWhereUniqueWithoutPropertyInput {
  where: AccommodationWhereUniqueInput!
  update: AccommodationUpdateWithoutPropertyDataInput!
  create: AccommodationCreateWithoutPropertyInput!
}

input AccommodationWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  property: PropertyWhereInput
  roomSize: Float
  roomSize_not: Float
  roomSize_in: [Float!]
  roomSize_not_in: [Float!]
  roomSize_lt: Float
  roomSize_lte: Float
  roomSize_gt: Float
  roomSize_gte: Float
  rent: Float
  rent_not: Float
  rent_in: [Float!]
  rent_not_in: [Float!]
  rent_lt: Float
  rent_lte: Float
  rent_gt: Float
  rent_gte: Float
  expenses: Float
  expenses_not: Float
  expenses_in: [Float!]
  expenses_not_in: [Float!]
  expenses_lt: Float
  expenses_lte: Float
  expenses_gt: Float
  expenses_gte: Float
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  AND: [AccommodationWhereInput!]
  OR: [AccommodationWhereInput!]
  NOT: [AccommodationWhereInput!]
}

input AccommodationWhereUniqueInput {
  id: ID
}

type Activity {
  id: ID!
  createdAt: DateTime!
  title: String!
  content: String!
  jsonObj: Json
  type: ActivityType
  user: User
  involved(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  property: Property
  propertyLease: PropertyLease
}

type ActivityConnection {
  pageInfo: PageInfo!
  edges: [ActivityEdge]!
  aggregate: AggregateActivity!
}

input ActivityCreateInput {
  id: ID
  title: String!
  content: String!
  jsonObj: Json
  type: ActivityType
  user: UserCreateOneWithoutActivityInput
  involved: UserCreateManyWithoutInvolvedActivityInput
  property: PropertyCreateOneWithoutActivityInput
  propertyLease: PropertyLeaseCreateOneWithoutActivityInput
}

input ActivityCreateManyWithoutInvolvedInput {
  create: [ActivityCreateWithoutInvolvedInput!]
  connect: [ActivityWhereUniqueInput!]
}

input ActivityCreateManyWithoutPropertyInput {
  create: [ActivityCreateWithoutPropertyInput!]
  connect: [ActivityWhereUniqueInput!]
}

input ActivityCreateManyWithoutPropertyLeaseInput {
  create: [ActivityCreateWithoutPropertyLeaseInput!]
  connect: [ActivityWhereUniqueInput!]
}

input ActivityCreateManyWithoutUserInput {
  create: [ActivityCreateWithoutUserInput!]
  connect: [ActivityWhereUniqueInput!]
}

input ActivityCreateWithoutInvolvedInput {
  id: ID
  title: String!
  content: String!
  jsonObj: Json
  type: ActivityType
  user: UserCreateOneWithoutActivityInput
  property: PropertyCreateOneWithoutActivityInput
  propertyLease: PropertyLeaseCreateOneWithoutActivityInput
}

input ActivityCreateWithoutPropertyInput {
  id: ID
  title: String!
  content: String!
  jsonObj: Json
  type: ActivityType
  user: UserCreateOneWithoutActivityInput
  involved: UserCreateManyWithoutInvolvedActivityInput
  propertyLease: PropertyLeaseCreateOneWithoutActivityInput
}

input ActivityCreateWithoutPropertyLeaseInput {
  id: ID
  title: String!
  content: String!
  jsonObj: Json
  type: ActivityType
  user: UserCreateOneWithoutActivityInput
  involved: UserCreateManyWithoutInvolvedActivityInput
  property: PropertyCreateOneWithoutActivityInput
}

input ActivityCreateWithoutUserInput {
  id: ID
  title: String!
  content: String!
  jsonObj: Json
  type: ActivityType
  involved: UserCreateManyWithoutInvolvedActivityInput
  property: PropertyCreateOneWithoutActivityInput
  propertyLease: PropertyLeaseCreateOneWithoutActivityInput
}

type ActivityEdge {
  node: Activity!
  cursor: String!
}

enum ActivityOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  title_ASC
  title_DESC
  content_ASC
  content_DESC
  jsonObj_ASC
  jsonObj_DESC
  type_ASC
  type_DESC
}

type ActivityPreviousValues {
  id: ID!
  createdAt: DateTime!
  title: String!
  content: String!
  jsonObj: Json
  type: ActivityType
}

input ActivityScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  type: ActivityType
  type_not: ActivityType
  type_in: [ActivityType!]
  type_not_in: [ActivityType!]
  AND: [ActivityScalarWhereInput!]
  OR: [ActivityScalarWhereInput!]
  NOT: [ActivityScalarWhereInput!]
}

type ActivitySubscriptionPayload {
  mutation: MutationType!
  node: Activity
  updatedFields: [String!]
  previousValues: ActivityPreviousValues
}

input ActivitySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ActivityWhereInput
  AND: [ActivitySubscriptionWhereInput!]
  OR: [ActivitySubscriptionWhereInput!]
  NOT: [ActivitySubscriptionWhereInput!]
}

enum ActivityType {
  SIGNED_UP
  CREATED_PROPERTY
  UPDATED_PROPERTY
  PROPERTY_DRAFT
  PROPERTY_LIVE
  CREATED_LEASE
  LEASE_SIGNED
  LEASE_UPDATED
  LEASE_FINALISED
  LEASE_EXPIRED
  CREATED_PROPERTY_APPRAISAL
  CREATED_VIEWING
}

input ActivityUpdateInput {
  title: String
  content: String
  jsonObj: Json
  type: ActivityType
  user: UserUpdateOneWithoutActivityInput
  involved: UserUpdateManyWithoutInvolvedActivityInput
  property: PropertyUpdateOneWithoutActivityInput
  propertyLease: PropertyLeaseUpdateOneWithoutActivityInput
}

input ActivityUpdateManyDataInput {
  title: String
  content: String
  jsonObj: Json
  type: ActivityType
}

input ActivityUpdateManyMutationInput {
  title: String
  content: String
  jsonObj: Json
  type: ActivityType
}

input ActivityUpdateManyWithoutInvolvedInput {
  create: [ActivityCreateWithoutInvolvedInput!]
  delete: [ActivityWhereUniqueInput!]
  connect: [ActivityWhereUniqueInput!]
  set: [ActivityWhereUniqueInput!]
  disconnect: [ActivityWhereUniqueInput!]
  update: [ActivityUpdateWithWhereUniqueWithoutInvolvedInput!]
  upsert: [ActivityUpsertWithWhereUniqueWithoutInvolvedInput!]
  deleteMany: [ActivityScalarWhereInput!]
  updateMany: [ActivityUpdateManyWithWhereNestedInput!]
}

input ActivityUpdateManyWithoutPropertyInput {
  create: [ActivityCreateWithoutPropertyInput!]
  delete: [ActivityWhereUniqueInput!]
  connect: [ActivityWhereUniqueInput!]
  set: [ActivityWhereUniqueInput!]
  disconnect: [ActivityWhereUniqueInput!]
  update: [ActivityUpdateWithWhereUniqueWithoutPropertyInput!]
  upsert: [ActivityUpsertWithWhereUniqueWithoutPropertyInput!]
  deleteMany: [ActivityScalarWhereInput!]
  updateMany: [ActivityUpdateManyWithWhereNestedInput!]
}

input ActivityUpdateManyWithoutPropertyLeaseInput {
  create: [ActivityCreateWithoutPropertyLeaseInput!]
  delete: [ActivityWhereUniqueInput!]
  connect: [ActivityWhereUniqueInput!]
  set: [ActivityWhereUniqueInput!]
  disconnect: [ActivityWhereUniqueInput!]
  update: [ActivityUpdateWithWhereUniqueWithoutPropertyLeaseInput!]
  upsert: [ActivityUpsertWithWhereUniqueWithoutPropertyLeaseInput!]
  deleteMany: [ActivityScalarWhereInput!]
  updateMany: [ActivityUpdateManyWithWhereNestedInput!]
}

input ActivityUpdateManyWithoutUserInput {
  create: [ActivityCreateWithoutUserInput!]
  delete: [ActivityWhereUniqueInput!]
  connect: [ActivityWhereUniqueInput!]
  set: [ActivityWhereUniqueInput!]
  disconnect: [ActivityWhereUniqueInput!]
  update: [ActivityUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [ActivityUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [ActivityScalarWhereInput!]
  updateMany: [ActivityUpdateManyWithWhereNestedInput!]
}

input ActivityUpdateManyWithWhereNestedInput {
  where: ActivityScalarWhereInput!
  data: ActivityUpdateManyDataInput!
}

input ActivityUpdateWithoutInvolvedDataInput {
  title: String
  content: String
  jsonObj: Json
  type: ActivityType
  user: UserUpdateOneWithoutActivityInput
  property: PropertyUpdateOneWithoutActivityInput
  propertyLease: PropertyLeaseUpdateOneWithoutActivityInput
}

input ActivityUpdateWithoutPropertyDataInput {
  title: String
  content: String
  jsonObj: Json
  type: ActivityType
  user: UserUpdateOneWithoutActivityInput
  involved: UserUpdateManyWithoutInvolvedActivityInput
  propertyLease: PropertyLeaseUpdateOneWithoutActivityInput
}

input ActivityUpdateWithoutPropertyLeaseDataInput {
  title: String
  content: String
  jsonObj: Json
  type: ActivityType
  user: UserUpdateOneWithoutActivityInput
  involved: UserUpdateManyWithoutInvolvedActivityInput
  property: PropertyUpdateOneWithoutActivityInput
}

input ActivityUpdateWithoutUserDataInput {
  title: String
  content: String
  jsonObj: Json
  type: ActivityType
  involved: UserUpdateManyWithoutInvolvedActivityInput
  property: PropertyUpdateOneWithoutActivityInput
  propertyLease: PropertyLeaseUpdateOneWithoutActivityInput
}

input ActivityUpdateWithWhereUniqueWithoutInvolvedInput {
  where: ActivityWhereUniqueInput!
  data: ActivityUpdateWithoutInvolvedDataInput!
}

input ActivityUpdateWithWhereUniqueWithoutPropertyInput {
  where: ActivityWhereUniqueInput!
  data: ActivityUpdateWithoutPropertyDataInput!
}

input ActivityUpdateWithWhereUniqueWithoutPropertyLeaseInput {
  where: ActivityWhereUniqueInput!
  data: ActivityUpdateWithoutPropertyLeaseDataInput!
}

input ActivityUpdateWithWhereUniqueWithoutUserInput {
  where: ActivityWhereUniqueInput!
  data: ActivityUpdateWithoutUserDataInput!
}

input ActivityUpsertWithWhereUniqueWithoutInvolvedInput {
  where: ActivityWhereUniqueInput!
  update: ActivityUpdateWithoutInvolvedDataInput!
  create: ActivityCreateWithoutInvolvedInput!
}

input ActivityUpsertWithWhereUniqueWithoutPropertyInput {
  where: ActivityWhereUniqueInput!
  update: ActivityUpdateWithoutPropertyDataInput!
  create: ActivityCreateWithoutPropertyInput!
}

input ActivityUpsertWithWhereUniqueWithoutPropertyLeaseInput {
  where: ActivityWhereUniqueInput!
  update: ActivityUpdateWithoutPropertyLeaseDataInput!
  create: ActivityCreateWithoutPropertyLeaseInput!
}

input ActivityUpsertWithWhereUniqueWithoutUserInput {
  where: ActivityWhereUniqueInput!
  update: ActivityUpdateWithoutUserDataInput!
  create: ActivityCreateWithoutUserInput!
}

input ActivityWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  type: ActivityType
  type_not: ActivityType
  type_in: [ActivityType!]
  type_not_in: [ActivityType!]
  user: UserWhereInput
  involved_every: UserWhereInput
  involved_some: UserWhereInput
  involved_none: UserWhereInput
  property: PropertyWhereInput
  propertyLease: PropertyLeaseWhereInput
  AND: [ActivityWhereInput!]
  OR: [ActivityWhereInput!]
  NOT: [ActivityWhereInput!]
}

input ActivityWhereUniqueInput {
  id: ID
}

type Address {
  id: ID!
  user: User
  placeId: String!
  desc: String!
  lat: Float!
  lng: Float!
}

type AddressConnection {
  pageInfo: PageInfo!
  edges: [AddressEdge]!
  aggregate: AggregateAddress!
}

input AddressCreateInput {
  id: ID
  user: UserCreateOneWithoutCurrentAddressInput
  placeId: String!
  desc: String!
  lat: Float!
  lng: Float!
}

input AddressCreateOneWithoutUserInput {
  create: AddressCreateWithoutUserInput
  connect: AddressWhereUniqueInput
}

input AddressCreateWithoutUserInput {
  id: ID
  placeId: String!
  desc: String!
  lat: Float!
  lng: Float!
}

type AddressEdge {
  node: Address!
  cursor: String!
}

enum AddressOrderByInput {
  id_ASC
  id_DESC
  placeId_ASC
  placeId_DESC
  desc_ASC
  desc_DESC
  lat_ASC
  lat_DESC
  lng_ASC
  lng_DESC
}

type AddressPreviousValues {
  id: ID!
  placeId: String!
  desc: String!
  lat: Float!
  lng: Float!
}

type AddressSubscriptionPayload {
  mutation: MutationType!
  node: Address
  updatedFields: [String!]
  previousValues: AddressPreviousValues
}

input AddressSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: AddressWhereInput
  AND: [AddressSubscriptionWhereInput!]
  OR: [AddressSubscriptionWhereInput!]
  NOT: [AddressSubscriptionWhereInput!]
}

input AddressUpdateInput {
  user: UserUpdateOneWithoutCurrentAddressInput
  placeId: String
  desc: String
  lat: Float
  lng: Float
}

input AddressUpdateManyMutationInput {
  placeId: String
  desc: String
  lat: Float
  lng: Float
}

input AddressUpdateOneWithoutUserInput {
  create: AddressCreateWithoutUserInput
  update: AddressUpdateWithoutUserDataInput
  upsert: AddressUpsertWithoutUserInput
  delete: Boolean
  disconnect: Boolean
  connect: AddressWhereUniqueInput
}

input AddressUpdateWithoutUserDataInput {
  placeId: String
  desc: String
  lat: Float
  lng: Float
}

input AddressUpsertWithoutUserInput {
  update: AddressUpdateWithoutUserDataInput!
  create: AddressCreateWithoutUserInput!
}

input AddressWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  user: UserWhereInput
  placeId: String
  placeId_not: String
  placeId_in: [String!]
  placeId_not_in: [String!]
  placeId_lt: String
  placeId_lte: String
  placeId_gt: String
  placeId_gte: String
  placeId_contains: String
  placeId_not_contains: String
  placeId_starts_with: String
  placeId_not_starts_with: String
  placeId_ends_with: String
  placeId_not_ends_with: String
  desc: String
  desc_not: String
  desc_in: [String!]
  desc_not_in: [String!]
  desc_lt: String
  desc_lte: String
  desc_gt: String
  desc_gte: String
  desc_contains: String
  desc_not_contains: String
  desc_starts_with: String
  desc_not_starts_with: String
  desc_ends_with: String
  desc_not_ends_with: String
  lat: Float
  lat_not: Float
  lat_in: [Float!]
  lat_not_in: [Float!]
  lat_lt: Float
  lat_lte: Float
  lat_gt: Float
  lat_gte: Float
  lng: Float
  lng_not: Float
  lng_in: [Float!]
  lng_not_in: [Float!]
  lng_lt: Float
  lng_lte: Float
  lng_gt: Float
  lng_gte: Float
  AND: [AddressWhereInput!]
  OR: [AddressWhereInput!]
  NOT: [AddressWhereInput!]
}

input AddressWhereUniqueInput {
  id: ID
}

type AdminSetting {
  id: ID!
  user: User
  appraisalCreatedSub: Boolean
  propertyCreatedSub: Boolean
  rentalApplicationCreatedSub: Boolean
  leaseCreatedSub: Boolean
}

type AdminSettingConnection {
  pageInfo: PageInfo!
  edges: [AdminSettingEdge]!
  aggregate: AggregateAdminSetting!
}

input AdminSettingCreateInput {
  id: ID
  user: UserCreateOneWithoutAdminSettingsInput
  appraisalCreatedSub: Boolean
  propertyCreatedSub: Boolean
  rentalApplicationCreatedSub: Boolean
  leaseCreatedSub: Boolean
}

input AdminSettingCreateOneWithoutUserInput {
  create: AdminSettingCreateWithoutUserInput
  connect: AdminSettingWhereUniqueInput
}

input AdminSettingCreateWithoutUserInput {
  id: ID
  appraisalCreatedSub: Boolean
  propertyCreatedSub: Boolean
  rentalApplicationCreatedSub: Boolean
  leaseCreatedSub: Boolean
}

type AdminSettingEdge {
  node: AdminSetting!
  cursor: String!
}

enum AdminSettingOrderByInput {
  id_ASC
  id_DESC
  appraisalCreatedSub_ASC
  appraisalCreatedSub_DESC
  propertyCreatedSub_ASC
  propertyCreatedSub_DESC
  rentalApplicationCreatedSub_ASC
  rentalApplicationCreatedSub_DESC
  leaseCreatedSub_ASC
  leaseCreatedSub_DESC
}

type AdminSettingPreviousValues {
  id: ID!
  appraisalCreatedSub: Boolean
  propertyCreatedSub: Boolean
  rentalApplicationCreatedSub: Boolean
  leaseCreatedSub: Boolean
}

type AdminSettingSubscriptionPayload {
  mutation: MutationType!
  node: AdminSetting
  updatedFields: [String!]
  previousValues: AdminSettingPreviousValues
}

input AdminSettingSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: AdminSettingWhereInput
  AND: [AdminSettingSubscriptionWhereInput!]
  OR: [AdminSettingSubscriptionWhereInput!]
  NOT: [AdminSettingSubscriptionWhereInput!]
}

input AdminSettingUpdateInput {
  user: UserUpdateOneWithoutAdminSettingsInput
  appraisalCreatedSub: Boolean
  propertyCreatedSub: Boolean
  rentalApplicationCreatedSub: Boolean
  leaseCreatedSub: Boolean
}

input AdminSettingUpdateManyMutationInput {
  appraisalCreatedSub: Boolean
  propertyCreatedSub: Boolean
  rentalApplicationCreatedSub: Boolean
  leaseCreatedSub: Boolean
}

input AdminSettingUpdateOneRequiredWithoutUserInput {
  create: AdminSettingCreateWithoutUserInput
  update: AdminSettingUpdateWithoutUserDataInput
  upsert: AdminSettingUpsertWithoutUserInput
  connect: AdminSettingWhereUniqueInput
}

input AdminSettingUpdateWithoutUserDataInput {
  appraisalCreatedSub: Boolean
  propertyCreatedSub: Boolean
  rentalApplicationCreatedSub: Boolean
  leaseCreatedSub: Boolean
}

input AdminSettingUpsertWithoutUserInput {
  update: AdminSettingUpdateWithoutUserDataInput!
  create: AdminSettingCreateWithoutUserInput!
}

input AdminSettingWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  user: UserWhereInput
  appraisalCreatedSub: Boolean
  appraisalCreatedSub_not: Boolean
  propertyCreatedSub: Boolean
  propertyCreatedSub_not: Boolean
  rentalApplicationCreatedSub: Boolean
  rentalApplicationCreatedSub_not: Boolean
  leaseCreatedSub: Boolean
  leaseCreatedSub_not: Boolean
  AND: [AdminSettingWhereInput!]
  OR: [AdminSettingWhereInput!]
  NOT: [AdminSettingWhereInput!]
}

input AdminSettingWhereUniqueInput {
  id: ID
}

type AggregateAccommodation {
  count: Int!
}

type AggregateActivity {
  count: Int!
}

type AggregateAddress {
  count: Int!
}

type AggregateAdminSetting {
  count: Int!
}

type AggregateBankDetail {
  count: Int!
}

type AggregateCharge {
  count: Int!
}

type AggregateChat {
  count: Int!
}

type AggregateCreditCard {
  count: Int!
}

type AggregateFile {
  count: Int!
}

type AggregateFriendRequest {
  count: Int!
}

type AggregateInspection {
  count: Int!
}

type AggregateInsulationForm {
  count: Int!
}

type AggregateLessee {
  count: Int!
}

type AggregateLessor {
  count: Int!
}

type AggregateMessage {
  count: Int!
}

type AggregatePayment {
  count: Int!
}

type AggregatePreTenancyForm {
  count: Int!
}

type AggregateProperty {
  count: Int!
}

type AggregatePropertyAdvertisement {
  count: Int!
}

type AggregatePropertyAssist {
  count: Int!
}

type AggregatePropertyFiles {
  count: Int!
}

type AggregatePropertyLease {
  count: Int!
}

type AggregateRentalApplication {
  count: Int!
}

type AggregateRentalAppraisal {
  count: Int!
}

type AggregateRentalGroupApplicant {
  count: Int!
}

type AggregateSeen {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type AggregateViewing {
  count: Int!
}

type AggregateWallet {
  count: Int!
}

enum ApplicationStage {
  INITIALIZING
  PENDING
  DENIED
  ACCEPTED
}

type BankDetail {
  id: ID!
  user: User
  property: Property
  name: String
  bankNumber: String
  branchNumber: String
  accountNumber: String
  suffix: String
}

type BankDetailConnection {
  pageInfo: PageInfo!
  edges: [BankDetailEdge]!
  aggregate: AggregateBankDetail!
}

input BankDetailCreateInput {
  id: ID
  user: UserCreateOneWithoutBankDetailsInput
  property: PropertyCreateOneWithoutBankDetailsInput
  name: String
  bankNumber: String
  branchNumber: String
  accountNumber: String
  suffix: String
}

input BankDetailCreateOneWithoutPropertyInput {
  create: BankDetailCreateWithoutPropertyInput
  connect: BankDetailWhereUniqueInput
}

input BankDetailCreateOneWithoutUserInput {
  create: BankDetailCreateWithoutUserInput
  connect: BankDetailWhereUniqueInput
}

input BankDetailCreateWithoutPropertyInput {
  id: ID
  user: UserCreateOneWithoutBankDetailsInput
  name: String
  bankNumber: String
  branchNumber: String
  accountNumber: String
  suffix: String
}

input BankDetailCreateWithoutUserInput {
  id: ID
  property: PropertyCreateOneWithoutBankDetailsInput
  name: String
  bankNumber: String
  branchNumber: String
  accountNumber: String
  suffix: String
}

type BankDetailEdge {
  node: BankDetail!
  cursor: String!
}

enum BankDetailOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  bankNumber_ASC
  bankNumber_DESC
  branchNumber_ASC
  branchNumber_DESC
  accountNumber_ASC
  accountNumber_DESC
  suffix_ASC
  suffix_DESC
}

type BankDetailPreviousValues {
  id: ID!
  name: String
  bankNumber: String
  branchNumber: String
  accountNumber: String
  suffix: String
}

type BankDetailSubscriptionPayload {
  mutation: MutationType!
  node: BankDetail
  updatedFields: [String!]
  previousValues: BankDetailPreviousValues
}

input BankDetailSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: BankDetailWhereInput
  AND: [BankDetailSubscriptionWhereInput!]
  OR: [BankDetailSubscriptionWhereInput!]
  NOT: [BankDetailSubscriptionWhereInput!]
}

input BankDetailUpdateInput {
  user: UserUpdateOneWithoutBankDetailsInput
  property: PropertyUpdateOneWithoutBankDetailsInput
  name: String
  bankNumber: String
  branchNumber: String
  accountNumber: String
  suffix: String
}

input BankDetailUpdateManyMutationInput {
  name: String
  bankNumber: String
  branchNumber: String
  accountNumber: String
  suffix: String
}

input BankDetailUpdateOneWithoutPropertyInput {
  create: BankDetailCreateWithoutPropertyInput
  update: BankDetailUpdateWithoutPropertyDataInput
  upsert: BankDetailUpsertWithoutPropertyInput
  delete: Boolean
  disconnect: Boolean
  connect: BankDetailWhereUniqueInput
}

input BankDetailUpdateOneWithoutUserInput {
  create: BankDetailCreateWithoutUserInput
  update: BankDetailUpdateWithoutUserDataInput
  upsert: BankDetailUpsertWithoutUserInput
  delete: Boolean
  disconnect: Boolean
  connect: BankDetailWhereUniqueInput
}

input BankDetailUpdateWithoutPropertyDataInput {
  user: UserUpdateOneWithoutBankDetailsInput
  name: String
  bankNumber: String
  branchNumber: String
  accountNumber: String
  suffix: String
}

input BankDetailUpdateWithoutUserDataInput {
  property: PropertyUpdateOneWithoutBankDetailsInput
  name: String
  bankNumber: String
  branchNumber: String
  accountNumber: String
  suffix: String
}

input BankDetailUpsertWithoutPropertyInput {
  update: BankDetailUpdateWithoutPropertyDataInput!
  create: BankDetailCreateWithoutPropertyInput!
}

input BankDetailUpsertWithoutUserInput {
  update: BankDetailUpdateWithoutUserDataInput!
  create: BankDetailCreateWithoutUserInput!
}

input BankDetailWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  user: UserWhereInput
  property: PropertyWhereInput
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  bankNumber: String
  bankNumber_not: String
  bankNumber_in: [String!]
  bankNumber_not_in: [String!]
  bankNumber_lt: String
  bankNumber_lte: String
  bankNumber_gt: String
  bankNumber_gte: String
  bankNumber_contains: String
  bankNumber_not_contains: String
  bankNumber_starts_with: String
  bankNumber_not_starts_with: String
  bankNumber_ends_with: String
  bankNumber_not_ends_with: String
  branchNumber: String
  branchNumber_not: String
  branchNumber_in: [String!]
  branchNumber_not_in: [String!]
  branchNumber_lt: String
  branchNumber_lte: String
  branchNumber_gt: String
  branchNumber_gte: String
  branchNumber_contains: String
  branchNumber_not_contains: String
  branchNumber_starts_with: String
  branchNumber_not_starts_with: String
  branchNumber_ends_with: String
  branchNumber_not_ends_with: String
  accountNumber: String
  accountNumber_not: String
  accountNumber_in: [String!]
  accountNumber_not_in: [String!]
  accountNumber_lt: String
  accountNumber_lte: String
  accountNumber_gt: String
  accountNumber_gte: String
  accountNumber_contains: String
  accountNumber_not_contains: String
  accountNumber_starts_with: String
  accountNumber_not_starts_with: String
  accountNumber_ends_with: String
  accountNumber_not_ends_with: String
  suffix: String
  suffix_not: String
  suffix_in: [String!]
  suffix_not_in: [String!]
  suffix_lt: String
  suffix_lte: String
  suffix_gt: String
  suffix_gte: String
  suffix_contains: String
  suffix_not_contains: String
  suffix_starts_with: String
  suffix_not_starts_with: String
  suffix_ends_with: String
  suffix_not_ends_with: String
  AND: [BankDetailWhereInput!]
  OR: [BankDetailWhereInput!]
  NOT: [BankDetailWhereInput!]
}

input BankDetailWhereUniqueInput {
  id: ID
}

type BatchPayload {
  count: Long!
}

enum CeilingInsulationTypes {
  SEGMENTS_BLANKETS
  LOOSE_FILL
  OTHER
  NOT_ACCESSIBLE
}

type Charge {
  id: ID!
  createdAt: DateTime!
  wallet: Wallet
  amount: Float
  description: String
}

type ChargeConnection {
  pageInfo: PageInfo!
  edges: [ChargeEdge]!
  aggregate: AggregateCharge!
}

input ChargeCreateInput {
  id: ID
  wallet: WalletCreateOneWithoutChargesInput
  amount: Float
  description: String
}

input ChargeCreateManyWithoutWalletInput {
  create: [ChargeCreateWithoutWalletInput!]
  connect: [ChargeWhereUniqueInput!]
}

input ChargeCreateWithoutWalletInput {
  id: ID
  amount: Float
  description: String
}

type ChargeEdge {
  node: Charge!
  cursor: String!
}

enum ChargeOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  amount_ASC
  amount_DESC
  description_ASC
  description_DESC
}

type ChargePreviousValues {
  id: ID!
  createdAt: DateTime!
  amount: Float
  description: String
}

input ChargeScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  amount: Float
  amount_not: Float
  amount_in: [Float!]
  amount_not_in: [Float!]
  amount_lt: Float
  amount_lte: Float
  amount_gt: Float
  amount_gte: Float
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  AND: [ChargeScalarWhereInput!]
  OR: [ChargeScalarWhereInput!]
  NOT: [ChargeScalarWhereInput!]
}

type ChargeSubscriptionPayload {
  mutation: MutationType!
  node: Charge
  updatedFields: [String!]
  previousValues: ChargePreviousValues
}

input ChargeSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChargeWhereInput
  AND: [ChargeSubscriptionWhereInput!]
  OR: [ChargeSubscriptionWhereInput!]
  NOT: [ChargeSubscriptionWhereInput!]
}

input ChargeUpdateInput {
  wallet: WalletUpdateOneWithoutChargesInput
  amount: Float
  description: String
}

input ChargeUpdateManyDataInput {
  amount: Float
  description: String
}

input ChargeUpdateManyMutationInput {
  amount: Float
  description: String
}

input ChargeUpdateManyWithoutWalletInput {
  create: [ChargeCreateWithoutWalletInput!]
  delete: [ChargeWhereUniqueInput!]
  connect: [ChargeWhereUniqueInput!]
  set: [ChargeWhereUniqueInput!]
  disconnect: [ChargeWhereUniqueInput!]
  update: [ChargeUpdateWithWhereUniqueWithoutWalletInput!]
  upsert: [ChargeUpsertWithWhereUniqueWithoutWalletInput!]
  deleteMany: [ChargeScalarWhereInput!]
  updateMany: [ChargeUpdateManyWithWhereNestedInput!]
}

input ChargeUpdateManyWithWhereNestedInput {
  where: ChargeScalarWhereInput!
  data: ChargeUpdateManyDataInput!
}

input ChargeUpdateWithoutWalletDataInput {
  amount: Float
  description: String
}

input ChargeUpdateWithWhereUniqueWithoutWalletInput {
  where: ChargeWhereUniqueInput!
  data: ChargeUpdateWithoutWalletDataInput!
}

input ChargeUpsertWithWhereUniqueWithoutWalletInput {
  where: ChargeWhereUniqueInput!
  update: ChargeUpdateWithoutWalletDataInput!
  create: ChargeCreateWithoutWalletInput!
}

input ChargeWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  wallet: WalletWhereInput
  amount: Float
  amount_not: Float
  amount_in: [Float!]
  amount_not_in: [Float!]
  amount_lt: Float
  amount_lte: Float
  amount_gt: Float
  amount_gte: Float
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  AND: [ChargeWhereInput!]
  OR: [ChargeWhereInput!]
  NOT: [ChargeWhereInput!]
}

input ChargeWhereUniqueInput {
  id: ID
}

type Chat {
  id: ID!
  name: String!
  picture: String
  type: ChatType
  lastMessage: Message
  messages(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Message!]
  participants(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  seenInfo(where: SeenWhereInput, orderBy: SeenOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Seen!]
}

type ChatConnection {
  pageInfo: PageInfo!
  edges: [ChatEdge]!
  aggregate: AggregateChat!
}

input ChatCreateInput {
  id: ID
  name: String!
  picture: String
  type: ChatType
  lastMessage: MessageCreateOneWithoutLastMessageRelInput
  messages: MessageCreateManyWithoutChatInput
  participants: UserCreateManyWithoutChatsInput
  seenInfo: SeenCreateManyWithoutChatInput
}

input ChatCreateManyWithoutParticipantsInput {
  create: [ChatCreateWithoutParticipantsInput!]
  connect: [ChatWhereUniqueInput!]
}

input ChatCreateOneWithoutLastMessageInput {
  create: ChatCreateWithoutLastMessageInput
  connect: ChatWhereUniqueInput
}

input ChatCreateOneWithoutMessagesInput {
  create: ChatCreateWithoutMessagesInput
  connect: ChatWhereUniqueInput
}

input ChatCreateOneWithoutSeenInfoInput {
  create: ChatCreateWithoutSeenInfoInput
  connect: ChatWhereUniqueInput
}

input ChatCreateWithoutLastMessageInput {
  id: ID
  name: String!
  picture: String
  type: ChatType
  messages: MessageCreateManyWithoutChatInput
  participants: UserCreateManyWithoutChatsInput
  seenInfo: SeenCreateManyWithoutChatInput
}

input ChatCreateWithoutMessagesInput {
  id: ID
  name: String!
  picture: String
  type: ChatType
  lastMessage: MessageCreateOneWithoutLastMessageRelInput
  participants: UserCreateManyWithoutChatsInput
  seenInfo: SeenCreateManyWithoutChatInput
}

input ChatCreateWithoutParticipantsInput {
  id: ID
  name: String!
  picture: String
  type: ChatType
  lastMessage: MessageCreateOneWithoutLastMessageRelInput
  messages: MessageCreateManyWithoutChatInput
  seenInfo: SeenCreateManyWithoutChatInput
}

input ChatCreateWithoutSeenInfoInput {
  id: ID
  name: String!
  picture: String
  type: ChatType
  lastMessage: MessageCreateOneWithoutLastMessageRelInput
  messages: MessageCreateManyWithoutChatInput
  participants: UserCreateManyWithoutChatsInput
}

type ChatEdge {
  node: Chat!
  cursor: String!
}

enum ChatOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  picture_ASC
  picture_DESC
  type_ASC
  type_DESC
}

type ChatPreviousValues {
  id: ID!
  name: String!
  picture: String
  type: ChatType
}

input ChatScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  picture: String
  picture_not: String
  picture_in: [String!]
  picture_not_in: [String!]
  picture_lt: String
  picture_lte: String
  picture_gt: String
  picture_gte: String
  picture_contains: String
  picture_not_contains: String
  picture_starts_with: String
  picture_not_starts_with: String
  picture_ends_with: String
  picture_not_ends_with: String
  type: ChatType
  type_not: ChatType
  type_in: [ChatType!]
  type_not_in: [ChatType!]
  AND: [ChatScalarWhereInput!]
  OR: [ChatScalarWhereInput!]
  NOT: [ChatScalarWhereInput!]
}

type ChatSubscriptionPayload {
  mutation: MutationType!
  node: Chat
  updatedFields: [String!]
  previousValues: ChatPreviousValues
}

input ChatSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ChatWhereInput
  AND: [ChatSubscriptionWhereInput!]
  OR: [ChatSubscriptionWhereInput!]
  NOT: [ChatSubscriptionWhereInput!]
}

enum ChatType {
  PEER
  GROUP
}

input ChatUpdateInput {
  name: String
  picture: String
  type: ChatType
  lastMessage: MessageUpdateOneWithoutLastMessageRelInput
  messages: MessageUpdateManyWithoutChatInput
  participants: UserUpdateManyWithoutChatsInput
  seenInfo: SeenUpdateManyWithoutChatInput
}

input ChatUpdateManyDataInput {
  name: String
  picture: String
  type: ChatType
}

input ChatUpdateManyMutationInput {
  name: String
  picture: String
  type: ChatType
}

input ChatUpdateManyWithoutParticipantsInput {
  create: [ChatCreateWithoutParticipantsInput!]
  delete: [ChatWhereUniqueInput!]
  connect: [ChatWhereUniqueInput!]
  set: [ChatWhereUniqueInput!]
  disconnect: [ChatWhereUniqueInput!]
  update: [ChatUpdateWithWhereUniqueWithoutParticipantsInput!]
  upsert: [ChatUpsertWithWhereUniqueWithoutParticipantsInput!]
  deleteMany: [ChatScalarWhereInput!]
  updateMany: [ChatUpdateManyWithWhereNestedInput!]
}

input ChatUpdateManyWithWhereNestedInput {
  where: ChatScalarWhereInput!
  data: ChatUpdateManyDataInput!
}

input ChatUpdateOneRequiredWithoutMessagesInput {
  create: ChatCreateWithoutMessagesInput
  update: ChatUpdateWithoutMessagesDataInput
  upsert: ChatUpsertWithoutMessagesInput
  connect: ChatWhereUniqueInput
}

input ChatUpdateOneRequiredWithoutSeenInfoInput {
  create: ChatCreateWithoutSeenInfoInput
  update: ChatUpdateWithoutSeenInfoDataInput
  upsert: ChatUpsertWithoutSeenInfoInput
  connect: ChatWhereUniqueInput
}

input ChatUpdateOneWithoutLastMessageInput {
  create: ChatCreateWithoutLastMessageInput
  update: ChatUpdateWithoutLastMessageDataInput
  upsert: ChatUpsertWithoutLastMessageInput
  delete: Boolean
  disconnect: Boolean
  connect: ChatWhereUniqueInput
}

input ChatUpdateWithoutLastMessageDataInput {
  name: String
  picture: String
  type: ChatType
  messages: MessageUpdateManyWithoutChatInput
  participants: UserUpdateManyWithoutChatsInput
  seenInfo: SeenUpdateManyWithoutChatInput
}

input ChatUpdateWithoutMessagesDataInput {
  name: String
  picture: String
  type: ChatType
  lastMessage: MessageUpdateOneWithoutLastMessageRelInput
  participants: UserUpdateManyWithoutChatsInput
  seenInfo: SeenUpdateManyWithoutChatInput
}

input ChatUpdateWithoutParticipantsDataInput {
  name: String
  picture: String
  type: ChatType
  lastMessage: MessageUpdateOneWithoutLastMessageRelInput
  messages: MessageUpdateManyWithoutChatInput
  seenInfo: SeenUpdateManyWithoutChatInput
}

input ChatUpdateWithoutSeenInfoDataInput {
  name: String
  picture: String
  type: ChatType
  lastMessage: MessageUpdateOneWithoutLastMessageRelInput
  messages: MessageUpdateManyWithoutChatInput
  participants: UserUpdateManyWithoutChatsInput
}

input ChatUpdateWithWhereUniqueWithoutParticipantsInput {
  where: ChatWhereUniqueInput!
  data: ChatUpdateWithoutParticipantsDataInput!
}

input ChatUpsertWithoutLastMessageInput {
  update: ChatUpdateWithoutLastMessageDataInput!
  create: ChatCreateWithoutLastMessageInput!
}

input ChatUpsertWithoutMessagesInput {
  update: ChatUpdateWithoutMessagesDataInput!
  create: ChatCreateWithoutMessagesInput!
}

input ChatUpsertWithoutSeenInfoInput {
  update: ChatUpdateWithoutSeenInfoDataInput!
  create: ChatCreateWithoutSeenInfoInput!
}

input ChatUpsertWithWhereUniqueWithoutParticipantsInput {
  where: ChatWhereUniqueInput!
  update: ChatUpdateWithoutParticipantsDataInput!
  create: ChatCreateWithoutParticipantsInput!
}

input ChatWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  picture: String
  picture_not: String
  picture_in: [String!]
  picture_not_in: [String!]
  picture_lt: String
  picture_lte: String
  picture_gt: String
  picture_gte: String
  picture_contains: String
  picture_not_contains: String
  picture_starts_with: String
  picture_not_starts_with: String
  picture_ends_with: String
  picture_not_ends_with: String
  type: ChatType
  type_not: ChatType
  type_in: [ChatType!]
  type_not_in: [ChatType!]
  lastMessage: MessageWhereInput
  messages_every: MessageWhereInput
  messages_some: MessageWhereInput
  messages_none: MessageWhereInput
  participants_every: UserWhereInput
  participants_some: UserWhereInput
  participants_none: UserWhereInput
  seenInfo_every: SeenWhereInput
  seenInfo_some: SeenWhereInput
  seenInfo_none: SeenWhereInput
  AND: [ChatWhereInput!]
  OR: [ChatWhereInput!]
  NOT: [ChatWhereInput!]
}

input ChatWhereUniqueInput {
  id: ID
}

type CreditCard {
  id: ID!
  cardOwner: User!
  createdAt: DateTime!
  stripeCardId: String
  brand: String
  country: String
  address_city: String
  address_country: String
  address_line1: String
  address_line1_check: String
  address_line2: String
  address_state: String
  address_zip: String
  address_zip_check: String
  stripeCustomerId: String
  exp_month: Int
  exp_year: Int
  fingerprint: String
  last4: String
  name: String
  object: String
  cvc_check: String
  funding: String
}

type CreditCardConnection {
  pageInfo: PageInfo!
  edges: [CreditCardEdge]!
  aggregate: AggregateCreditCard!
}

input CreditCardCreateInput {
  id: ID
  cardOwner: UserCreateOneWithoutCreditCardsInput!
  stripeCardId: String
  brand: String
  country: String
  address_city: String
  address_country: String
  address_line1: String
  address_line1_check: String
  address_line2: String
  address_state: String
  address_zip: String
  address_zip_check: String
  stripeCustomerId: String
  exp_month: Int
  exp_year: Int
  fingerprint: String
  last4: String
  name: String
  object: String
  cvc_check: String
  funding: String
}

input CreditCardCreateManyWithoutCardOwnerInput {
  create: [CreditCardCreateWithoutCardOwnerInput!]
  connect: [CreditCardWhereUniqueInput!]
}

input CreditCardCreateOneInput {
  create: CreditCardCreateInput
  connect: CreditCardWhereUniqueInput
}

input CreditCardCreateWithoutCardOwnerInput {
  id: ID
  stripeCardId: String
  brand: String
  country: String
  address_city: String
  address_country: String
  address_line1: String
  address_line1_check: String
  address_line2: String
  address_state: String
  address_zip: String
  address_zip_check: String
  stripeCustomerId: String
  exp_month: Int
  exp_year: Int
  fingerprint: String
  last4: String
  name: String
  object: String
  cvc_check: String
  funding: String
}

type CreditCardEdge {
  node: CreditCard!
  cursor: String!
}

enum CreditCardOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  stripeCardId_ASC
  stripeCardId_DESC
  brand_ASC
  brand_DESC
  country_ASC
  country_DESC
  address_city_ASC
  address_city_DESC
  address_country_ASC
  address_country_DESC
  address_line1_ASC
  address_line1_DESC
  address_line1_check_ASC
  address_line1_check_DESC
  address_line2_ASC
  address_line2_DESC
  address_state_ASC
  address_state_DESC
  address_zip_ASC
  address_zip_DESC
  address_zip_check_ASC
  address_zip_check_DESC
  stripeCustomerId_ASC
  stripeCustomerId_DESC
  exp_month_ASC
  exp_month_DESC
  exp_year_ASC
  exp_year_DESC
  fingerprint_ASC
  fingerprint_DESC
  last4_ASC
  last4_DESC
  name_ASC
  name_DESC
  object_ASC
  object_DESC
  cvc_check_ASC
  cvc_check_DESC
  funding_ASC
  funding_DESC
}

type CreditCardPreviousValues {
  id: ID!
  createdAt: DateTime!
  stripeCardId: String
  brand: String
  country: String
  address_city: String
  address_country: String
  address_line1: String
  address_line1_check: String
  address_line2: String
  address_state: String
  address_zip: String
  address_zip_check: String
  stripeCustomerId: String
  exp_month: Int
  exp_year: Int
  fingerprint: String
  last4: String
  name: String
  object: String
  cvc_check: String
  funding: String
}

input CreditCardScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  stripeCardId: String
  stripeCardId_not: String
  stripeCardId_in: [String!]
  stripeCardId_not_in: [String!]
  stripeCardId_lt: String
  stripeCardId_lte: String
  stripeCardId_gt: String
  stripeCardId_gte: String
  stripeCardId_contains: String
  stripeCardId_not_contains: String
  stripeCardId_starts_with: String
  stripeCardId_not_starts_with: String
  stripeCardId_ends_with: String
  stripeCardId_not_ends_with: String
  brand: String
  brand_not: String
  brand_in: [String!]
  brand_not_in: [String!]
  brand_lt: String
  brand_lte: String
  brand_gt: String
  brand_gte: String
  brand_contains: String
  brand_not_contains: String
  brand_starts_with: String
  brand_not_starts_with: String
  brand_ends_with: String
  brand_not_ends_with: String
  country: String
  country_not: String
  country_in: [String!]
  country_not_in: [String!]
  country_lt: String
  country_lte: String
  country_gt: String
  country_gte: String
  country_contains: String
  country_not_contains: String
  country_starts_with: String
  country_not_starts_with: String
  country_ends_with: String
  country_not_ends_with: String
  address_city: String
  address_city_not: String
  address_city_in: [String!]
  address_city_not_in: [String!]
  address_city_lt: String
  address_city_lte: String
  address_city_gt: String
  address_city_gte: String
  address_city_contains: String
  address_city_not_contains: String
  address_city_starts_with: String
  address_city_not_starts_with: String
  address_city_ends_with: String
  address_city_not_ends_with: String
  address_country: String
  address_country_not: String
  address_country_in: [String!]
  address_country_not_in: [String!]
  address_country_lt: String
  address_country_lte: String
  address_country_gt: String
  address_country_gte: String
  address_country_contains: String
  address_country_not_contains: String
  address_country_starts_with: String
  address_country_not_starts_with: String
  address_country_ends_with: String
  address_country_not_ends_with: String
  address_line1: String
  address_line1_not: String
  address_line1_in: [String!]
  address_line1_not_in: [String!]
  address_line1_lt: String
  address_line1_lte: String
  address_line1_gt: String
  address_line1_gte: String
  address_line1_contains: String
  address_line1_not_contains: String
  address_line1_starts_with: String
  address_line1_not_starts_with: String
  address_line1_ends_with: String
  address_line1_not_ends_with: String
  address_line1_check: String
  address_line1_check_not: String
  address_line1_check_in: [String!]
  address_line1_check_not_in: [String!]
  address_line1_check_lt: String
  address_line1_check_lte: String
  address_line1_check_gt: String
  address_line1_check_gte: String
  address_line1_check_contains: String
  address_line1_check_not_contains: String
  address_line1_check_starts_with: String
  address_line1_check_not_starts_with: String
  address_line1_check_ends_with: String
  address_line1_check_not_ends_with: String
  address_line2: String
  address_line2_not: String
  address_line2_in: [String!]
  address_line2_not_in: [String!]
  address_line2_lt: String
  address_line2_lte: String
  address_line2_gt: String
  address_line2_gte: String
  address_line2_contains: String
  address_line2_not_contains: String
  address_line2_starts_with: String
  address_line2_not_starts_with: String
  address_line2_ends_with: String
  address_line2_not_ends_with: String
  address_state: String
  address_state_not: String
  address_state_in: [String!]
  address_state_not_in: [String!]
  address_state_lt: String
  address_state_lte: String
  address_state_gt: String
  address_state_gte: String
  address_state_contains: String
  address_state_not_contains: String
  address_state_starts_with: String
  address_state_not_starts_with: String
  address_state_ends_with: String
  address_state_not_ends_with: String
  address_zip: String
  address_zip_not: String
  address_zip_in: [String!]
  address_zip_not_in: [String!]
  address_zip_lt: String
  address_zip_lte: String
  address_zip_gt: String
  address_zip_gte: String
  address_zip_contains: String
  address_zip_not_contains: String
  address_zip_starts_with: String
  address_zip_not_starts_with: String
  address_zip_ends_with: String
  address_zip_not_ends_with: String
  address_zip_check: String
  address_zip_check_not: String
  address_zip_check_in: [String!]
  address_zip_check_not_in: [String!]
  address_zip_check_lt: String
  address_zip_check_lte: String
  address_zip_check_gt: String
  address_zip_check_gte: String
  address_zip_check_contains: String
  address_zip_check_not_contains: String
  address_zip_check_starts_with: String
  address_zip_check_not_starts_with: String
  address_zip_check_ends_with: String
  address_zip_check_not_ends_with: String
  stripeCustomerId: String
  stripeCustomerId_not: String
  stripeCustomerId_in: [String!]
  stripeCustomerId_not_in: [String!]
  stripeCustomerId_lt: String
  stripeCustomerId_lte: String
  stripeCustomerId_gt: String
  stripeCustomerId_gte: String
  stripeCustomerId_contains: String
  stripeCustomerId_not_contains: String
  stripeCustomerId_starts_with: String
  stripeCustomerId_not_starts_with: String
  stripeCustomerId_ends_with: String
  stripeCustomerId_not_ends_with: String
  exp_month: Int
  exp_month_not: Int
  exp_month_in: [Int!]
  exp_month_not_in: [Int!]
  exp_month_lt: Int
  exp_month_lte: Int
  exp_month_gt: Int
  exp_month_gte: Int
  exp_year: Int
  exp_year_not: Int
  exp_year_in: [Int!]
  exp_year_not_in: [Int!]
  exp_year_lt: Int
  exp_year_lte: Int
  exp_year_gt: Int
  exp_year_gte: Int
  fingerprint: String
  fingerprint_not: String
  fingerprint_in: [String!]
  fingerprint_not_in: [String!]
  fingerprint_lt: String
  fingerprint_lte: String
  fingerprint_gt: String
  fingerprint_gte: String
  fingerprint_contains: String
  fingerprint_not_contains: String
  fingerprint_starts_with: String
  fingerprint_not_starts_with: String
  fingerprint_ends_with: String
  fingerprint_not_ends_with: String
  last4: String
  last4_not: String
  last4_in: [String!]
  last4_not_in: [String!]
  last4_lt: String
  last4_lte: String
  last4_gt: String
  last4_gte: String
  last4_contains: String
  last4_not_contains: String
  last4_starts_with: String
  last4_not_starts_with: String
  last4_ends_with: String
  last4_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  object: String
  object_not: String
  object_in: [String!]
  object_not_in: [String!]
  object_lt: String
  object_lte: String
  object_gt: String
  object_gte: String
  object_contains: String
  object_not_contains: String
  object_starts_with: String
  object_not_starts_with: String
  object_ends_with: String
  object_not_ends_with: String
  cvc_check: String
  cvc_check_not: String
  cvc_check_in: [String!]
  cvc_check_not_in: [String!]
  cvc_check_lt: String
  cvc_check_lte: String
  cvc_check_gt: String
  cvc_check_gte: String
  cvc_check_contains: String
  cvc_check_not_contains: String
  cvc_check_starts_with: String
  cvc_check_not_starts_with: String
  cvc_check_ends_with: String
  cvc_check_not_ends_with: String
  funding: String
  funding_not: String
  funding_in: [String!]
  funding_not_in: [String!]
  funding_lt: String
  funding_lte: String
  funding_gt: String
  funding_gte: String
  funding_contains: String
  funding_not_contains: String
  funding_starts_with: String
  funding_not_starts_with: String
  funding_ends_with: String
  funding_not_ends_with: String
  AND: [CreditCardScalarWhereInput!]
  OR: [CreditCardScalarWhereInput!]
  NOT: [CreditCardScalarWhereInput!]
}

type CreditCardSubscriptionPayload {
  mutation: MutationType!
  node: CreditCard
  updatedFields: [String!]
  previousValues: CreditCardPreviousValues
}

input CreditCardSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CreditCardWhereInput
  AND: [CreditCardSubscriptionWhereInput!]
  OR: [CreditCardSubscriptionWhereInput!]
  NOT: [CreditCardSubscriptionWhereInput!]
}

input CreditCardUpdateDataInput {
  cardOwner: UserUpdateOneRequiredWithoutCreditCardsInput
  stripeCardId: String
  brand: String
  country: String
  address_city: String
  address_country: String
  address_line1: String
  address_line1_check: String
  address_line2: String
  address_state: String
  address_zip: String
  address_zip_check: String
  stripeCustomerId: String
  exp_month: Int
  exp_year: Int
  fingerprint: String
  last4: String
  name: String
  object: String
  cvc_check: String
  funding: String
}

input CreditCardUpdateInput {
  cardOwner: UserUpdateOneRequiredWithoutCreditCardsInput
  stripeCardId: String
  brand: String
  country: String
  address_city: String
  address_country: String
  address_line1: String
  address_line1_check: String
  address_line2: String
  address_state: String
  address_zip: String
  address_zip_check: String
  stripeCustomerId: String
  exp_month: Int
  exp_year: Int
  fingerprint: String
  last4: String
  name: String
  object: String
  cvc_check: String
  funding: String
}

input CreditCardUpdateManyDataInput {
  stripeCardId: String
  brand: String
  country: String
  address_city: String
  address_country: String
  address_line1: String
  address_line1_check: String
  address_line2: String
  address_state: String
  address_zip: String
  address_zip_check: String
  stripeCustomerId: String
  exp_month: Int
  exp_year: Int
  fingerprint: String
  last4: String
  name: String
  object: String
  cvc_check: String
  funding: String
}

input CreditCardUpdateManyMutationInput {
  stripeCardId: String
  brand: String
  country: String
  address_city: String
  address_country: String
  address_line1: String
  address_line1_check: String
  address_line2: String
  address_state: String
  address_zip: String
  address_zip_check: String
  stripeCustomerId: String
  exp_month: Int
  exp_year: Int
  fingerprint: String
  last4: String
  name: String
  object: String
  cvc_check: String
  funding: String
}

input CreditCardUpdateManyWithoutCardOwnerInput {
  create: [CreditCardCreateWithoutCardOwnerInput!]
  delete: [CreditCardWhereUniqueInput!]
  connect: [CreditCardWhereUniqueInput!]
  set: [CreditCardWhereUniqueInput!]
  disconnect: [CreditCardWhereUniqueInput!]
  update: [CreditCardUpdateWithWhereUniqueWithoutCardOwnerInput!]
  upsert: [CreditCardUpsertWithWhereUniqueWithoutCardOwnerInput!]
  deleteMany: [CreditCardScalarWhereInput!]
  updateMany: [CreditCardUpdateManyWithWhereNestedInput!]
}

input CreditCardUpdateManyWithWhereNestedInput {
  where: CreditCardScalarWhereInput!
  data: CreditCardUpdateManyDataInput!
}

input CreditCardUpdateOneInput {
  create: CreditCardCreateInput
  update: CreditCardUpdateDataInput
  upsert: CreditCardUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: CreditCardWhereUniqueInput
}

input CreditCardUpdateWithoutCardOwnerDataInput {
  stripeCardId: String
  brand: String
  country: String
  address_city: String
  address_country: String
  address_line1: String
  address_line1_check: String
  address_line2: String
  address_state: String
  address_zip: String
  address_zip_check: String
  stripeCustomerId: String
  exp_month: Int
  exp_year: Int
  fingerprint: String
  last4: String
  name: String
  object: String
  cvc_check: String
  funding: String
}

input CreditCardUpdateWithWhereUniqueWithoutCardOwnerInput {
  where: CreditCardWhereUniqueInput!
  data: CreditCardUpdateWithoutCardOwnerDataInput!
}

input CreditCardUpsertNestedInput {
  update: CreditCardUpdateDataInput!
  create: CreditCardCreateInput!
}

input CreditCardUpsertWithWhereUniqueWithoutCardOwnerInput {
  where: CreditCardWhereUniqueInput!
  update: CreditCardUpdateWithoutCardOwnerDataInput!
  create: CreditCardCreateWithoutCardOwnerInput!
}

input CreditCardWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  cardOwner: UserWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  stripeCardId: String
  stripeCardId_not: String
  stripeCardId_in: [String!]
  stripeCardId_not_in: [String!]
  stripeCardId_lt: String
  stripeCardId_lte: String
  stripeCardId_gt: String
  stripeCardId_gte: String
  stripeCardId_contains: String
  stripeCardId_not_contains: String
  stripeCardId_starts_with: String
  stripeCardId_not_starts_with: String
  stripeCardId_ends_with: String
  stripeCardId_not_ends_with: String
  brand: String
  brand_not: String
  brand_in: [String!]
  brand_not_in: [String!]
  brand_lt: String
  brand_lte: String
  brand_gt: String
  brand_gte: String
  brand_contains: String
  brand_not_contains: String
  brand_starts_with: String
  brand_not_starts_with: String
  brand_ends_with: String
  brand_not_ends_with: String
  country: String
  country_not: String
  country_in: [String!]
  country_not_in: [String!]
  country_lt: String
  country_lte: String
  country_gt: String
  country_gte: String
  country_contains: String
  country_not_contains: String
  country_starts_with: String
  country_not_starts_with: String
  country_ends_with: String
  country_not_ends_with: String
  address_city: String
  address_city_not: String
  address_city_in: [String!]
  address_city_not_in: [String!]
  address_city_lt: String
  address_city_lte: String
  address_city_gt: String
  address_city_gte: String
  address_city_contains: String
  address_city_not_contains: String
  address_city_starts_with: String
  address_city_not_starts_with: String
  address_city_ends_with: String
  address_city_not_ends_with: String
  address_country: String
  address_country_not: String
  address_country_in: [String!]
  address_country_not_in: [String!]
  address_country_lt: String
  address_country_lte: String
  address_country_gt: String
  address_country_gte: String
  address_country_contains: String
  address_country_not_contains: String
  address_country_starts_with: String
  address_country_not_starts_with: String
  address_country_ends_with: String
  address_country_not_ends_with: String
  address_line1: String
  address_line1_not: String
  address_line1_in: [String!]
  address_line1_not_in: [String!]
  address_line1_lt: String
  address_line1_lte: String
  address_line1_gt: String
  address_line1_gte: String
  address_line1_contains: String
  address_line1_not_contains: String
  address_line1_starts_with: String
  address_line1_not_starts_with: String
  address_line1_ends_with: String
  address_line1_not_ends_with: String
  address_line1_check: String
  address_line1_check_not: String
  address_line1_check_in: [String!]
  address_line1_check_not_in: [String!]
  address_line1_check_lt: String
  address_line1_check_lte: String
  address_line1_check_gt: String
  address_line1_check_gte: String
  address_line1_check_contains: String
  address_line1_check_not_contains: String
  address_line1_check_starts_with: String
  address_line1_check_not_starts_with: String
  address_line1_check_ends_with: String
  address_line1_check_not_ends_with: String
  address_line2: String
  address_line2_not: String
  address_line2_in: [String!]
  address_line2_not_in: [String!]
  address_line2_lt: String
  address_line2_lte: String
  address_line2_gt: String
  address_line2_gte: String
  address_line2_contains: String
  address_line2_not_contains: String
  address_line2_starts_with: String
  address_line2_not_starts_with: String
  address_line2_ends_with: String
  address_line2_not_ends_with: String
  address_state: String
  address_state_not: String
  address_state_in: [String!]
  address_state_not_in: [String!]
  address_state_lt: String
  address_state_lte: String
  address_state_gt: String
  address_state_gte: String
  address_state_contains: String
  address_state_not_contains: String
  address_state_starts_with: String
  address_state_not_starts_with: String
  address_state_ends_with: String
  address_state_not_ends_with: String
  address_zip: String
  address_zip_not: String
  address_zip_in: [String!]
  address_zip_not_in: [String!]
  address_zip_lt: String
  address_zip_lte: String
  address_zip_gt: String
  address_zip_gte: String
  address_zip_contains: String
  address_zip_not_contains: String
  address_zip_starts_with: String
  address_zip_not_starts_with: String
  address_zip_ends_with: String
  address_zip_not_ends_with: String
  address_zip_check: String
  address_zip_check_not: String
  address_zip_check_in: [String!]
  address_zip_check_not_in: [String!]
  address_zip_check_lt: String
  address_zip_check_lte: String
  address_zip_check_gt: String
  address_zip_check_gte: String
  address_zip_check_contains: String
  address_zip_check_not_contains: String
  address_zip_check_starts_with: String
  address_zip_check_not_starts_with: String
  address_zip_check_ends_with: String
  address_zip_check_not_ends_with: String
  stripeCustomerId: String
  stripeCustomerId_not: String
  stripeCustomerId_in: [String!]
  stripeCustomerId_not_in: [String!]
  stripeCustomerId_lt: String
  stripeCustomerId_lte: String
  stripeCustomerId_gt: String
  stripeCustomerId_gte: String
  stripeCustomerId_contains: String
  stripeCustomerId_not_contains: String
  stripeCustomerId_starts_with: String
  stripeCustomerId_not_starts_with: String
  stripeCustomerId_ends_with: String
  stripeCustomerId_not_ends_with: String
  exp_month: Int
  exp_month_not: Int
  exp_month_in: [Int!]
  exp_month_not_in: [Int!]
  exp_month_lt: Int
  exp_month_lte: Int
  exp_month_gt: Int
  exp_month_gte: Int
  exp_year: Int
  exp_year_not: Int
  exp_year_in: [Int!]
  exp_year_not_in: [Int!]
  exp_year_lt: Int
  exp_year_lte: Int
  exp_year_gt: Int
  exp_year_gte: Int
  fingerprint: String
  fingerprint_not: String
  fingerprint_in: [String!]
  fingerprint_not_in: [String!]
  fingerprint_lt: String
  fingerprint_lte: String
  fingerprint_gt: String
  fingerprint_gte: String
  fingerprint_contains: String
  fingerprint_not_contains: String
  fingerprint_starts_with: String
  fingerprint_not_starts_with: String
  fingerprint_ends_with: String
  fingerprint_not_ends_with: String
  last4: String
  last4_not: String
  last4_in: [String!]
  last4_not_in: [String!]
  last4_lt: String
  last4_lte: String
  last4_gt: String
  last4_gte: String
  last4_contains: String
  last4_not_contains: String
  last4_starts_with: String
  last4_not_starts_with: String
  last4_ends_with: String
  last4_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  object: String
  object_not: String
  object_in: [String!]
  object_not_in: [String!]
  object_lt: String
  object_lte: String
  object_gt: String
  object_gte: String
  object_contains: String
  object_not_contains: String
  object_starts_with: String
  object_not_starts_with: String
  object_ends_with: String
  object_not_ends_with: String
  cvc_check: String
  cvc_check_not: String
  cvc_check_in: [String!]
  cvc_check_not_in: [String!]
  cvc_check_lt: String
  cvc_check_lte: String
  cvc_check_gt: String
  cvc_check_gte: String
  cvc_check_contains: String
  cvc_check_not_contains: String
  cvc_check_starts_with: String
  cvc_check_not_starts_with: String
  cvc_check_ends_with: String
  cvc_check_not_ends_with: String
  funding: String
  funding_not: String
  funding_in: [String!]
  funding_not_in: [String!]
  funding_lt: String
  funding_lte: String
  funding_gt: String
  funding_gte: String
  funding_contains: String
  funding_not_contains: String
  funding_starts_with: String
  funding_not_starts_with: String
  funding_ends_with: String
  funding_not_ends_with: String
  AND: [CreditCardWhereInput!]
  OR: [CreditCardWhereInput!]
  NOT: [CreditCardWhereInput!]
}

input CreditCardWhereUniqueInput {
  id: ID
  stripeCardId: String
}

scalar DateTime

type File {
  id: ID!
  updatedAt: DateTime
  createdAt: DateTime!
  filename: String!
  mimetype: String!
  encoding: String!
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
  userPhotoId: User
  userProfilePhoto: User
  userSignature: User
  preTenancyProofOfAddress: PreTenancyForm
  userProofOfAddress: User
  propertyOwnershipProof: Property
  propertyImages: Property
  propertyInsulationFile: Property
  inspectionFiles: Inspection
  codeComplianceCert: PropertyFiles
  certOfAcceptance: PropertyFiles
}

type FileConnection {
  pageInfo: PageInfo!
  edges: [FileEdge]!
  aggregate: AggregateFile!
}

input FileCreateInput {
  id: ID
  filename: String!
  mimetype: String!
  encoding: String!
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
  userPhotoId: UserCreateOneWithoutPhotoIdentificationInput
  userProfilePhoto: UserCreateOneWithoutProfilePhotoInput
  userSignature: UserCreateOneWithoutSignatureInput
  preTenancyProofOfAddress: PreTenancyFormCreateOneWithoutProofOfAddressInput
  userProofOfAddress: UserCreateOneWithoutProofOfAddressInput
  propertyOwnershipProof: PropertyCreateOneWithoutProofOfOwnershipInput
  propertyImages: PropertyCreateOneWithoutImagesInput
  propertyInsulationFile: PropertyCreateOneWithoutInsulationStatementFileInput
  inspectionFiles: InspectionCreateOneWithoutFilesInput
  codeComplianceCert: PropertyFilesCreateOneWithoutCodeComplianceCertInput
  certOfAcceptance: PropertyFilesCreateOneWithoutCertOfAcceptanceInput
}

input FileCreateManyWithoutInspectionFilesInput {
  create: [FileCreateWithoutInspectionFilesInput!]
  connect: [FileWhereUniqueInput!]
}

input FileCreateManyWithoutPropertyImagesInput {
  create: [FileCreateWithoutPropertyImagesInput!]
  connect: [FileWhereUniqueInput!]
}

input FileCreateOneWithoutCertOfAcceptanceInput {
  create: FileCreateWithoutCertOfAcceptanceInput
  connect: FileWhereUniqueInput
}

input FileCreateOneWithoutCodeComplianceCertInput {
  create: FileCreateWithoutCodeComplianceCertInput
  connect: FileWhereUniqueInput
}

input FileCreateOneWithoutPreTenancyProofOfAddressInput {
  create: FileCreateWithoutPreTenancyProofOfAddressInput
  connect: FileWhereUniqueInput
}

input FileCreateOneWithoutPropertyInsulationFileInput {
  create: FileCreateWithoutPropertyInsulationFileInput
  connect: FileWhereUniqueInput
}

input FileCreateOneWithoutPropertyOwnershipProofInput {
  create: FileCreateWithoutPropertyOwnershipProofInput
  connect: FileWhereUniqueInput
}

input FileCreateOneWithoutUserPhotoIdInput {
  create: FileCreateWithoutUserPhotoIdInput
  connect: FileWhereUniqueInput
}

input FileCreateOneWithoutUserProfilePhotoInput {
  create: FileCreateWithoutUserProfilePhotoInput
  connect: FileWhereUniqueInput
}

input FileCreateOneWithoutUserProofOfAddressInput {
  create: FileCreateWithoutUserProofOfAddressInput
  connect: FileWhereUniqueInput
}

input FileCreateOneWithoutUserSignatureInput {
  create: FileCreateWithoutUserSignatureInput
  connect: FileWhereUniqueInput
}

input FileCreateWithoutCertOfAcceptanceInput {
  id: ID
  filename: String!
  mimetype: String!
  encoding: String!
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
  userPhotoId: UserCreateOneWithoutPhotoIdentificationInput
  userProfilePhoto: UserCreateOneWithoutProfilePhotoInput
  userSignature: UserCreateOneWithoutSignatureInput
  preTenancyProofOfAddress: PreTenancyFormCreateOneWithoutProofOfAddressInput
  userProofOfAddress: UserCreateOneWithoutProofOfAddressInput
  propertyOwnershipProof: PropertyCreateOneWithoutProofOfOwnershipInput
  propertyImages: PropertyCreateOneWithoutImagesInput
  propertyInsulationFile: PropertyCreateOneWithoutInsulationStatementFileInput
  inspectionFiles: InspectionCreateOneWithoutFilesInput
  codeComplianceCert: PropertyFilesCreateOneWithoutCodeComplianceCertInput
}

input FileCreateWithoutCodeComplianceCertInput {
  id: ID
  filename: String!
  mimetype: String!
  encoding: String!
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
  userPhotoId: UserCreateOneWithoutPhotoIdentificationInput
  userProfilePhoto: UserCreateOneWithoutProfilePhotoInput
  userSignature: UserCreateOneWithoutSignatureInput
  preTenancyProofOfAddress: PreTenancyFormCreateOneWithoutProofOfAddressInput
  userProofOfAddress: UserCreateOneWithoutProofOfAddressInput
  propertyOwnershipProof: PropertyCreateOneWithoutProofOfOwnershipInput
  propertyImages: PropertyCreateOneWithoutImagesInput
  propertyInsulationFile: PropertyCreateOneWithoutInsulationStatementFileInput
  inspectionFiles: InspectionCreateOneWithoutFilesInput
  certOfAcceptance: PropertyFilesCreateOneWithoutCertOfAcceptanceInput
}

input FileCreateWithoutInspectionFilesInput {
  id: ID
  filename: String!
  mimetype: String!
  encoding: String!
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
  userPhotoId: UserCreateOneWithoutPhotoIdentificationInput
  userProfilePhoto: UserCreateOneWithoutProfilePhotoInput
  userSignature: UserCreateOneWithoutSignatureInput
  preTenancyProofOfAddress: PreTenancyFormCreateOneWithoutProofOfAddressInput
  userProofOfAddress: UserCreateOneWithoutProofOfAddressInput
  propertyOwnershipProof: PropertyCreateOneWithoutProofOfOwnershipInput
  propertyImages: PropertyCreateOneWithoutImagesInput
  propertyInsulationFile: PropertyCreateOneWithoutInsulationStatementFileInput
  codeComplianceCert: PropertyFilesCreateOneWithoutCodeComplianceCertInput
  certOfAcceptance: PropertyFilesCreateOneWithoutCertOfAcceptanceInput
}

input FileCreateWithoutPreTenancyProofOfAddressInput {
  id: ID
  filename: String!
  mimetype: String!
  encoding: String!
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
  userPhotoId: UserCreateOneWithoutPhotoIdentificationInput
  userProfilePhoto: UserCreateOneWithoutProfilePhotoInput
  userSignature: UserCreateOneWithoutSignatureInput
  userProofOfAddress: UserCreateOneWithoutProofOfAddressInput
  propertyOwnershipProof: PropertyCreateOneWithoutProofOfOwnershipInput
  propertyImages: PropertyCreateOneWithoutImagesInput
  propertyInsulationFile: PropertyCreateOneWithoutInsulationStatementFileInput
  inspectionFiles: InspectionCreateOneWithoutFilesInput
  codeComplianceCert: PropertyFilesCreateOneWithoutCodeComplianceCertInput
  certOfAcceptance: PropertyFilesCreateOneWithoutCertOfAcceptanceInput
}

input FileCreateWithoutPropertyImagesInput {
  id: ID
  filename: String!
  mimetype: String!
  encoding: String!
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
  userPhotoId: UserCreateOneWithoutPhotoIdentificationInput
  userProfilePhoto: UserCreateOneWithoutProfilePhotoInput
  userSignature: UserCreateOneWithoutSignatureInput
  preTenancyProofOfAddress: PreTenancyFormCreateOneWithoutProofOfAddressInput
  userProofOfAddress: UserCreateOneWithoutProofOfAddressInput
  propertyOwnershipProof: PropertyCreateOneWithoutProofOfOwnershipInput
  propertyInsulationFile: PropertyCreateOneWithoutInsulationStatementFileInput
  inspectionFiles: InspectionCreateOneWithoutFilesInput
  codeComplianceCert: PropertyFilesCreateOneWithoutCodeComplianceCertInput
  certOfAcceptance: PropertyFilesCreateOneWithoutCertOfAcceptanceInput
}

input FileCreateWithoutPropertyInsulationFileInput {
  id: ID
  filename: String!
  mimetype: String!
  encoding: String!
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
  userPhotoId: UserCreateOneWithoutPhotoIdentificationInput
  userProfilePhoto: UserCreateOneWithoutProfilePhotoInput
  userSignature: UserCreateOneWithoutSignatureInput
  preTenancyProofOfAddress: PreTenancyFormCreateOneWithoutProofOfAddressInput
  userProofOfAddress: UserCreateOneWithoutProofOfAddressInput
  propertyOwnershipProof: PropertyCreateOneWithoutProofOfOwnershipInput
  propertyImages: PropertyCreateOneWithoutImagesInput
  inspectionFiles: InspectionCreateOneWithoutFilesInput
  codeComplianceCert: PropertyFilesCreateOneWithoutCodeComplianceCertInput
  certOfAcceptance: PropertyFilesCreateOneWithoutCertOfAcceptanceInput
}

input FileCreateWithoutPropertyOwnershipProofInput {
  id: ID
  filename: String!
  mimetype: String!
  encoding: String!
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
  userPhotoId: UserCreateOneWithoutPhotoIdentificationInput
  userProfilePhoto: UserCreateOneWithoutProfilePhotoInput
  userSignature: UserCreateOneWithoutSignatureInput
  preTenancyProofOfAddress: PreTenancyFormCreateOneWithoutProofOfAddressInput
  userProofOfAddress: UserCreateOneWithoutProofOfAddressInput
  propertyImages: PropertyCreateOneWithoutImagesInput
  propertyInsulationFile: PropertyCreateOneWithoutInsulationStatementFileInput
  inspectionFiles: InspectionCreateOneWithoutFilesInput
  codeComplianceCert: PropertyFilesCreateOneWithoutCodeComplianceCertInput
  certOfAcceptance: PropertyFilesCreateOneWithoutCertOfAcceptanceInput
}

input FileCreateWithoutUserPhotoIdInput {
  id: ID
  filename: String!
  mimetype: String!
  encoding: String!
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
  userProfilePhoto: UserCreateOneWithoutProfilePhotoInput
  userSignature: UserCreateOneWithoutSignatureInput
  preTenancyProofOfAddress: PreTenancyFormCreateOneWithoutProofOfAddressInput
  userProofOfAddress: UserCreateOneWithoutProofOfAddressInput
  propertyOwnershipProof: PropertyCreateOneWithoutProofOfOwnershipInput
  propertyImages: PropertyCreateOneWithoutImagesInput
  propertyInsulationFile: PropertyCreateOneWithoutInsulationStatementFileInput
  inspectionFiles: InspectionCreateOneWithoutFilesInput
  codeComplianceCert: PropertyFilesCreateOneWithoutCodeComplianceCertInput
  certOfAcceptance: PropertyFilesCreateOneWithoutCertOfAcceptanceInput
}

input FileCreateWithoutUserProfilePhotoInput {
  id: ID
  filename: String!
  mimetype: String!
  encoding: String!
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
  userPhotoId: UserCreateOneWithoutPhotoIdentificationInput
  userSignature: UserCreateOneWithoutSignatureInput
  preTenancyProofOfAddress: PreTenancyFormCreateOneWithoutProofOfAddressInput
  userProofOfAddress: UserCreateOneWithoutProofOfAddressInput
  propertyOwnershipProof: PropertyCreateOneWithoutProofOfOwnershipInput
  propertyImages: PropertyCreateOneWithoutImagesInput
  propertyInsulationFile: PropertyCreateOneWithoutInsulationStatementFileInput
  inspectionFiles: InspectionCreateOneWithoutFilesInput
  codeComplianceCert: PropertyFilesCreateOneWithoutCodeComplianceCertInput
  certOfAcceptance: PropertyFilesCreateOneWithoutCertOfAcceptanceInput
}

input FileCreateWithoutUserProofOfAddressInput {
  id: ID
  filename: String!
  mimetype: String!
  encoding: String!
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
  userPhotoId: UserCreateOneWithoutPhotoIdentificationInput
  userProfilePhoto: UserCreateOneWithoutProfilePhotoInput
  userSignature: UserCreateOneWithoutSignatureInput
  preTenancyProofOfAddress: PreTenancyFormCreateOneWithoutProofOfAddressInput
  propertyOwnershipProof: PropertyCreateOneWithoutProofOfOwnershipInput
  propertyImages: PropertyCreateOneWithoutImagesInput
  propertyInsulationFile: PropertyCreateOneWithoutInsulationStatementFileInput
  inspectionFiles: InspectionCreateOneWithoutFilesInput
  codeComplianceCert: PropertyFilesCreateOneWithoutCodeComplianceCertInput
  certOfAcceptance: PropertyFilesCreateOneWithoutCertOfAcceptanceInput
}

input FileCreateWithoutUserSignatureInput {
  id: ID
  filename: String!
  mimetype: String!
  encoding: String!
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
  userPhotoId: UserCreateOneWithoutPhotoIdentificationInput
  userProfilePhoto: UserCreateOneWithoutProfilePhotoInput
  preTenancyProofOfAddress: PreTenancyFormCreateOneWithoutProofOfAddressInput
  userProofOfAddress: UserCreateOneWithoutProofOfAddressInput
  propertyOwnershipProof: PropertyCreateOneWithoutProofOfOwnershipInput
  propertyImages: PropertyCreateOneWithoutImagesInput
  propertyInsulationFile: PropertyCreateOneWithoutInsulationStatementFileInput
  inspectionFiles: InspectionCreateOneWithoutFilesInput
  codeComplianceCert: PropertyFilesCreateOneWithoutCodeComplianceCertInput
  certOfAcceptance: PropertyFilesCreateOneWithoutCertOfAcceptanceInput
}

type FileEdge {
  node: File!
  cursor: String!
}

enum FileOrderByInput {
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  filename_ASC
  filename_DESC
  mimetype_ASC
  mimetype_DESC
  encoding_ASC
  encoding_DESC
  asset_id_ASC
  asset_id_DESC
  public_id_ASC
  public_id_DESC
  version_ASC
  version_DESC
  version_id_ASC
  version_id_DESC
  signature_ASC
  signature_DESC
  width_ASC
  width_DESC
  height_ASC
  height_DESC
  format_ASC
  format_DESC
  resource_type_ASC
  resource_type_DESC
  created_at_ASC
  created_at_DESC
  tags_ASC
  tags_DESC
  pages_ASC
  pages_DESC
  bytes_ASC
  bytes_DESC
  type_ASC
  type_DESC
  etag_ASC
  etag_DESC
  placeholder_ASC
  placeholder_DESC
  url_ASC
  url_DESC
  secure_url_ASC
  secure_url_DESC
  access_mode_ASC
  access_mode_DESC
  original_filename_ASC
  original_filename_DESC
}

type FilePreviousValues {
  id: ID!
  updatedAt: DateTime
  createdAt: DateTime!
  filename: String!
  mimetype: String!
  encoding: String!
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
}

input FileScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  filename: String
  filename_not: String
  filename_in: [String!]
  filename_not_in: [String!]
  filename_lt: String
  filename_lte: String
  filename_gt: String
  filename_gte: String
  filename_contains: String
  filename_not_contains: String
  filename_starts_with: String
  filename_not_starts_with: String
  filename_ends_with: String
  filename_not_ends_with: String
  mimetype: String
  mimetype_not: String
  mimetype_in: [String!]
  mimetype_not_in: [String!]
  mimetype_lt: String
  mimetype_lte: String
  mimetype_gt: String
  mimetype_gte: String
  mimetype_contains: String
  mimetype_not_contains: String
  mimetype_starts_with: String
  mimetype_not_starts_with: String
  mimetype_ends_with: String
  mimetype_not_ends_with: String
  encoding: String
  encoding_not: String
  encoding_in: [String!]
  encoding_not_in: [String!]
  encoding_lt: String
  encoding_lte: String
  encoding_gt: String
  encoding_gte: String
  encoding_contains: String
  encoding_not_contains: String
  encoding_starts_with: String
  encoding_not_starts_with: String
  encoding_ends_with: String
  encoding_not_ends_with: String
  asset_id: String
  asset_id_not: String
  asset_id_in: [String!]
  asset_id_not_in: [String!]
  asset_id_lt: String
  asset_id_lte: String
  asset_id_gt: String
  asset_id_gte: String
  asset_id_contains: String
  asset_id_not_contains: String
  asset_id_starts_with: String
  asset_id_not_starts_with: String
  asset_id_ends_with: String
  asset_id_not_ends_with: String
  public_id: String
  public_id_not: String
  public_id_in: [String!]
  public_id_not_in: [String!]
  public_id_lt: String
  public_id_lte: String
  public_id_gt: String
  public_id_gte: String
  public_id_contains: String
  public_id_not_contains: String
  public_id_starts_with: String
  public_id_not_starts_with: String
  public_id_ends_with: String
  public_id_not_ends_with: String
  version: Int
  version_not: Int
  version_in: [Int!]
  version_not_in: [Int!]
  version_lt: Int
  version_lte: Int
  version_gt: Int
  version_gte: Int
  version_id: String
  version_id_not: String
  version_id_in: [String!]
  version_id_not_in: [String!]
  version_id_lt: String
  version_id_lte: String
  version_id_gt: String
  version_id_gte: String
  version_id_contains: String
  version_id_not_contains: String
  version_id_starts_with: String
  version_id_not_starts_with: String
  version_id_ends_with: String
  version_id_not_ends_with: String
  signature: String
  signature_not: String
  signature_in: [String!]
  signature_not_in: [String!]
  signature_lt: String
  signature_lte: String
  signature_gt: String
  signature_gte: String
  signature_contains: String
  signature_not_contains: String
  signature_starts_with: String
  signature_not_starts_with: String
  signature_ends_with: String
  signature_not_ends_with: String
  width: Int
  width_not: Int
  width_in: [Int!]
  width_not_in: [Int!]
  width_lt: Int
  width_lte: Int
  width_gt: Int
  width_gte: Int
  height: Int
  height_not: Int
  height_in: [Int!]
  height_not_in: [Int!]
  height_lt: Int
  height_lte: Int
  height_gt: Int
  height_gte: Int
  format: String
  format_not: String
  format_in: [String!]
  format_not_in: [String!]
  format_lt: String
  format_lte: String
  format_gt: String
  format_gte: String
  format_contains: String
  format_not_contains: String
  format_starts_with: String
  format_not_starts_with: String
  format_ends_with: String
  format_not_ends_with: String
  resource_type: String
  resource_type_not: String
  resource_type_in: [String!]
  resource_type_not_in: [String!]
  resource_type_lt: String
  resource_type_lte: String
  resource_type_gt: String
  resource_type_gte: String
  resource_type_contains: String
  resource_type_not_contains: String
  resource_type_starts_with: String
  resource_type_not_starts_with: String
  resource_type_ends_with: String
  resource_type_not_ends_with: String
  created_at: DateTime
  created_at_not: DateTime
  created_at_in: [DateTime!]
  created_at_not_in: [DateTime!]
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  pages: Int
  pages_not: Int
  pages_in: [Int!]
  pages_not_in: [Int!]
  pages_lt: Int
  pages_lte: Int
  pages_gt: Int
  pages_gte: Int
  bytes: Int
  bytes_not: Int
  bytes_in: [Int!]
  bytes_not_in: [Int!]
  bytes_lt: Int
  bytes_lte: Int
  bytes_gt: Int
  bytes_gte: Int
  type: String
  type_not: String
  type_in: [String!]
  type_not_in: [String!]
  type_lt: String
  type_lte: String
  type_gt: String
  type_gte: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  etag: String
  etag_not: String
  etag_in: [String!]
  etag_not_in: [String!]
  etag_lt: String
  etag_lte: String
  etag_gt: String
  etag_gte: String
  etag_contains: String
  etag_not_contains: String
  etag_starts_with: String
  etag_not_starts_with: String
  etag_ends_with: String
  etag_not_ends_with: String
  placeholder: Boolean
  placeholder_not: Boolean
  url: String
  url_not: String
  url_in: [String!]
  url_not_in: [String!]
  url_lt: String
  url_lte: String
  url_gt: String
  url_gte: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  secure_url: String
  secure_url_not: String
  secure_url_in: [String!]
  secure_url_not_in: [String!]
  secure_url_lt: String
  secure_url_lte: String
  secure_url_gt: String
  secure_url_gte: String
  secure_url_contains: String
  secure_url_not_contains: String
  secure_url_starts_with: String
  secure_url_not_starts_with: String
  secure_url_ends_with: String
  secure_url_not_ends_with: String
  access_mode: String
  access_mode_not: String
  access_mode_in: [String!]
  access_mode_not_in: [String!]
  access_mode_lt: String
  access_mode_lte: String
  access_mode_gt: String
  access_mode_gte: String
  access_mode_contains: String
  access_mode_not_contains: String
  access_mode_starts_with: String
  access_mode_not_starts_with: String
  access_mode_ends_with: String
  access_mode_not_ends_with: String
  original_filename: String
  original_filename_not: String
  original_filename_in: [String!]
  original_filename_not_in: [String!]
  original_filename_lt: String
  original_filename_lte: String
  original_filename_gt: String
  original_filename_gte: String
  original_filename_contains: String
  original_filename_not_contains: String
  original_filename_starts_with: String
  original_filename_not_starts_with: String
  original_filename_ends_with: String
  original_filename_not_ends_with: String
  AND: [FileScalarWhereInput!]
  OR: [FileScalarWhereInput!]
  NOT: [FileScalarWhereInput!]
}

type FileSubscriptionPayload {
  mutation: MutationType!
  node: File
  updatedFields: [String!]
  previousValues: FilePreviousValues
}

input FileSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: FileWhereInput
  AND: [FileSubscriptionWhereInput!]
  OR: [FileSubscriptionWhereInput!]
  NOT: [FileSubscriptionWhereInput!]
}

input FileUpdateInput {
  filename: String
  mimetype: String
  encoding: String
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
  userPhotoId: UserUpdateOneWithoutPhotoIdentificationInput
  userProfilePhoto: UserUpdateOneWithoutProfilePhotoInput
  userSignature: UserUpdateOneWithoutSignatureInput
  preTenancyProofOfAddress: PreTenancyFormUpdateOneWithoutProofOfAddressInput
  userProofOfAddress: UserUpdateOneWithoutProofOfAddressInput
  propertyOwnershipProof: PropertyUpdateOneWithoutProofOfOwnershipInput
  propertyImages: PropertyUpdateOneWithoutImagesInput
  propertyInsulationFile: PropertyUpdateOneWithoutInsulationStatementFileInput
  inspectionFiles: InspectionUpdateOneWithoutFilesInput
  codeComplianceCert: PropertyFilesUpdateOneWithoutCodeComplianceCertInput
  certOfAcceptance: PropertyFilesUpdateOneWithoutCertOfAcceptanceInput
}

input FileUpdateManyDataInput {
  filename: String
  mimetype: String
  encoding: String
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
}

input FileUpdateManyMutationInput {
  filename: String
  mimetype: String
  encoding: String
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
}

input FileUpdateManyWithoutInspectionFilesInput {
  create: [FileCreateWithoutInspectionFilesInput!]
  delete: [FileWhereUniqueInput!]
  connect: [FileWhereUniqueInput!]
  set: [FileWhereUniqueInput!]
  disconnect: [FileWhereUniqueInput!]
  update: [FileUpdateWithWhereUniqueWithoutInspectionFilesInput!]
  upsert: [FileUpsertWithWhereUniqueWithoutInspectionFilesInput!]
  deleteMany: [FileScalarWhereInput!]
  updateMany: [FileUpdateManyWithWhereNestedInput!]
}

input FileUpdateManyWithoutPropertyImagesInput {
  create: [FileCreateWithoutPropertyImagesInput!]
  delete: [FileWhereUniqueInput!]
  connect: [FileWhereUniqueInput!]
  set: [FileWhereUniqueInput!]
  disconnect: [FileWhereUniqueInput!]
  update: [FileUpdateWithWhereUniqueWithoutPropertyImagesInput!]
  upsert: [FileUpsertWithWhereUniqueWithoutPropertyImagesInput!]
  deleteMany: [FileScalarWhereInput!]
  updateMany: [FileUpdateManyWithWhereNestedInput!]
}

input FileUpdateManyWithWhereNestedInput {
  where: FileScalarWhereInput!
  data: FileUpdateManyDataInput!
}

input FileUpdateOneWithoutCertOfAcceptanceInput {
  create: FileCreateWithoutCertOfAcceptanceInput
  update: FileUpdateWithoutCertOfAcceptanceDataInput
  upsert: FileUpsertWithoutCertOfAcceptanceInput
  delete: Boolean
  disconnect: Boolean
  connect: FileWhereUniqueInput
}

input FileUpdateOneWithoutCodeComplianceCertInput {
  create: FileCreateWithoutCodeComplianceCertInput
  update: FileUpdateWithoutCodeComplianceCertDataInput
  upsert: FileUpsertWithoutCodeComplianceCertInput
  delete: Boolean
  disconnect: Boolean
  connect: FileWhereUniqueInput
}

input FileUpdateOneWithoutPreTenancyProofOfAddressInput {
  create: FileCreateWithoutPreTenancyProofOfAddressInput
  update: FileUpdateWithoutPreTenancyProofOfAddressDataInput
  upsert: FileUpsertWithoutPreTenancyProofOfAddressInput
  delete: Boolean
  disconnect: Boolean
  connect: FileWhereUniqueInput
}

input FileUpdateOneWithoutPropertyInsulationFileInput {
  create: FileCreateWithoutPropertyInsulationFileInput
  update: FileUpdateWithoutPropertyInsulationFileDataInput
  upsert: FileUpsertWithoutPropertyInsulationFileInput
  delete: Boolean
  disconnect: Boolean
  connect: FileWhereUniqueInput
}

input FileUpdateOneWithoutPropertyOwnershipProofInput {
  create: FileCreateWithoutPropertyOwnershipProofInput
  update: FileUpdateWithoutPropertyOwnershipProofDataInput
  upsert: FileUpsertWithoutPropertyOwnershipProofInput
  delete: Boolean
  disconnect: Boolean
  connect: FileWhereUniqueInput
}

input FileUpdateOneWithoutUserPhotoIdInput {
  create: FileCreateWithoutUserPhotoIdInput
  update: FileUpdateWithoutUserPhotoIdDataInput
  upsert: FileUpsertWithoutUserPhotoIdInput
  delete: Boolean
  disconnect: Boolean
  connect: FileWhereUniqueInput
}

input FileUpdateOneWithoutUserProfilePhotoInput {
  create: FileCreateWithoutUserProfilePhotoInput
  update: FileUpdateWithoutUserProfilePhotoDataInput
  upsert: FileUpsertWithoutUserProfilePhotoInput
  delete: Boolean
  disconnect: Boolean
  connect: FileWhereUniqueInput
}

input FileUpdateOneWithoutUserProofOfAddressInput {
  create: FileCreateWithoutUserProofOfAddressInput
  update: FileUpdateWithoutUserProofOfAddressDataInput
  upsert: FileUpsertWithoutUserProofOfAddressInput
  delete: Boolean
  disconnect: Boolean
  connect: FileWhereUniqueInput
}

input FileUpdateOneWithoutUserSignatureInput {
  create: FileCreateWithoutUserSignatureInput
  update: FileUpdateWithoutUserSignatureDataInput
  upsert: FileUpsertWithoutUserSignatureInput
  delete: Boolean
  disconnect: Boolean
  connect: FileWhereUniqueInput
}

input FileUpdateWithoutCertOfAcceptanceDataInput {
  filename: String
  mimetype: String
  encoding: String
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
  userPhotoId: UserUpdateOneWithoutPhotoIdentificationInput
  userProfilePhoto: UserUpdateOneWithoutProfilePhotoInput
  userSignature: UserUpdateOneWithoutSignatureInput
  preTenancyProofOfAddress: PreTenancyFormUpdateOneWithoutProofOfAddressInput
  userProofOfAddress: UserUpdateOneWithoutProofOfAddressInput
  propertyOwnershipProof: PropertyUpdateOneWithoutProofOfOwnershipInput
  propertyImages: PropertyUpdateOneWithoutImagesInput
  propertyInsulationFile: PropertyUpdateOneWithoutInsulationStatementFileInput
  inspectionFiles: InspectionUpdateOneWithoutFilesInput
  codeComplianceCert: PropertyFilesUpdateOneWithoutCodeComplianceCertInput
}

input FileUpdateWithoutCodeComplianceCertDataInput {
  filename: String
  mimetype: String
  encoding: String
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
  userPhotoId: UserUpdateOneWithoutPhotoIdentificationInput
  userProfilePhoto: UserUpdateOneWithoutProfilePhotoInput
  userSignature: UserUpdateOneWithoutSignatureInput
  preTenancyProofOfAddress: PreTenancyFormUpdateOneWithoutProofOfAddressInput
  userProofOfAddress: UserUpdateOneWithoutProofOfAddressInput
  propertyOwnershipProof: PropertyUpdateOneWithoutProofOfOwnershipInput
  propertyImages: PropertyUpdateOneWithoutImagesInput
  propertyInsulationFile: PropertyUpdateOneWithoutInsulationStatementFileInput
  inspectionFiles: InspectionUpdateOneWithoutFilesInput
  certOfAcceptance: PropertyFilesUpdateOneWithoutCertOfAcceptanceInput
}

input FileUpdateWithoutInspectionFilesDataInput {
  filename: String
  mimetype: String
  encoding: String
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
  userPhotoId: UserUpdateOneWithoutPhotoIdentificationInput
  userProfilePhoto: UserUpdateOneWithoutProfilePhotoInput
  userSignature: UserUpdateOneWithoutSignatureInput
  preTenancyProofOfAddress: PreTenancyFormUpdateOneWithoutProofOfAddressInput
  userProofOfAddress: UserUpdateOneWithoutProofOfAddressInput
  propertyOwnershipProof: PropertyUpdateOneWithoutProofOfOwnershipInput
  propertyImages: PropertyUpdateOneWithoutImagesInput
  propertyInsulationFile: PropertyUpdateOneWithoutInsulationStatementFileInput
  codeComplianceCert: PropertyFilesUpdateOneWithoutCodeComplianceCertInput
  certOfAcceptance: PropertyFilesUpdateOneWithoutCertOfAcceptanceInput
}

input FileUpdateWithoutPreTenancyProofOfAddressDataInput {
  filename: String
  mimetype: String
  encoding: String
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
  userPhotoId: UserUpdateOneWithoutPhotoIdentificationInput
  userProfilePhoto: UserUpdateOneWithoutProfilePhotoInput
  userSignature: UserUpdateOneWithoutSignatureInput
  userProofOfAddress: UserUpdateOneWithoutProofOfAddressInput
  propertyOwnershipProof: PropertyUpdateOneWithoutProofOfOwnershipInput
  propertyImages: PropertyUpdateOneWithoutImagesInput
  propertyInsulationFile: PropertyUpdateOneWithoutInsulationStatementFileInput
  inspectionFiles: InspectionUpdateOneWithoutFilesInput
  codeComplianceCert: PropertyFilesUpdateOneWithoutCodeComplianceCertInput
  certOfAcceptance: PropertyFilesUpdateOneWithoutCertOfAcceptanceInput
}

input FileUpdateWithoutPropertyImagesDataInput {
  filename: String
  mimetype: String
  encoding: String
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
  userPhotoId: UserUpdateOneWithoutPhotoIdentificationInput
  userProfilePhoto: UserUpdateOneWithoutProfilePhotoInput
  userSignature: UserUpdateOneWithoutSignatureInput
  preTenancyProofOfAddress: PreTenancyFormUpdateOneWithoutProofOfAddressInput
  userProofOfAddress: UserUpdateOneWithoutProofOfAddressInput
  propertyOwnershipProof: PropertyUpdateOneWithoutProofOfOwnershipInput
  propertyInsulationFile: PropertyUpdateOneWithoutInsulationStatementFileInput
  inspectionFiles: InspectionUpdateOneWithoutFilesInput
  codeComplianceCert: PropertyFilesUpdateOneWithoutCodeComplianceCertInput
  certOfAcceptance: PropertyFilesUpdateOneWithoutCertOfAcceptanceInput
}

input FileUpdateWithoutPropertyInsulationFileDataInput {
  filename: String
  mimetype: String
  encoding: String
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
  userPhotoId: UserUpdateOneWithoutPhotoIdentificationInput
  userProfilePhoto: UserUpdateOneWithoutProfilePhotoInput
  userSignature: UserUpdateOneWithoutSignatureInput
  preTenancyProofOfAddress: PreTenancyFormUpdateOneWithoutProofOfAddressInput
  userProofOfAddress: UserUpdateOneWithoutProofOfAddressInput
  propertyOwnershipProof: PropertyUpdateOneWithoutProofOfOwnershipInput
  propertyImages: PropertyUpdateOneWithoutImagesInput
  inspectionFiles: InspectionUpdateOneWithoutFilesInput
  codeComplianceCert: PropertyFilesUpdateOneWithoutCodeComplianceCertInput
  certOfAcceptance: PropertyFilesUpdateOneWithoutCertOfAcceptanceInput
}

input FileUpdateWithoutPropertyOwnershipProofDataInput {
  filename: String
  mimetype: String
  encoding: String
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
  userPhotoId: UserUpdateOneWithoutPhotoIdentificationInput
  userProfilePhoto: UserUpdateOneWithoutProfilePhotoInput
  userSignature: UserUpdateOneWithoutSignatureInput
  preTenancyProofOfAddress: PreTenancyFormUpdateOneWithoutProofOfAddressInput
  userProofOfAddress: UserUpdateOneWithoutProofOfAddressInput
  propertyImages: PropertyUpdateOneWithoutImagesInput
  propertyInsulationFile: PropertyUpdateOneWithoutInsulationStatementFileInput
  inspectionFiles: InspectionUpdateOneWithoutFilesInput
  codeComplianceCert: PropertyFilesUpdateOneWithoutCodeComplianceCertInput
  certOfAcceptance: PropertyFilesUpdateOneWithoutCertOfAcceptanceInput
}

input FileUpdateWithoutUserPhotoIdDataInput {
  filename: String
  mimetype: String
  encoding: String
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
  userProfilePhoto: UserUpdateOneWithoutProfilePhotoInput
  userSignature: UserUpdateOneWithoutSignatureInput
  preTenancyProofOfAddress: PreTenancyFormUpdateOneWithoutProofOfAddressInput
  userProofOfAddress: UserUpdateOneWithoutProofOfAddressInput
  propertyOwnershipProof: PropertyUpdateOneWithoutProofOfOwnershipInput
  propertyImages: PropertyUpdateOneWithoutImagesInput
  propertyInsulationFile: PropertyUpdateOneWithoutInsulationStatementFileInput
  inspectionFiles: InspectionUpdateOneWithoutFilesInput
  codeComplianceCert: PropertyFilesUpdateOneWithoutCodeComplianceCertInput
  certOfAcceptance: PropertyFilesUpdateOneWithoutCertOfAcceptanceInput
}

input FileUpdateWithoutUserProfilePhotoDataInput {
  filename: String
  mimetype: String
  encoding: String
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
  userPhotoId: UserUpdateOneWithoutPhotoIdentificationInput
  userSignature: UserUpdateOneWithoutSignatureInput
  preTenancyProofOfAddress: PreTenancyFormUpdateOneWithoutProofOfAddressInput
  userProofOfAddress: UserUpdateOneWithoutProofOfAddressInput
  propertyOwnershipProof: PropertyUpdateOneWithoutProofOfOwnershipInput
  propertyImages: PropertyUpdateOneWithoutImagesInput
  propertyInsulationFile: PropertyUpdateOneWithoutInsulationStatementFileInput
  inspectionFiles: InspectionUpdateOneWithoutFilesInput
  codeComplianceCert: PropertyFilesUpdateOneWithoutCodeComplianceCertInput
  certOfAcceptance: PropertyFilesUpdateOneWithoutCertOfAcceptanceInput
}

input FileUpdateWithoutUserProofOfAddressDataInput {
  filename: String
  mimetype: String
  encoding: String
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
  userPhotoId: UserUpdateOneWithoutPhotoIdentificationInput
  userProfilePhoto: UserUpdateOneWithoutProfilePhotoInput
  userSignature: UserUpdateOneWithoutSignatureInput
  preTenancyProofOfAddress: PreTenancyFormUpdateOneWithoutProofOfAddressInput
  propertyOwnershipProof: PropertyUpdateOneWithoutProofOfOwnershipInput
  propertyImages: PropertyUpdateOneWithoutImagesInput
  propertyInsulationFile: PropertyUpdateOneWithoutInsulationStatementFileInput
  inspectionFiles: InspectionUpdateOneWithoutFilesInput
  codeComplianceCert: PropertyFilesUpdateOneWithoutCodeComplianceCertInput
  certOfAcceptance: PropertyFilesUpdateOneWithoutCertOfAcceptanceInput
}

input FileUpdateWithoutUserSignatureDataInput {
  filename: String
  mimetype: String
  encoding: String
  asset_id: String
  public_id: String
  version: Int
  version_id: String
  signature: String
  width: Int
  height: Int
  format: String
  resource_type: String
  created_at: DateTime
  tags: Json
  pages: Int
  bytes: Int
  type: String
  etag: String
  placeholder: Boolean
  url: String
  secure_url: String
  access_mode: String
  original_filename: String
  userPhotoId: UserUpdateOneWithoutPhotoIdentificationInput
  userProfilePhoto: UserUpdateOneWithoutProfilePhotoInput
  preTenancyProofOfAddress: PreTenancyFormUpdateOneWithoutProofOfAddressInput
  userProofOfAddress: UserUpdateOneWithoutProofOfAddressInput
  propertyOwnershipProof: PropertyUpdateOneWithoutProofOfOwnershipInput
  propertyImages: PropertyUpdateOneWithoutImagesInput
  propertyInsulationFile: PropertyUpdateOneWithoutInsulationStatementFileInput
  inspectionFiles: InspectionUpdateOneWithoutFilesInput
  codeComplianceCert: PropertyFilesUpdateOneWithoutCodeComplianceCertInput
  certOfAcceptance: PropertyFilesUpdateOneWithoutCertOfAcceptanceInput
}

input FileUpdateWithWhereUniqueWithoutInspectionFilesInput {
  where: FileWhereUniqueInput!
  data: FileUpdateWithoutInspectionFilesDataInput!
}

input FileUpdateWithWhereUniqueWithoutPropertyImagesInput {
  where: FileWhereUniqueInput!
  data: FileUpdateWithoutPropertyImagesDataInput!
}

input FileUpsertWithoutCertOfAcceptanceInput {
  update: FileUpdateWithoutCertOfAcceptanceDataInput!
  create: FileCreateWithoutCertOfAcceptanceInput!
}

input FileUpsertWithoutCodeComplianceCertInput {
  update: FileUpdateWithoutCodeComplianceCertDataInput!
  create: FileCreateWithoutCodeComplianceCertInput!
}

input FileUpsertWithoutPreTenancyProofOfAddressInput {
  update: FileUpdateWithoutPreTenancyProofOfAddressDataInput!
  create: FileCreateWithoutPreTenancyProofOfAddressInput!
}

input FileUpsertWithoutPropertyInsulationFileInput {
  update: FileUpdateWithoutPropertyInsulationFileDataInput!
  create: FileCreateWithoutPropertyInsulationFileInput!
}

input FileUpsertWithoutPropertyOwnershipProofInput {
  update: FileUpdateWithoutPropertyOwnershipProofDataInput!
  create: FileCreateWithoutPropertyOwnershipProofInput!
}

input FileUpsertWithoutUserPhotoIdInput {
  update: FileUpdateWithoutUserPhotoIdDataInput!
  create: FileCreateWithoutUserPhotoIdInput!
}

input FileUpsertWithoutUserProfilePhotoInput {
  update: FileUpdateWithoutUserProfilePhotoDataInput!
  create: FileCreateWithoutUserProfilePhotoInput!
}

input FileUpsertWithoutUserProofOfAddressInput {
  update: FileUpdateWithoutUserProofOfAddressDataInput!
  create: FileCreateWithoutUserProofOfAddressInput!
}

input FileUpsertWithoutUserSignatureInput {
  update: FileUpdateWithoutUserSignatureDataInput!
  create: FileCreateWithoutUserSignatureInput!
}

input FileUpsertWithWhereUniqueWithoutInspectionFilesInput {
  where: FileWhereUniqueInput!
  update: FileUpdateWithoutInspectionFilesDataInput!
  create: FileCreateWithoutInspectionFilesInput!
}

input FileUpsertWithWhereUniqueWithoutPropertyImagesInput {
  where: FileWhereUniqueInput!
  update: FileUpdateWithoutPropertyImagesDataInput!
  create: FileCreateWithoutPropertyImagesInput!
}

input FileWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  filename: String
  filename_not: String
  filename_in: [String!]
  filename_not_in: [String!]
  filename_lt: String
  filename_lte: String
  filename_gt: String
  filename_gte: String
  filename_contains: String
  filename_not_contains: String
  filename_starts_with: String
  filename_not_starts_with: String
  filename_ends_with: String
  filename_not_ends_with: String
  mimetype: String
  mimetype_not: String
  mimetype_in: [String!]
  mimetype_not_in: [String!]
  mimetype_lt: String
  mimetype_lte: String
  mimetype_gt: String
  mimetype_gte: String
  mimetype_contains: String
  mimetype_not_contains: String
  mimetype_starts_with: String
  mimetype_not_starts_with: String
  mimetype_ends_with: String
  mimetype_not_ends_with: String
  encoding: String
  encoding_not: String
  encoding_in: [String!]
  encoding_not_in: [String!]
  encoding_lt: String
  encoding_lte: String
  encoding_gt: String
  encoding_gte: String
  encoding_contains: String
  encoding_not_contains: String
  encoding_starts_with: String
  encoding_not_starts_with: String
  encoding_ends_with: String
  encoding_not_ends_with: String
  asset_id: String
  asset_id_not: String
  asset_id_in: [String!]
  asset_id_not_in: [String!]
  asset_id_lt: String
  asset_id_lte: String
  asset_id_gt: String
  asset_id_gte: String
  asset_id_contains: String
  asset_id_not_contains: String
  asset_id_starts_with: String
  asset_id_not_starts_with: String
  asset_id_ends_with: String
  asset_id_not_ends_with: String
  public_id: String
  public_id_not: String
  public_id_in: [String!]
  public_id_not_in: [String!]
  public_id_lt: String
  public_id_lte: String
  public_id_gt: String
  public_id_gte: String
  public_id_contains: String
  public_id_not_contains: String
  public_id_starts_with: String
  public_id_not_starts_with: String
  public_id_ends_with: String
  public_id_not_ends_with: String
  version: Int
  version_not: Int
  version_in: [Int!]
  version_not_in: [Int!]
  version_lt: Int
  version_lte: Int
  version_gt: Int
  version_gte: Int
  version_id: String
  version_id_not: String
  version_id_in: [String!]
  version_id_not_in: [String!]
  version_id_lt: String
  version_id_lte: String
  version_id_gt: String
  version_id_gte: String
  version_id_contains: String
  version_id_not_contains: String
  version_id_starts_with: String
  version_id_not_starts_with: String
  version_id_ends_with: String
  version_id_not_ends_with: String
  signature: String
  signature_not: String
  signature_in: [String!]
  signature_not_in: [String!]
  signature_lt: String
  signature_lte: String
  signature_gt: String
  signature_gte: String
  signature_contains: String
  signature_not_contains: String
  signature_starts_with: String
  signature_not_starts_with: String
  signature_ends_with: String
  signature_not_ends_with: String
  width: Int
  width_not: Int
  width_in: [Int!]
  width_not_in: [Int!]
  width_lt: Int
  width_lte: Int
  width_gt: Int
  width_gte: Int
  height: Int
  height_not: Int
  height_in: [Int!]
  height_not_in: [Int!]
  height_lt: Int
  height_lte: Int
  height_gt: Int
  height_gte: Int
  format: String
  format_not: String
  format_in: [String!]
  format_not_in: [String!]
  format_lt: String
  format_lte: String
  format_gt: String
  format_gte: String
  format_contains: String
  format_not_contains: String
  format_starts_with: String
  format_not_starts_with: String
  format_ends_with: String
  format_not_ends_with: String
  resource_type: String
  resource_type_not: String
  resource_type_in: [String!]
  resource_type_not_in: [String!]
  resource_type_lt: String
  resource_type_lte: String
  resource_type_gt: String
  resource_type_gte: String
  resource_type_contains: String
  resource_type_not_contains: String
  resource_type_starts_with: String
  resource_type_not_starts_with: String
  resource_type_ends_with: String
  resource_type_not_ends_with: String
  created_at: DateTime
  created_at_not: DateTime
  created_at_in: [DateTime!]
  created_at_not_in: [DateTime!]
  created_at_lt: DateTime
  created_at_lte: DateTime
  created_at_gt: DateTime
  created_at_gte: DateTime
  pages: Int
  pages_not: Int
  pages_in: [Int!]
  pages_not_in: [Int!]
  pages_lt: Int
  pages_lte: Int
  pages_gt: Int
  pages_gte: Int
  bytes: Int
  bytes_not: Int
  bytes_in: [Int!]
  bytes_not_in: [Int!]
  bytes_lt: Int
  bytes_lte: Int
  bytes_gt: Int
  bytes_gte: Int
  type: String
  type_not: String
  type_in: [String!]
  type_not_in: [String!]
  type_lt: String
  type_lte: String
  type_gt: String
  type_gte: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  etag: String
  etag_not: String
  etag_in: [String!]
  etag_not_in: [String!]
  etag_lt: String
  etag_lte: String
  etag_gt: String
  etag_gte: String
  etag_contains: String
  etag_not_contains: String
  etag_starts_with: String
  etag_not_starts_with: String
  etag_ends_with: String
  etag_not_ends_with: String
  placeholder: Boolean
  placeholder_not: Boolean
  url: String
  url_not: String
  url_in: [String!]
  url_not_in: [String!]
  url_lt: String
  url_lte: String
  url_gt: String
  url_gte: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  secure_url: String
  secure_url_not: String
  secure_url_in: [String!]
  secure_url_not_in: [String!]
  secure_url_lt: String
  secure_url_lte: String
  secure_url_gt: String
  secure_url_gte: String
  secure_url_contains: String
  secure_url_not_contains: String
  secure_url_starts_with: String
  secure_url_not_starts_with: String
  secure_url_ends_with: String
  secure_url_not_ends_with: String
  access_mode: String
  access_mode_not: String
  access_mode_in: [String!]
  access_mode_not_in: [String!]
  access_mode_lt: String
  access_mode_lte: String
  access_mode_gt: String
  access_mode_gte: String
  access_mode_contains: String
  access_mode_not_contains: String
  access_mode_starts_with: String
  access_mode_not_starts_with: String
  access_mode_ends_with: String
  access_mode_not_ends_with: String
  original_filename: String
  original_filename_not: String
  original_filename_in: [String!]
  original_filename_not_in: [String!]
  original_filename_lt: String
  original_filename_lte: String
  original_filename_gt: String
  original_filename_gte: String
  original_filename_contains: String
  original_filename_not_contains: String
  original_filename_starts_with: String
  original_filename_not_starts_with: String
  original_filename_ends_with: String
  original_filename_not_ends_with: String
  userPhotoId: UserWhereInput
  userProfilePhoto: UserWhereInput
  userSignature: UserWhereInput
  preTenancyProofOfAddress: PreTenancyFormWhereInput
  userProofOfAddress: UserWhereInput
  propertyOwnershipProof: PropertyWhereInput
  propertyImages: PropertyWhereInput
  propertyInsulationFile: PropertyWhereInput
  inspectionFiles: InspectionWhereInput
  codeComplianceCert: PropertyFilesWhereInput
  certOfAcceptance: PropertyFilesWhereInput
  AND: [FileWhereInput!]
  OR: [FileWhereInput!]
  NOT: [FileWhereInput!]
}

input FileWhereUniqueInput {
  id: ID
}

type FriendRequest {
  id: ID!
  requestUser: User!
  acceptingUser: User!
}

type FriendRequestConnection {
  pageInfo: PageInfo!
  edges: [FriendRequestEdge]!
  aggregate: AggregateFriendRequest!
}

input FriendRequestCreateInput {
  id: ID
  requestUser: UserCreateOneWithoutAwaitingFriendsInput!
  acceptingUser: UserCreateOneWithoutFriendRequestsInput!
}

input FriendRequestCreateManyWithoutAcceptingUserInput {
  create: [FriendRequestCreateWithoutAcceptingUserInput!]
  connect: [FriendRequestWhereUniqueInput!]
}

input FriendRequestCreateManyWithoutRequestUserInput {
  create: [FriendRequestCreateWithoutRequestUserInput!]
  connect: [FriendRequestWhereUniqueInput!]
}

input FriendRequestCreateWithoutAcceptingUserInput {
  id: ID
  requestUser: UserCreateOneWithoutAwaitingFriendsInput!
}

input FriendRequestCreateWithoutRequestUserInput {
  id: ID
  acceptingUser: UserCreateOneWithoutFriendRequestsInput!
}

type FriendRequestEdge {
  node: FriendRequest!
  cursor: String!
}

enum FriendRequestOrderByInput {
  id_ASC
  id_DESC
}

type FriendRequestPreviousValues {
  id: ID!
}

input FriendRequestScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  AND: [FriendRequestScalarWhereInput!]
  OR: [FriendRequestScalarWhereInput!]
  NOT: [FriendRequestScalarWhereInput!]
}

type FriendRequestSubscriptionPayload {
  mutation: MutationType!
  node: FriendRequest
  updatedFields: [String!]
  previousValues: FriendRequestPreviousValues
}

input FriendRequestSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: FriendRequestWhereInput
  AND: [FriendRequestSubscriptionWhereInput!]
  OR: [FriendRequestSubscriptionWhereInput!]
  NOT: [FriendRequestSubscriptionWhereInput!]
}

input FriendRequestUpdateInput {
  requestUser: UserUpdateOneRequiredWithoutAwaitingFriendsInput
  acceptingUser: UserUpdateOneRequiredWithoutFriendRequestsInput
}

input FriendRequestUpdateManyWithoutAcceptingUserInput {
  create: [FriendRequestCreateWithoutAcceptingUserInput!]
  delete: [FriendRequestWhereUniqueInput!]
  connect: [FriendRequestWhereUniqueInput!]
  set: [FriendRequestWhereUniqueInput!]
  disconnect: [FriendRequestWhereUniqueInput!]
  update: [FriendRequestUpdateWithWhereUniqueWithoutAcceptingUserInput!]
  upsert: [FriendRequestUpsertWithWhereUniqueWithoutAcceptingUserInput!]
  deleteMany: [FriendRequestScalarWhereInput!]
}

input FriendRequestUpdateManyWithoutRequestUserInput {
  create: [FriendRequestCreateWithoutRequestUserInput!]
  delete: [FriendRequestWhereUniqueInput!]
  connect: [FriendRequestWhereUniqueInput!]
  set: [FriendRequestWhereUniqueInput!]
  disconnect: [FriendRequestWhereUniqueInput!]
  update: [FriendRequestUpdateWithWhereUniqueWithoutRequestUserInput!]
  upsert: [FriendRequestUpsertWithWhereUniqueWithoutRequestUserInput!]
  deleteMany: [FriendRequestScalarWhereInput!]
}

input FriendRequestUpdateWithoutAcceptingUserDataInput {
  requestUser: UserUpdateOneRequiredWithoutAwaitingFriendsInput
}

input FriendRequestUpdateWithoutRequestUserDataInput {
  acceptingUser: UserUpdateOneRequiredWithoutFriendRequestsInput
}

input FriendRequestUpdateWithWhereUniqueWithoutAcceptingUserInput {
  where: FriendRequestWhereUniqueInput!
  data: FriendRequestUpdateWithoutAcceptingUserDataInput!
}

input FriendRequestUpdateWithWhereUniqueWithoutRequestUserInput {
  where: FriendRequestWhereUniqueInput!
  data: FriendRequestUpdateWithoutRequestUserDataInput!
}

input FriendRequestUpsertWithWhereUniqueWithoutAcceptingUserInput {
  where: FriendRequestWhereUniqueInput!
  update: FriendRequestUpdateWithoutAcceptingUserDataInput!
  create: FriendRequestCreateWithoutAcceptingUserInput!
}

input FriendRequestUpsertWithWhereUniqueWithoutRequestUserInput {
  where: FriendRequestWhereUniqueInput!
  update: FriendRequestUpdateWithoutRequestUserDataInput!
  create: FriendRequestCreateWithoutRequestUserInput!
}

input FriendRequestWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  requestUser: UserWhereInput
  acceptingUser: UserWhereInput
  AND: [FriendRequestWhereInput!]
  OR: [FriendRequestWhereInput!]
  NOT: [FriendRequestWhereInput!]
}

input FriendRequestWhereUniqueInput {
  id: ID
}

enum HealthyHomesStandardStatementTypes {
  WILL_COMPLY
  ALREADY_COMPLYING
}

enum HeatSource {
  FIRE_PLACE
  HEAT_PUMP
  ELECTRIC_HEATER
}

enum IndoorFeature {
  FURNISHED
  INTERNAL_LAUNDRY
  BUILT_IN_WARDROBES
  BALCONY
  ATTACHED_GARAGE
}

type Inspection {
  id: ID!
  updatedAt: DateTime!
  createdAt: DateTime!
  property: Property
  lease: PropertyLease
  inspector: User
  date: DateTime
  completedTime: DateTime
  completed: Boolean
  notes: String
  files(where: FileWhereInput, orderBy: FileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [File!]
}

type InspectionConnection {
  pageInfo: PageInfo!
  edges: [InspectionEdge]!
  aggregate: AggregateInspection!
}

input InspectionCreateInput {
  id: ID
  property: PropertyCreateOneWithoutInspectionsInput
  lease: PropertyLeaseCreateOneWithoutInspectionsInput
  inspector: UserCreateOneWithoutInspectionsInput
  date: DateTime
  completedTime: DateTime
  completed: Boolean
  notes: String
  files: FileCreateManyWithoutInspectionFilesInput
}

input InspectionCreateManyWithoutInspectorInput {
  create: [InspectionCreateWithoutInspectorInput!]
  connect: [InspectionWhereUniqueInput!]
}

input InspectionCreateManyWithoutLeaseInput {
  create: [InspectionCreateWithoutLeaseInput!]
  connect: [InspectionWhereUniqueInput!]
}

input InspectionCreateManyWithoutPropertyInput {
  create: [InspectionCreateWithoutPropertyInput!]
  connect: [InspectionWhereUniqueInput!]
}

input InspectionCreateOneWithoutFilesInput {
  create: InspectionCreateWithoutFilesInput
  connect: InspectionWhereUniqueInput
}

input InspectionCreateWithoutFilesInput {
  id: ID
  property: PropertyCreateOneWithoutInspectionsInput
  lease: PropertyLeaseCreateOneWithoutInspectionsInput
  inspector: UserCreateOneWithoutInspectionsInput
  date: DateTime
  completedTime: DateTime
  completed: Boolean
  notes: String
}

input InspectionCreateWithoutInspectorInput {
  id: ID
  property: PropertyCreateOneWithoutInspectionsInput
  lease: PropertyLeaseCreateOneWithoutInspectionsInput
  date: DateTime
  completedTime: DateTime
  completed: Boolean
  notes: String
  files: FileCreateManyWithoutInspectionFilesInput
}

input InspectionCreateWithoutLeaseInput {
  id: ID
  property: PropertyCreateOneWithoutInspectionsInput
  inspector: UserCreateOneWithoutInspectionsInput
  date: DateTime
  completedTime: DateTime
  completed: Boolean
  notes: String
  files: FileCreateManyWithoutInspectionFilesInput
}

input InspectionCreateWithoutPropertyInput {
  id: ID
  lease: PropertyLeaseCreateOneWithoutInspectionsInput
  inspector: UserCreateOneWithoutInspectionsInput
  date: DateTime
  completedTime: DateTime
  completed: Boolean
  notes: String
  files: FileCreateManyWithoutInspectionFilesInput
}

type InspectionEdge {
  node: Inspection!
  cursor: String!
}

enum InspectionOrderByInput {
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  date_ASC
  date_DESC
  completedTime_ASC
  completedTime_DESC
  completed_ASC
  completed_DESC
  notes_ASC
  notes_DESC
}

type InspectionPreviousValues {
  id: ID!
  updatedAt: DateTime!
  createdAt: DateTime!
  date: DateTime
  completedTime: DateTime
  completed: Boolean
  notes: String
}

input InspectionScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  date: DateTime
  date_not: DateTime
  date_in: [DateTime!]
  date_not_in: [DateTime!]
  date_lt: DateTime
  date_lte: DateTime
  date_gt: DateTime
  date_gte: DateTime
  completedTime: DateTime
  completedTime_not: DateTime
  completedTime_in: [DateTime!]
  completedTime_not_in: [DateTime!]
  completedTime_lt: DateTime
  completedTime_lte: DateTime
  completedTime_gt: DateTime
  completedTime_gte: DateTime
  completed: Boolean
  completed_not: Boolean
  notes: String
  notes_not: String
  notes_in: [String!]
  notes_not_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_gt: String
  notes_gte: String
  notes_contains: String
  notes_not_contains: String
  notes_starts_with: String
  notes_not_starts_with: String
  notes_ends_with: String
  notes_not_ends_with: String
  AND: [InspectionScalarWhereInput!]
  OR: [InspectionScalarWhereInput!]
  NOT: [InspectionScalarWhereInput!]
}

type InspectionSubscriptionPayload {
  mutation: MutationType!
  node: Inspection
  updatedFields: [String!]
  previousValues: InspectionPreviousValues
}

input InspectionSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: InspectionWhereInput
  AND: [InspectionSubscriptionWhereInput!]
  OR: [InspectionSubscriptionWhereInput!]
  NOT: [InspectionSubscriptionWhereInput!]
}

input InspectionUpdateInput {
  property: PropertyUpdateOneWithoutInspectionsInput
  lease: PropertyLeaseUpdateOneWithoutInspectionsInput
  inspector: UserUpdateOneWithoutInspectionsInput
  date: DateTime
  completedTime: DateTime
  completed: Boolean
  notes: String
  files: FileUpdateManyWithoutInspectionFilesInput
}

input InspectionUpdateManyDataInput {
  date: DateTime
  completedTime: DateTime
  completed: Boolean
  notes: String
}

input InspectionUpdateManyMutationInput {
  date: DateTime
  completedTime: DateTime
  completed: Boolean
  notes: String
}

input InspectionUpdateManyWithoutInspectorInput {
  create: [InspectionCreateWithoutInspectorInput!]
  delete: [InspectionWhereUniqueInput!]
  connect: [InspectionWhereUniqueInput!]
  set: [InspectionWhereUniqueInput!]
  disconnect: [InspectionWhereUniqueInput!]
  update: [InspectionUpdateWithWhereUniqueWithoutInspectorInput!]
  upsert: [InspectionUpsertWithWhereUniqueWithoutInspectorInput!]
  deleteMany: [InspectionScalarWhereInput!]
  updateMany: [InspectionUpdateManyWithWhereNestedInput!]
}

input InspectionUpdateManyWithoutLeaseInput {
  create: [InspectionCreateWithoutLeaseInput!]
  delete: [InspectionWhereUniqueInput!]
  connect: [InspectionWhereUniqueInput!]
  set: [InspectionWhereUniqueInput!]
  disconnect: [InspectionWhereUniqueInput!]
  update: [InspectionUpdateWithWhereUniqueWithoutLeaseInput!]
  upsert: [InspectionUpsertWithWhereUniqueWithoutLeaseInput!]
  deleteMany: [InspectionScalarWhereInput!]
  updateMany: [InspectionUpdateManyWithWhereNestedInput!]
}

input InspectionUpdateManyWithoutPropertyInput {
  create: [InspectionCreateWithoutPropertyInput!]
  delete: [InspectionWhereUniqueInput!]
  connect: [InspectionWhereUniqueInput!]
  set: [InspectionWhereUniqueInput!]
  disconnect: [InspectionWhereUniqueInput!]
  update: [InspectionUpdateWithWhereUniqueWithoutPropertyInput!]
  upsert: [InspectionUpsertWithWhereUniqueWithoutPropertyInput!]
  deleteMany: [InspectionScalarWhereInput!]
  updateMany: [InspectionUpdateManyWithWhereNestedInput!]
}

input InspectionUpdateManyWithWhereNestedInput {
  where: InspectionScalarWhereInput!
  data: InspectionUpdateManyDataInput!
}

input InspectionUpdateOneWithoutFilesInput {
  create: InspectionCreateWithoutFilesInput
  update: InspectionUpdateWithoutFilesDataInput
  upsert: InspectionUpsertWithoutFilesInput
  delete: Boolean
  disconnect: Boolean
  connect: InspectionWhereUniqueInput
}

input InspectionUpdateWithoutFilesDataInput {
  property: PropertyUpdateOneWithoutInspectionsInput
  lease: PropertyLeaseUpdateOneWithoutInspectionsInput
  inspector: UserUpdateOneWithoutInspectionsInput
  date: DateTime
  completedTime: DateTime
  completed: Boolean
  notes: String
}

input InspectionUpdateWithoutInspectorDataInput {
  property: PropertyUpdateOneWithoutInspectionsInput
  lease: PropertyLeaseUpdateOneWithoutInspectionsInput
  date: DateTime
  completedTime: DateTime
  completed: Boolean
  notes: String
  files: FileUpdateManyWithoutInspectionFilesInput
}

input InspectionUpdateWithoutLeaseDataInput {
  property: PropertyUpdateOneWithoutInspectionsInput
  inspector: UserUpdateOneWithoutInspectionsInput
  date: DateTime
  completedTime: DateTime
  completed: Boolean
  notes: String
  files: FileUpdateManyWithoutInspectionFilesInput
}

input InspectionUpdateWithoutPropertyDataInput {
  lease: PropertyLeaseUpdateOneWithoutInspectionsInput
  inspector: UserUpdateOneWithoutInspectionsInput
  date: DateTime
  completedTime: DateTime
  completed: Boolean
  notes: String
  files: FileUpdateManyWithoutInspectionFilesInput
}

input InspectionUpdateWithWhereUniqueWithoutInspectorInput {
  where: InspectionWhereUniqueInput!
  data: InspectionUpdateWithoutInspectorDataInput!
}

input InspectionUpdateWithWhereUniqueWithoutLeaseInput {
  where: InspectionWhereUniqueInput!
  data: InspectionUpdateWithoutLeaseDataInput!
}

input InspectionUpdateWithWhereUniqueWithoutPropertyInput {
  where: InspectionWhereUniqueInput!
  data: InspectionUpdateWithoutPropertyDataInput!
}

input InspectionUpsertWithoutFilesInput {
  update: InspectionUpdateWithoutFilesDataInput!
  create: InspectionCreateWithoutFilesInput!
}

input InspectionUpsertWithWhereUniqueWithoutInspectorInput {
  where: InspectionWhereUniqueInput!
  update: InspectionUpdateWithoutInspectorDataInput!
  create: InspectionCreateWithoutInspectorInput!
}

input InspectionUpsertWithWhereUniqueWithoutLeaseInput {
  where: InspectionWhereUniqueInput!
  update: InspectionUpdateWithoutLeaseDataInput!
  create: InspectionCreateWithoutLeaseInput!
}

input InspectionUpsertWithWhereUniqueWithoutPropertyInput {
  where: InspectionWhereUniqueInput!
  update: InspectionUpdateWithoutPropertyDataInput!
  create: InspectionCreateWithoutPropertyInput!
}

input InspectionWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  property: PropertyWhereInput
  lease: PropertyLeaseWhereInput
  inspector: UserWhereInput
  date: DateTime
  date_not: DateTime
  date_in: [DateTime!]
  date_not_in: [DateTime!]
  date_lt: DateTime
  date_lte: DateTime
  date_gt: DateTime
  date_gte: DateTime
  completedTime: DateTime
  completedTime_not: DateTime
  completedTime_in: [DateTime!]
  completedTime_not_in: [DateTime!]
  completedTime_lt: DateTime
  completedTime_lte: DateTime
  completedTime_gt: DateTime
  completedTime_gte: DateTime
  completed: Boolean
  completed_not: Boolean
  notes: String
  notes_not: String
  notes_in: [String!]
  notes_not_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_gt: String
  notes_gte: String
  notes_contains: String
  notes_not_contains: String
  notes_starts_with: String
  notes_not_starts_with: String
  notes_ends_with: String
  notes_not_ends_with: String
  files_every: FileWhereInput
  files_some: FileWhereInput
  files_none: FileWhereInput
  AND: [InspectionWhereInput!]
  OR: [InspectionWhereInput!]
  NOT: [InspectionWhereInput!]
}

input InspectionWhereUniqueInput {
  id: ID
}

enum InsulationConditionTypes {
  REASONABLE
  NOT_REASONABLE
  NO_GAPS
  NOT_ACCESSIBLE
}

enum InsulationCoverageTypes {
  COMPLETE
  PARTIAL
  NONE
  UNKNOWN
}

type InsulationForm {
  id: ID!
  meetsMinCeilingReq: Boolean
  meetsMinCeilingReqReason: String
  meetsMinUnderfloorReq: Boolean
  meetsMinUnderfloorReqReason: String
  ceilingCoverage: InsulationCoverageTypes
  ceilingCoverageReason: String
  ceilingTypes: [CeilingInsulationTypes!]!
  ceilingTypesOther: String
  ceilingBulkRValue: String
  ceilingMinimumThickness: String
  ceilingInsulationInstallDate: DateTime
  ceilingConditions: [InsulationConditionTypes!]!
  ceilingConditionReason: String
  underfloorCoverage: InsulationCoverageTypes
  underfloorCoverageReason: String
  underfloorTypes: [UnderfloorInsulationTypes!]!
  underfloorTypesOther: String
  underfloorBulkRValue: String
  underfloorMinimumThickness: String
  underfloorInsulationInstallDate: DateTime
  underfloorConditions: [InsulationConditionTypes!]!
  underfloorConditionReason: String
  wallCoverage: InsulationCoverageTypes
  wallCoverageReason: String
  supplementaryInfo: String
  lastUpgradedDate: DateTime
  profesionallyAssessedDate: DateTime
  declarationCheck: Boolean
  healthyHomesStandardStatement: HealthyHomesStandardStatementTypes
}

type InsulationFormConnection {
  pageInfo: PageInfo!
  edges: [InsulationFormEdge]!
  aggregate: AggregateInsulationForm!
}

input InsulationFormCreateceilingConditionsInput {
  set: [InsulationConditionTypes!]
}

input InsulationFormCreateceilingTypesInput {
  set: [CeilingInsulationTypes!]
}

input InsulationFormCreateInput {
  id: ID
  meetsMinCeilingReq: Boolean
  meetsMinCeilingReqReason: String
  meetsMinUnderfloorReq: Boolean
  meetsMinUnderfloorReqReason: String
  ceilingCoverage: InsulationCoverageTypes
  ceilingCoverageReason: String
  ceilingTypes: InsulationFormCreateceilingTypesInput
  ceilingTypesOther: String
  ceilingBulkRValue: String
  ceilingMinimumThickness: String
  ceilingInsulationInstallDate: DateTime
  ceilingConditions: InsulationFormCreateceilingConditionsInput
  ceilingConditionReason: String
  underfloorCoverage: InsulationCoverageTypes
  underfloorCoverageReason: String
  underfloorTypes: InsulationFormCreateunderfloorTypesInput
  underfloorTypesOther: String
  underfloorBulkRValue: String
  underfloorMinimumThickness: String
  underfloorInsulationInstallDate: DateTime
  underfloorConditions: InsulationFormCreateunderfloorConditionsInput
  underfloorConditionReason: String
  wallCoverage: InsulationCoverageTypes
  wallCoverageReason: String
  supplementaryInfo: String
  lastUpgradedDate: DateTime
  profesionallyAssessedDate: DateTime
  declarationCheck: Boolean
  healthyHomesStandardStatement: HealthyHomesStandardStatementTypes
}

input InsulationFormCreateOneInput {
  create: InsulationFormCreateInput
  connect: InsulationFormWhereUniqueInput
}

input InsulationFormCreateunderfloorConditionsInput {
  set: [InsulationConditionTypes!]
}

input InsulationFormCreateunderfloorTypesInput {
  set: [UnderfloorInsulationTypes!]
}

type InsulationFormEdge {
  node: InsulationForm!
  cursor: String!
}

enum InsulationFormOrderByInput {
  id_ASC
  id_DESC
  meetsMinCeilingReq_ASC
  meetsMinCeilingReq_DESC
  meetsMinCeilingReqReason_ASC
  meetsMinCeilingReqReason_DESC
  meetsMinUnderfloorReq_ASC
  meetsMinUnderfloorReq_DESC
  meetsMinUnderfloorReqReason_ASC
  meetsMinUnderfloorReqReason_DESC
  ceilingCoverage_ASC
  ceilingCoverage_DESC
  ceilingCoverageReason_ASC
  ceilingCoverageReason_DESC
  ceilingTypesOther_ASC
  ceilingTypesOther_DESC
  ceilingBulkRValue_ASC
  ceilingBulkRValue_DESC
  ceilingMinimumThickness_ASC
  ceilingMinimumThickness_DESC
  ceilingInsulationInstallDate_ASC
  ceilingInsulationInstallDate_DESC
  ceilingConditionReason_ASC
  ceilingConditionReason_DESC
  underfloorCoverage_ASC
  underfloorCoverage_DESC
  underfloorCoverageReason_ASC
  underfloorCoverageReason_DESC
  underfloorTypesOther_ASC
  underfloorTypesOther_DESC
  underfloorBulkRValue_ASC
  underfloorBulkRValue_DESC
  underfloorMinimumThickness_ASC
  underfloorMinimumThickness_DESC
  underfloorInsulationInstallDate_ASC
  underfloorInsulationInstallDate_DESC
  underfloorConditionReason_ASC
  underfloorConditionReason_DESC
  wallCoverage_ASC
  wallCoverage_DESC
  wallCoverageReason_ASC
  wallCoverageReason_DESC
  supplementaryInfo_ASC
  supplementaryInfo_DESC
  lastUpgradedDate_ASC
  lastUpgradedDate_DESC
  profesionallyAssessedDate_ASC
  profesionallyAssessedDate_DESC
  declarationCheck_ASC
  declarationCheck_DESC
  healthyHomesStandardStatement_ASC
  healthyHomesStandardStatement_DESC
}

type InsulationFormPreviousValues {
  id: ID!
  meetsMinCeilingReq: Boolean
  meetsMinCeilingReqReason: String
  meetsMinUnderfloorReq: Boolean
  meetsMinUnderfloorReqReason: String
  ceilingCoverage: InsulationCoverageTypes
  ceilingCoverageReason: String
  ceilingTypes: [CeilingInsulationTypes!]!
  ceilingTypesOther: String
  ceilingBulkRValue: String
  ceilingMinimumThickness: String
  ceilingInsulationInstallDate: DateTime
  ceilingConditions: [InsulationConditionTypes!]!
  ceilingConditionReason: String
  underfloorCoverage: InsulationCoverageTypes
  underfloorCoverageReason: String
  underfloorTypes: [UnderfloorInsulationTypes!]!
  underfloorTypesOther: String
  underfloorBulkRValue: String
  underfloorMinimumThickness: String
  underfloorInsulationInstallDate: DateTime
  underfloorConditions: [InsulationConditionTypes!]!
  underfloorConditionReason: String
  wallCoverage: InsulationCoverageTypes
  wallCoverageReason: String
  supplementaryInfo: String
  lastUpgradedDate: DateTime
  profesionallyAssessedDate: DateTime
  declarationCheck: Boolean
  healthyHomesStandardStatement: HealthyHomesStandardStatementTypes
}

type InsulationFormSubscriptionPayload {
  mutation: MutationType!
  node: InsulationForm
  updatedFields: [String!]
  previousValues: InsulationFormPreviousValues
}

input InsulationFormSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: InsulationFormWhereInput
  AND: [InsulationFormSubscriptionWhereInput!]
  OR: [InsulationFormSubscriptionWhereInput!]
  NOT: [InsulationFormSubscriptionWhereInput!]
}

input InsulationFormUpdateceilingConditionsInput {
  set: [InsulationConditionTypes!]
}

input InsulationFormUpdateceilingTypesInput {
  set: [CeilingInsulationTypes!]
}

input InsulationFormUpdateDataInput {
  meetsMinCeilingReq: Boolean
  meetsMinCeilingReqReason: String
  meetsMinUnderfloorReq: Boolean
  meetsMinUnderfloorReqReason: String
  ceilingCoverage: InsulationCoverageTypes
  ceilingCoverageReason: String
  ceilingTypes: InsulationFormUpdateceilingTypesInput
  ceilingTypesOther: String
  ceilingBulkRValue: String
  ceilingMinimumThickness: String
  ceilingInsulationInstallDate: DateTime
  ceilingConditions: InsulationFormUpdateceilingConditionsInput
  ceilingConditionReason: String
  underfloorCoverage: InsulationCoverageTypes
  underfloorCoverageReason: String
  underfloorTypes: InsulationFormUpdateunderfloorTypesInput
  underfloorTypesOther: String
  underfloorBulkRValue: String
  underfloorMinimumThickness: String
  underfloorInsulationInstallDate: DateTime
  underfloorConditions: InsulationFormUpdateunderfloorConditionsInput
  underfloorConditionReason: String
  wallCoverage: InsulationCoverageTypes
  wallCoverageReason: String
  supplementaryInfo: String
  lastUpgradedDate: DateTime
  profesionallyAssessedDate: DateTime
  declarationCheck: Boolean
  healthyHomesStandardStatement: HealthyHomesStandardStatementTypes
}

input InsulationFormUpdateInput {
  meetsMinCeilingReq: Boolean
  meetsMinCeilingReqReason: String
  meetsMinUnderfloorReq: Boolean
  meetsMinUnderfloorReqReason: String
  ceilingCoverage: InsulationCoverageTypes
  ceilingCoverageReason: String
  ceilingTypes: InsulationFormUpdateceilingTypesInput
  ceilingTypesOther: String
  ceilingBulkRValue: String
  ceilingMinimumThickness: String
  ceilingInsulationInstallDate: DateTime
  ceilingConditions: InsulationFormUpdateceilingConditionsInput
  ceilingConditionReason: String
  underfloorCoverage: InsulationCoverageTypes
  underfloorCoverageReason: String
  underfloorTypes: InsulationFormUpdateunderfloorTypesInput
  underfloorTypesOther: String
  underfloorBulkRValue: String
  underfloorMinimumThickness: String
  underfloorInsulationInstallDate: DateTime
  underfloorConditions: InsulationFormUpdateunderfloorConditionsInput
  underfloorConditionReason: String
  wallCoverage: InsulationCoverageTypes
  wallCoverageReason: String
  supplementaryInfo: String
  lastUpgradedDate: DateTime
  profesionallyAssessedDate: DateTime
  declarationCheck: Boolean
  healthyHomesStandardStatement: HealthyHomesStandardStatementTypes
}

input InsulationFormUpdateManyMutationInput {
  meetsMinCeilingReq: Boolean
  meetsMinCeilingReqReason: String
  meetsMinUnderfloorReq: Boolean
  meetsMinUnderfloorReqReason: String
  ceilingCoverage: InsulationCoverageTypes
  ceilingCoverageReason: String
  ceilingTypes: InsulationFormUpdateceilingTypesInput
  ceilingTypesOther: String
  ceilingBulkRValue: String
  ceilingMinimumThickness: String
  ceilingInsulationInstallDate: DateTime
  ceilingConditions: InsulationFormUpdateceilingConditionsInput
  ceilingConditionReason: String
  underfloorCoverage: InsulationCoverageTypes
  underfloorCoverageReason: String
  underfloorTypes: InsulationFormUpdateunderfloorTypesInput
  underfloorTypesOther: String
  underfloorBulkRValue: String
  underfloorMinimumThickness: String
  underfloorInsulationInstallDate: DateTime
  underfloorConditions: InsulationFormUpdateunderfloorConditionsInput
  underfloorConditionReason: String
  wallCoverage: InsulationCoverageTypes
  wallCoverageReason: String
  supplementaryInfo: String
  lastUpgradedDate: DateTime
  profesionallyAssessedDate: DateTime
  declarationCheck: Boolean
  healthyHomesStandardStatement: HealthyHomesStandardStatementTypes
}

input InsulationFormUpdateOneInput {
  create: InsulationFormCreateInput
  update: InsulationFormUpdateDataInput
  upsert: InsulationFormUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: InsulationFormWhereUniqueInput
}

input InsulationFormUpdateunderfloorConditionsInput {
  set: [InsulationConditionTypes!]
}

input InsulationFormUpdateunderfloorTypesInput {
  set: [UnderfloorInsulationTypes!]
}

input InsulationFormUpsertNestedInput {
  update: InsulationFormUpdateDataInput!
  create: InsulationFormCreateInput!
}

input InsulationFormWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  meetsMinCeilingReq: Boolean
  meetsMinCeilingReq_not: Boolean
  meetsMinCeilingReqReason: String
  meetsMinCeilingReqReason_not: String
  meetsMinCeilingReqReason_in: [String!]
  meetsMinCeilingReqReason_not_in: [String!]
  meetsMinCeilingReqReason_lt: String
  meetsMinCeilingReqReason_lte: String
  meetsMinCeilingReqReason_gt: String
  meetsMinCeilingReqReason_gte: String
  meetsMinCeilingReqReason_contains: String
  meetsMinCeilingReqReason_not_contains: String
  meetsMinCeilingReqReason_starts_with: String
  meetsMinCeilingReqReason_not_starts_with: String
  meetsMinCeilingReqReason_ends_with: String
  meetsMinCeilingReqReason_not_ends_with: String
  meetsMinUnderfloorReq: Boolean
  meetsMinUnderfloorReq_not: Boolean
  meetsMinUnderfloorReqReason: String
  meetsMinUnderfloorReqReason_not: String
  meetsMinUnderfloorReqReason_in: [String!]
  meetsMinUnderfloorReqReason_not_in: [String!]
  meetsMinUnderfloorReqReason_lt: String
  meetsMinUnderfloorReqReason_lte: String
  meetsMinUnderfloorReqReason_gt: String
  meetsMinUnderfloorReqReason_gte: String
  meetsMinUnderfloorReqReason_contains: String
  meetsMinUnderfloorReqReason_not_contains: String
  meetsMinUnderfloorReqReason_starts_with: String
  meetsMinUnderfloorReqReason_not_starts_with: String
  meetsMinUnderfloorReqReason_ends_with: String
  meetsMinUnderfloorReqReason_not_ends_with: String
  ceilingCoverage: InsulationCoverageTypes
  ceilingCoverage_not: InsulationCoverageTypes
  ceilingCoverage_in: [InsulationCoverageTypes!]
  ceilingCoverage_not_in: [InsulationCoverageTypes!]
  ceilingCoverageReason: String
  ceilingCoverageReason_not: String
  ceilingCoverageReason_in: [String!]
  ceilingCoverageReason_not_in: [String!]
  ceilingCoverageReason_lt: String
  ceilingCoverageReason_lte: String
  ceilingCoverageReason_gt: String
  ceilingCoverageReason_gte: String
  ceilingCoverageReason_contains: String
  ceilingCoverageReason_not_contains: String
  ceilingCoverageReason_starts_with: String
  ceilingCoverageReason_not_starts_with: String
  ceilingCoverageReason_ends_with: String
  ceilingCoverageReason_not_ends_with: String
  ceilingTypesOther: String
  ceilingTypesOther_not: String
  ceilingTypesOther_in: [String!]
  ceilingTypesOther_not_in: [String!]
  ceilingTypesOther_lt: String
  ceilingTypesOther_lte: String
  ceilingTypesOther_gt: String
  ceilingTypesOther_gte: String
  ceilingTypesOther_contains: String
  ceilingTypesOther_not_contains: String
  ceilingTypesOther_starts_with: String
  ceilingTypesOther_not_starts_with: String
  ceilingTypesOther_ends_with: String
  ceilingTypesOther_not_ends_with: String
  ceilingBulkRValue: String
  ceilingBulkRValue_not: String
  ceilingBulkRValue_in: [String!]
  ceilingBulkRValue_not_in: [String!]
  ceilingBulkRValue_lt: String
  ceilingBulkRValue_lte: String
  ceilingBulkRValue_gt: String
  ceilingBulkRValue_gte: String
  ceilingBulkRValue_contains: String
  ceilingBulkRValue_not_contains: String
  ceilingBulkRValue_starts_with: String
  ceilingBulkRValue_not_starts_with: String
  ceilingBulkRValue_ends_with: String
  ceilingBulkRValue_not_ends_with: String
  ceilingMinimumThickness: String
  ceilingMinimumThickness_not: String
  ceilingMinimumThickness_in: [String!]
  ceilingMinimumThickness_not_in: [String!]
  ceilingMinimumThickness_lt: String
  ceilingMinimumThickness_lte: String
  ceilingMinimumThickness_gt: String
  ceilingMinimumThickness_gte: String
  ceilingMinimumThickness_contains: String
  ceilingMinimumThickness_not_contains: String
  ceilingMinimumThickness_starts_with: String
  ceilingMinimumThickness_not_starts_with: String
  ceilingMinimumThickness_ends_with: String
  ceilingMinimumThickness_not_ends_with: String
  ceilingInsulationInstallDate: DateTime
  ceilingInsulationInstallDate_not: DateTime
  ceilingInsulationInstallDate_in: [DateTime!]
  ceilingInsulationInstallDate_not_in: [DateTime!]
  ceilingInsulationInstallDate_lt: DateTime
  ceilingInsulationInstallDate_lte: DateTime
  ceilingInsulationInstallDate_gt: DateTime
  ceilingInsulationInstallDate_gte: DateTime
  ceilingConditionReason: String
  ceilingConditionReason_not: String
  ceilingConditionReason_in: [String!]
  ceilingConditionReason_not_in: [String!]
  ceilingConditionReason_lt: String
  ceilingConditionReason_lte: String
  ceilingConditionReason_gt: String
  ceilingConditionReason_gte: String
  ceilingConditionReason_contains: String
  ceilingConditionReason_not_contains: String
  ceilingConditionReason_starts_with: String
  ceilingConditionReason_not_starts_with: String
  ceilingConditionReason_ends_with: String
  ceilingConditionReason_not_ends_with: String
  underfloorCoverage: InsulationCoverageTypes
  underfloorCoverage_not: InsulationCoverageTypes
  underfloorCoverage_in: [InsulationCoverageTypes!]
  underfloorCoverage_not_in: [InsulationCoverageTypes!]
  underfloorCoverageReason: String
  underfloorCoverageReason_not: String
  underfloorCoverageReason_in: [String!]
  underfloorCoverageReason_not_in: [String!]
  underfloorCoverageReason_lt: String
  underfloorCoverageReason_lte: String
  underfloorCoverageReason_gt: String
  underfloorCoverageReason_gte: String
  underfloorCoverageReason_contains: String
  underfloorCoverageReason_not_contains: String
  underfloorCoverageReason_starts_with: String
  underfloorCoverageReason_not_starts_with: String
  underfloorCoverageReason_ends_with: String
  underfloorCoverageReason_not_ends_with: String
  underfloorTypesOther: String
  underfloorTypesOther_not: String
  underfloorTypesOther_in: [String!]
  underfloorTypesOther_not_in: [String!]
  underfloorTypesOther_lt: String
  underfloorTypesOther_lte: String
  underfloorTypesOther_gt: String
  underfloorTypesOther_gte: String
  underfloorTypesOther_contains: String
  underfloorTypesOther_not_contains: String
  underfloorTypesOther_starts_with: String
  underfloorTypesOther_not_starts_with: String
  underfloorTypesOther_ends_with: String
  underfloorTypesOther_not_ends_with: String
  underfloorBulkRValue: String
  underfloorBulkRValue_not: String
  underfloorBulkRValue_in: [String!]
  underfloorBulkRValue_not_in: [String!]
  underfloorBulkRValue_lt: String
  underfloorBulkRValue_lte: String
  underfloorBulkRValue_gt: String
  underfloorBulkRValue_gte: String
  underfloorBulkRValue_contains: String
  underfloorBulkRValue_not_contains: String
  underfloorBulkRValue_starts_with: String
  underfloorBulkRValue_not_starts_with: String
  underfloorBulkRValue_ends_with: String
  underfloorBulkRValue_not_ends_with: String
  underfloorMinimumThickness: String
  underfloorMinimumThickness_not: String
  underfloorMinimumThickness_in: [String!]
  underfloorMinimumThickness_not_in: [String!]
  underfloorMinimumThickness_lt: String
  underfloorMinimumThickness_lte: String
  underfloorMinimumThickness_gt: String
  underfloorMinimumThickness_gte: String
  underfloorMinimumThickness_contains: String
  underfloorMinimumThickness_not_contains: String
  underfloorMinimumThickness_starts_with: String
  underfloorMinimumThickness_not_starts_with: String
  underfloorMinimumThickness_ends_with: String
  underfloorMinimumThickness_not_ends_with: String
  underfloorInsulationInstallDate: DateTime
  underfloorInsulationInstallDate_not: DateTime
  underfloorInsulationInstallDate_in: [DateTime!]
  underfloorInsulationInstallDate_not_in: [DateTime!]
  underfloorInsulationInstallDate_lt: DateTime
  underfloorInsulationInstallDate_lte: DateTime
  underfloorInsulationInstallDate_gt: DateTime
  underfloorInsulationInstallDate_gte: DateTime
  underfloorConditionReason: String
  underfloorConditionReason_not: String
  underfloorConditionReason_in: [String!]
  underfloorConditionReason_not_in: [String!]
  underfloorConditionReason_lt: String
  underfloorConditionReason_lte: String
  underfloorConditionReason_gt: String
  underfloorConditionReason_gte: String
  underfloorConditionReason_contains: String
  underfloorConditionReason_not_contains: String
  underfloorConditionReason_starts_with: String
  underfloorConditionReason_not_starts_with: String
  underfloorConditionReason_ends_with: String
  underfloorConditionReason_not_ends_with: String
  wallCoverage: InsulationCoverageTypes
  wallCoverage_not: InsulationCoverageTypes
  wallCoverage_in: [InsulationCoverageTypes!]
  wallCoverage_not_in: [InsulationCoverageTypes!]
  wallCoverageReason: String
  wallCoverageReason_not: String
  wallCoverageReason_in: [String!]
  wallCoverageReason_not_in: [String!]
  wallCoverageReason_lt: String
  wallCoverageReason_lte: String
  wallCoverageReason_gt: String
  wallCoverageReason_gte: String
  wallCoverageReason_contains: String
  wallCoverageReason_not_contains: String
  wallCoverageReason_starts_with: String
  wallCoverageReason_not_starts_with: String
  wallCoverageReason_ends_with: String
  wallCoverageReason_not_ends_with: String
  supplementaryInfo: String
  supplementaryInfo_not: String
  supplementaryInfo_in: [String!]
  supplementaryInfo_not_in: [String!]
  supplementaryInfo_lt: String
  supplementaryInfo_lte: String
  supplementaryInfo_gt: String
  supplementaryInfo_gte: String
  supplementaryInfo_contains: String
  supplementaryInfo_not_contains: String
  supplementaryInfo_starts_with: String
  supplementaryInfo_not_starts_with: String
  supplementaryInfo_ends_with: String
  supplementaryInfo_not_ends_with: String
  lastUpgradedDate: DateTime
  lastUpgradedDate_not: DateTime
  lastUpgradedDate_in: [DateTime!]
  lastUpgradedDate_not_in: [DateTime!]
  lastUpgradedDate_lt: DateTime
  lastUpgradedDate_lte: DateTime
  lastUpgradedDate_gt: DateTime
  lastUpgradedDate_gte: DateTime
  profesionallyAssessedDate: DateTime
  profesionallyAssessedDate_not: DateTime
  profesionallyAssessedDate_in: [DateTime!]
  profesionallyAssessedDate_not_in: [DateTime!]
  profesionallyAssessedDate_lt: DateTime
  profesionallyAssessedDate_lte: DateTime
  profesionallyAssessedDate_gt: DateTime
  profesionallyAssessedDate_gte: DateTime
  declarationCheck: Boolean
  declarationCheck_not: Boolean
  healthyHomesStandardStatement: HealthyHomesStandardStatementTypes
  healthyHomesStandardStatement_not: HealthyHomesStandardStatementTypes
  healthyHomesStandardStatement_in: [HealthyHomesStandardStatementTypes!]
  healthyHomesStandardStatement_not_in: [HealthyHomesStandardStatementTypes!]
  AND: [InsulationFormWhereInput!]
  OR: [InsulationFormWhereInput!]
  NOT: [InsulationFormWhereInput!]
}

input InsulationFormWhereUniqueInput {
  id: ID
}

enum InsulationProof {
  FILE
  FORM
  REHOUSER
}

scalar Json

enum LeaseStage {
  INITIALIZING
  SIGNED
  PAID
  COMPLETED
}

type Lessee {
  id: ID!
  lease: PropertyLease
  user: User
  signed: Boolean!
  signedAt: DateTime
}

type LesseeConnection {
  pageInfo: PageInfo!
  edges: [LesseeEdge]!
  aggregate: AggregateLessee!
}

input LesseeCreateInput {
  id: ID
  lease: PropertyLeaseCreateOneWithoutLesseesInput
  user: UserCreateOneWithoutLesseeLeasesInput
  signed: Boolean!
  signedAt: DateTime
}

input LesseeCreateManyWithoutLeaseInput {
  create: [LesseeCreateWithoutLeaseInput!]
  connect: [LesseeWhereUniqueInput!]
}

input LesseeCreateManyWithoutUserInput {
  create: [LesseeCreateWithoutUserInput!]
  connect: [LesseeWhereUniqueInput!]
}

input LesseeCreateWithoutLeaseInput {
  id: ID
  user: UserCreateOneWithoutLesseeLeasesInput
  signed: Boolean!
  signedAt: DateTime
}

input LesseeCreateWithoutUserInput {
  id: ID
  lease: PropertyLeaseCreateOneWithoutLesseesInput
  signed: Boolean!
  signedAt: DateTime
}

type LesseeEdge {
  node: Lessee!
  cursor: String!
}

enum LesseeOrderByInput {
  id_ASC
  id_DESC
  signed_ASC
  signed_DESC
  signedAt_ASC
  signedAt_DESC
}

type LesseePreviousValues {
  id: ID!
  signed: Boolean!
  signedAt: DateTime
}

input LesseeScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  signed: Boolean
  signed_not: Boolean
  signedAt: DateTime
  signedAt_not: DateTime
  signedAt_in: [DateTime!]
  signedAt_not_in: [DateTime!]
  signedAt_lt: DateTime
  signedAt_lte: DateTime
  signedAt_gt: DateTime
  signedAt_gte: DateTime
  AND: [LesseeScalarWhereInput!]
  OR: [LesseeScalarWhereInput!]
  NOT: [LesseeScalarWhereInput!]
}

type LesseeSubscriptionPayload {
  mutation: MutationType!
  node: Lessee
  updatedFields: [String!]
  previousValues: LesseePreviousValues
}

input LesseeSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: LesseeWhereInput
  AND: [LesseeSubscriptionWhereInput!]
  OR: [LesseeSubscriptionWhereInput!]
  NOT: [LesseeSubscriptionWhereInput!]
}

input LesseeUpdateInput {
  lease: PropertyLeaseUpdateOneWithoutLesseesInput
  user: UserUpdateOneWithoutLesseeLeasesInput
  signed: Boolean
  signedAt: DateTime
}

input LesseeUpdateManyDataInput {
  signed: Boolean
  signedAt: DateTime
}

input LesseeUpdateManyMutationInput {
  signed: Boolean
  signedAt: DateTime
}

input LesseeUpdateManyWithoutLeaseInput {
  create: [LesseeCreateWithoutLeaseInput!]
  delete: [LesseeWhereUniqueInput!]
  connect: [LesseeWhereUniqueInput!]
  set: [LesseeWhereUniqueInput!]
  disconnect: [LesseeWhereUniqueInput!]
  update: [LesseeUpdateWithWhereUniqueWithoutLeaseInput!]
  upsert: [LesseeUpsertWithWhereUniqueWithoutLeaseInput!]
  deleteMany: [LesseeScalarWhereInput!]
  updateMany: [LesseeUpdateManyWithWhereNestedInput!]
}

input LesseeUpdateManyWithoutUserInput {
  create: [LesseeCreateWithoutUserInput!]
  delete: [LesseeWhereUniqueInput!]
  connect: [LesseeWhereUniqueInput!]
  set: [LesseeWhereUniqueInput!]
  disconnect: [LesseeWhereUniqueInput!]
  update: [LesseeUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [LesseeUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [LesseeScalarWhereInput!]
  updateMany: [LesseeUpdateManyWithWhereNestedInput!]
}

input LesseeUpdateManyWithWhereNestedInput {
  where: LesseeScalarWhereInput!
  data: LesseeUpdateManyDataInput!
}

input LesseeUpdateWithoutLeaseDataInput {
  user: UserUpdateOneWithoutLesseeLeasesInput
  signed: Boolean
  signedAt: DateTime
}

input LesseeUpdateWithoutUserDataInput {
  lease: PropertyLeaseUpdateOneWithoutLesseesInput
  signed: Boolean
  signedAt: DateTime
}

input LesseeUpdateWithWhereUniqueWithoutLeaseInput {
  where: LesseeWhereUniqueInput!
  data: LesseeUpdateWithoutLeaseDataInput!
}

input LesseeUpdateWithWhereUniqueWithoutUserInput {
  where: LesseeWhereUniqueInput!
  data: LesseeUpdateWithoutUserDataInput!
}

input LesseeUpsertWithWhereUniqueWithoutLeaseInput {
  where: LesseeWhereUniqueInput!
  update: LesseeUpdateWithoutLeaseDataInput!
  create: LesseeCreateWithoutLeaseInput!
}

input LesseeUpsertWithWhereUniqueWithoutUserInput {
  where: LesseeWhereUniqueInput!
  update: LesseeUpdateWithoutUserDataInput!
  create: LesseeCreateWithoutUserInput!
}

input LesseeWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  lease: PropertyLeaseWhereInput
  user: UserWhereInput
  signed: Boolean
  signed_not: Boolean
  signedAt: DateTime
  signedAt_not: DateTime
  signedAt_in: [DateTime!]
  signedAt_not_in: [DateTime!]
  signedAt_lt: DateTime
  signedAt_lte: DateTime
  signedAt_gt: DateTime
  signedAt_gte: DateTime
  AND: [LesseeWhereInput!]
  OR: [LesseeWhereInput!]
  NOT: [LesseeWhereInput!]
}

input LesseeWhereUniqueInput {
  id: ID
}

type Lessor {
  id: ID!
  lease: PropertyLease
  user: User
  signed: Boolean!
  signedAt: DateTime
}

type LessorConnection {
  pageInfo: PageInfo!
  edges: [LessorEdge]!
  aggregate: AggregateLessor!
}

input LessorCreateInput {
  id: ID
  lease: PropertyLeaseCreateOneWithoutLessorsInput
  user: UserCreateOneWithoutLessorLeasesInput
  signed: Boolean!
  signedAt: DateTime
}

input LessorCreateManyWithoutLeaseInput {
  create: [LessorCreateWithoutLeaseInput!]
  connect: [LessorWhereUniqueInput!]
}

input LessorCreateManyWithoutUserInput {
  create: [LessorCreateWithoutUserInput!]
  connect: [LessorWhereUniqueInput!]
}

input LessorCreateWithoutLeaseInput {
  id: ID
  user: UserCreateOneWithoutLessorLeasesInput
  signed: Boolean!
  signedAt: DateTime
}

input LessorCreateWithoutUserInput {
  id: ID
  lease: PropertyLeaseCreateOneWithoutLessorsInput
  signed: Boolean!
  signedAt: DateTime
}

type LessorEdge {
  node: Lessor!
  cursor: String!
}

enum LessorOrderByInput {
  id_ASC
  id_DESC
  signed_ASC
  signed_DESC
  signedAt_ASC
  signedAt_DESC
}

type LessorPreviousValues {
  id: ID!
  signed: Boolean!
  signedAt: DateTime
}

input LessorScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  signed: Boolean
  signed_not: Boolean
  signedAt: DateTime
  signedAt_not: DateTime
  signedAt_in: [DateTime!]
  signedAt_not_in: [DateTime!]
  signedAt_lt: DateTime
  signedAt_lte: DateTime
  signedAt_gt: DateTime
  signedAt_gte: DateTime
  AND: [LessorScalarWhereInput!]
  OR: [LessorScalarWhereInput!]
  NOT: [LessorScalarWhereInput!]
}

type LessorSubscriptionPayload {
  mutation: MutationType!
  node: Lessor
  updatedFields: [String!]
  previousValues: LessorPreviousValues
}

input LessorSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: LessorWhereInput
  AND: [LessorSubscriptionWhereInput!]
  OR: [LessorSubscriptionWhereInput!]
  NOT: [LessorSubscriptionWhereInput!]
}

input LessorUpdateInput {
  lease: PropertyLeaseUpdateOneWithoutLessorsInput
  user: UserUpdateOneWithoutLessorLeasesInput
  signed: Boolean
  signedAt: DateTime
}

input LessorUpdateManyDataInput {
  signed: Boolean
  signedAt: DateTime
}

input LessorUpdateManyMutationInput {
  signed: Boolean
  signedAt: DateTime
}

input LessorUpdateManyWithoutLeaseInput {
  create: [LessorCreateWithoutLeaseInput!]
  delete: [LessorWhereUniqueInput!]
  connect: [LessorWhereUniqueInput!]
  set: [LessorWhereUniqueInput!]
  disconnect: [LessorWhereUniqueInput!]
  update: [LessorUpdateWithWhereUniqueWithoutLeaseInput!]
  upsert: [LessorUpsertWithWhereUniqueWithoutLeaseInput!]
  deleteMany: [LessorScalarWhereInput!]
  updateMany: [LessorUpdateManyWithWhereNestedInput!]
}

input LessorUpdateManyWithoutUserInput {
  create: [LessorCreateWithoutUserInput!]
  delete: [LessorWhereUniqueInput!]
  connect: [LessorWhereUniqueInput!]
  set: [LessorWhereUniqueInput!]
  disconnect: [LessorWhereUniqueInput!]
  update: [LessorUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [LessorUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [LessorScalarWhereInput!]
  updateMany: [LessorUpdateManyWithWhereNestedInput!]
}

input LessorUpdateManyWithWhereNestedInput {
  where: LessorScalarWhereInput!
  data: LessorUpdateManyDataInput!
}

input LessorUpdateWithoutLeaseDataInput {
  user: UserUpdateOneWithoutLessorLeasesInput
  signed: Boolean
  signedAt: DateTime
}

input LessorUpdateWithoutUserDataInput {
  lease: PropertyLeaseUpdateOneWithoutLessorsInput
  signed: Boolean
  signedAt: DateTime
}

input LessorUpdateWithWhereUniqueWithoutLeaseInput {
  where: LessorWhereUniqueInput!
  data: LessorUpdateWithoutLeaseDataInput!
}

input LessorUpdateWithWhereUniqueWithoutUserInput {
  where: LessorWhereUniqueInput!
  data: LessorUpdateWithoutUserDataInput!
}

input LessorUpsertWithWhereUniqueWithoutLeaseInput {
  where: LessorWhereUniqueInput!
  update: LessorUpdateWithoutLeaseDataInput!
  create: LessorCreateWithoutLeaseInput!
}

input LessorUpsertWithWhereUniqueWithoutUserInput {
  where: LessorWhereUniqueInput!
  update: LessorUpdateWithoutUserDataInput!
  create: LessorCreateWithoutUserInput!
}

input LessorWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  lease: PropertyLeaseWhereInput
  user: UserWhereInput
  signed: Boolean
  signed_not: Boolean
  signedAt: DateTime
  signedAt_not: DateTime
  signedAt_in: [DateTime!]
  signedAt_not_in: [DateTime!]
  signedAt_lt: DateTime
  signedAt_lte: DateTime
  signedAt_gt: DateTime
  signedAt_gte: DateTime
  AND: [LessorWhereInput!]
  OR: [LessorWhereInput!]
  NOT: [LessorWhereInput!]
}

input LessorWhereUniqueInput {
  id: ID
}

scalar Long

type Message {
  id: ID!
  content: String!
  createdAt: DateTime!
  lastMessageRel: Chat
  chat: Chat!
  sender: User
  recipient: User
  isMine: Boolean!
}

type MessageConnection {
  pageInfo: PageInfo!
  edges: [MessageEdge]!
  aggregate: AggregateMessage!
}

input MessageCreateInput {
  id: ID
  content: String!
  lastMessageRel: ChatCreateOneWithoutLastMessageInput
  chat: ChatCreateOneWithoutMessagesInput!
  sender: UserCreateOneWithoutSentMessagesInput
  recipient: UserCreateOneWithoutRecievedMessagesInput
  isMine: Boolean!
}

input MessageCreateManyWithoutChatInput {
  create: [MessageCreateWithoutChatInput!]
  connect: [MessageWhereUniqueInput!]
}

input MessageCreateManyWithoutRecipientInput {
  create: [MessageCreateWithoutRecipientInput!]
  connect: [MessageWhereUniqueInput!]
}

input MessageCreateManyWithoutSenderInput {
  create: [MessageCreateWithoutSenderInput!]
  connect: [MessageWhereUniqueInput!]
}

input MessageCreateOneWithoutLastMessageRelInput {
  create: MessageCreateWithoutLastMessageRelInput
  connect: MessageWhereUniqueInput
}

input MessageCreateWithoutChatInput {
  id: ID
  content: String!
  lastMessageRel: ChatCreateOneWithoutLastMessageInput
  sender: UserCreateOneWithoutSentMessagesInput
  recipient: UserCreateOneWithoutRecievedMessagesInput
  isMine: Boolean!
}

input MessageCreateWithoutLastMessageRelInput {
  id: ID
  content: String!
  chat: ChatCreateOneWithoutMessagesInput!
  sender: UserCreateOneWithoutSentMessagesInput
  recipient: UserCreateOneWithoutRecievedMessagesInput
  isMine: Boolean!
}

input MessageCreateWithoutRecipientInput {
  id: ID
  content: String!
  lastMessageRel: ChatCreateOneWithoutLastMessageInput
  chat: ChatCreateOneWithoutMessagesInput!
  sender: UserCreateOneWithoutSentMessagesInput
  isMine: Boolean!
}

input MessageCreateWithoutSenderInput {
  id: ID
  content: String!
  lastMessageRel: ChatCreateOneWithoutLastMessageInput
  chat: ChatCreateOneWithoutMessagesInput!
  recipient: UserCreateOneWithoutRecievedMessagesInput
  isMine: Boolean!
}

type MessageEdge {
  node: Message!
  cursor: String!
}

enum MessageOrderByInput {
  id_ASC
  id_DESC
  content_ASC
  content_DESC
  createdAt_ASC
  createdAt_DESC
  isMine_ASC
  isMine_DESC
}

type MessagePreviousValues {
  id: ID!
  content: String!
  createdAt: DateTime!
  isMine: Boolean!
}

input MessageScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  isMine: Boolean
  isMine_not: Boolean
  AND: [MessageScalarWhereInput!]
  OR: [MessageScalarWhereInput!]
  NOT: [MessageScalarWhereInput!]
}

type MessageSubscriptionPayload {
  mutation: MutationType!
  node: Message
  updatedFields: [String!]
  previousValues: MessagePreviousValues
}

input MessageSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: MessageWhereInput
  AND: [MessageSubscriptionWhereInput!]
  OR: [MessageSubscriptionWhereInput!]
  NOT: [MessageSubscriptionWhereInput!]
}

input MessageUpdateInput {
  content: String
  lastMessageRel: ChatUpdateOneWithoutLastMessageInput
  chat: ChatUpdateOneRequiredWithoutMessagesInput
  sender: UserUpdateOneWithoutSentMessagesInput
  recipient: UserUpdateOneWithoutRecievedMessagesInput
  isMine: Boolean
}

input MessageUpdateManyDataInput {
  content: String
  isMine: Boolean
}

input MessageUpdateManyMutationInput {
  content: String
  isMine: Boolean
}

input MessageUpdateManyWithoutChatInput {
  create: [MessageCreateWithoutChatInput!]
  delete: [MessageWhereUniqueInput!]
  connect: [MessageWhereUniqueInput!]
  set: [MessageWhereUniqueInput!]
  disconnect: [MessageWhereUniqueInput!]
  update: [MessageUpdateWithWhereUniqueWithoutChatInput!]
  upsert: [MessageUpsertWithWhereUniqueWithoutChatInput!]
  deleteMany: [MessageScalarWhereInput!]
  updateMany: [MessageUpdateManyWithWhereNestedInput!]
}

input MessageUpdateManyWithoutRecipientInput {
  create: [MessageCreateWithoutRecipientInput!]
  delete: [MessageWhereUniqueInput!]
  connect: [MessageWhereUniqueInput!]
  set: [MessageWhereUniqueInput!]
  disconnect: [MessageWhereUniqueInput!]
  update: [MessageUpdateWithWhereUniqueWithoutRecipientInput!]
  upsert: [MessageUpsertWithWhereUniqueWithoutRecipientInput!]
  deleteMany: [MessageScalarWhereInput!]
  updateMany: [MessageUpdateManyWithWhereNestedInput!]
}

input MessageUpdateManyWithoutSenderInput {
  create: [MessageCreateWithoutSenderInput!]
  delete: [MessageWhereUniqueInput!]
  connect: [MessageWhereUniqueInput!]
  set: [MessageWhereUniqueInput!]
  disconnect: [MessageWhereUniqueInput!]
  update: [MessageUpdateWithWhereUniqueWithoutSenderInput!]
  upsert: [MessageUpsertWithWhereUniqueWithoutSenderInput!]
  deleteMany: [MessageScalarWhereInput!]
  updateMany: [MessageUpdateManyWithWhereNestedInput!]
}

input MessageUpdateManyWithWhereNestedInput {
  where: MessageScalarWhereInput!
  data: MessageUpdateManyDataInput!
}

input MessageUpdateOneWithoutLastMessageRelInput {
  create: MessageCreateWithoutLastMessageRelInput
  update: MessageUpdateWithoutLastMessageRelDataInput
  upsert: MessageUpsertWithoutLastMessageRelInput
  delete: Boolean
  disconnect: Boolean
  connect: MessageWhereUniqueInput
}

input MessageUpdateWithoutChatDataInput {
  content: String
  lastMessageRel: ChatUpdateOneWithoutLastMessageInput
  sender: UserUpdateOneWithoutSentMessagesInput
  recipient: UserUpdateOneWithoutRecievedMessagesInput
  isMine: Boolean
}

input MessageUpdateWithoutLastMessageRelDataInput {
  content: String
  chat: ChatUpdateOneRequiredWithoutMessagesInput
  sender: UserUpdateOneWithoutSentMessagesInput
  recipient: UserUpdateOneWithoutRecievedMessagesInput
  isMine: Boolean
}

input MessageUpdateWithoutRecipientDataInput {
  content: String
  lastMessageRel: ChatUpdateOneWithoutLastMessageInput
  chat: ChatUpdateOneRequiredWithoutMessagesInput
  sender: UserUpdateOneWithoutSentMessagesInput
  isMine: Boolean
}

input MessageUpdateWithoutSenderDataInput {
  content: String
  lastMessageRel: ChatUpdateOneWithoutLastMessageInput
  chat: ChatUpdateOneRequiredWithoutMessagesInput
  recipient: UserUpdateOneWithoutRecievedMessagesInput
  isMine: Boolean
}

input MessageUpdateWithWhereUniqueWithoutChatInput {
  where: MessageWhereUniqueInput!
  data: MessageUpdateWithoutChatDataInput!
}

input MessageUpdateWithWhereUniqueWithoutRecipientInput {
  where: MessageWhereUniqueInput!
  data: MessageUpdateWithoutRecipientDataInput!
}

input MessageUpdateWithWhereUniqueWithoutSenderInput {
  where: MessageWhereUniqueInput!
  data: MessageUpdateWithoutSenderDataInput!
}

input MessageUpsertWithoutLastMessageRelInput {
  update: MessageUpdateWithoutLastMessageRelDataInput!
  create: MessageCreateWithoutLastMessageRelInput!
}

input MessageUpsertWithWhereUniqueWithoutChatInput {
  where: MessageWhereUniqueInput!
  update: MessageUpdateWithoutChatDataInput!
  create: MessageCreateWithoutChatInput!
}

input MessageUpsertWithWhereUniqueWithoutRecipientInput {
  where: MessageWhereUniqueInput!
  update: MessageUpdateWithoutRecipientDataInput!
  create: MessageCreateWithoutRecipientInput!
}

input MessageUpsertWithWhereUniqueWithoutSenderInput {
  where: MessageWhereUniqueInput!
  update: MessageUpdateWithoutSenderDataInput!
  create: MessageCreateWithoutSenderInput!
}

input MessageWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  lastMessageRel: ChatWhereInput
  chat: ChatWhereInput
  sender: UserWhereInput
  recipient: UserWhereInput
  isMine: Boolean
  isMine_not: Boolean
  AND: [MessageWhereInput!]
  OR: [MessageWhereInput!]
  NOT: [MessageWhereInput!]
}

input MessageWhereUniqueInput {
  id: ID
}

type Mutation {
  createAccommodation(data: AccommodationCreateInput!): Accommodation!
  updateAccommodation(data: AccommodationUpdateInput!, where: AccommodationWhereUniqueInput!): Accommodation
  updateManyAccommodations(data: AccommodationUpdateManyMutationInput!, where: AccommodationWhereInput): BatchPayload!
  upsertAccommodation(where: AccommodationWhereUniqueInput!, create: AccommodationCreateInput!, update: AccommodationUpdateInput!): Accommodation!
  deleteAccommodation(where: AccommodationWhereUniqueInput!): Accommodation
  deleteManyAccommodations(where: AccommodationWhereInput): BatchPayload!
  createActivity(data: ActivityCreateInput!): Activity!
  updateActivity(data: ActivityUpdateInput!, where: ActivityWhereUniqueInput!): Activity
  updateManyActivities(data: ActivityUpdateManyMutationInput!, where: ActivityWhereInput): BatchPayload!
  upsertActivity(where: ActivityWhereUniqueInput!, create: ActivityCreateInput!, update: ActivityUpdateInput!): Activity!
  deleteActivity(where: ActivityWhereUniqueInput!): Activity
  deleteManyActivities(where: ActivityWhereInput): BatchPayload!
  createAddress(data: AddressCreateInput!): Address!
  updateAddress(data: AddressUpdateInput!, where: AddressWhereUniqueInput!): Address
  updateManyAddresses(data: AddressUpdateManyMutationInput!, where: AddressWhereInput): BatchPayload!
  upsertAddress(where: AddressWhereUniqueInput!, create: AddressCreateInput!, update: AddressUpdateInput!): Address!
  deleteAddress(where: AddressWhereUniqueInput!): Address
  deleteManyAddresses(where: AddressWhereInput): BatchPayload!
  createAdminSetting(data: AdminSettingCreateInput!): AdminSetting!
  updateAdminSetting(data: AdminSettingUpdateInput!, where: AdminSettingWhereUniqueInput!): AdminSetting
  updateManyAdminSettings(data: AdminSettingUpdateManyMutationInput!, where: AdminSettingWhereInput): BatchPayload!
  upsertAdminSetting(where: AdminSettingWhereUniqueInput!, create: AdminSettingCreateInput!, update: AdminSettingUpdateInput!): AdminSetting!
  deleteAdminSetting(where: AdminSettingWhereUniqueInput!): AdminSetting
  deleteManyAdminSettings(where: AdminSettingWhereInput): BatchPayload!
  createBankDetail(data: BankDetailCreateInput!): BankDetail!
  updateBankDetail(data: BankDetailUpdateInput!, where: BankDetailWhereUniqueInput!): BankDetail
  updateManyBankDetails(data: BankDetailUpdateManyMutationInput!, where: BankDetailWhereInput): BatchPayload!
  upsertBankDetail(where: BankDetailWhereUniqueInput!, create: BankDetailCreateInput!, update: BankDetailUpdateInput!): BankDetail!
  deleteBankDetail(where: BankDetailWhereUniqueInput!): BankDetail
  deleteManyBankDetails(where: BankDetailWhereInput): BatchPayload!
  createCharge(data: ChargeCreateInput!): Charge!
  updateCharge(data: ChargeUpdateInput!, where: ChargeWhereUniqueInput!): Charge
  updateManyCharges(data: ChargeUpdateManyMutationInput!, where: ChargeWhereInput): BatchPayload!
  upsertCharge(where: ChargeWhereUniqueInput!, create: ChargeCreateInput!, update: ChargeUpdateInput!): Charge!
  deleteCharge(where: ChargeWhereUniqueInput!): Charge
  deleteManyCharges(where: ChargeWhereInput): BatchPayload!
  createChat(data: ChatCreateInput!): Chat!
  updateChat(data: ChatUpdateInput!, where: ChatWhereUniqueInput!): Chat
  updateManyChats(data: ChatUpdateManyMutationInput!, where: ChatWhereInput): BatchPayload!
  upsertChat(where: ChatWhereUniqueInput!, create: ChatCreateInput!, update: ChatUpdateInput!): Chat!
  deleteChat(where: ChatWhereUniqueInput!): Chat
  deleteManyChats(where: ChatWhereInput): BatchPayload!
  createCreditCard(data: CreditCardCreateInput!): CreditCard!
  updateCreditCard(data: CreditCardUpdateInput!, where: CreditCardWhereUniqueInput!): CreditCard
  updateManyCreditCards(data: CreditCardUpdateManyMutationInput!, where: CreditCardWhereInput): BatchPayload!
  upsertCreditCard(where: CreditCardWhereUniqueInput!, create: CreditCardCreateInput!, update: CreditCardUpdateInput!): CreditCard!
  deleteCreditCard(where: CreditCardWhereUniqueInput!): CreditCard
  deleteManyCreditCards(where: CreditCardWhereInput): BatchPayload!
  createFile(data: FileCreateInput!): File!
  updateFile(data: FileUpdateInput!, where: FileWhereUniqueInput!): File
  updateManyFiles(data: FileUpdateManyMutationInput!, where: FileWhereInput): BatchPayload!
  upsertFile(where: FileWhereUniqueInput!, create: FileCreateInput!, update: FileUpdateInput!): File!
  deleteFile(where: FileWhereUniqueInput!): File
  deleteManyFiles(where: FileWhereInput): BatchPayload!
  createFriendRequest(data: FriendRequestCreateInput!): FriendRequest!
  updateFriendRequest(data: FriendRequestUpdateInput!, where: FriendRequestWhereUniqueInput!): FriendRequest
  upsertFriendRequest(where: FriendRequestWhereUniqueInput!, create: FriendRequestCreateInput!, update: FriendRequestUpdateInput!): FriendRequest!
  deleteFriendRequest(where: FriendRequestWhereUniqueInput!): FriendRequest
  deleteManyFriendRequests(where: FriendRequestWhereInput): BatchPayload!
  createInspection(data: InspectionCreateInput!): Inspection!
  updateInspection(data: InspectionUpdateInput!, where: InspectionWhereUniqueInput!): Inspection
  updateManyInspections(data: InspectionUpdateManyMutationInput!, where: InspectionWhereInput): BatchPayload!
  upsertInspection(where: InspectionWhereUniqueInput!, create: InspectionCreateInput!, update: InspectionUpdateInput!): Inspection!
  deleteInspection(where: InspectionWhereUniqueInput!): Inspection
  deleteManyInspections(where: InspectionWhereInput): BatchPayload!
  createInsulationForm(data: InsulationFormCreateInput!): InsulationForm!
  updateInsulationForm(data: InsulationFormUpdateInput!, where: InsulationFormWhereUniqueInput!): InsulationForm
  updateManyInsulationForms(data: InsulationFormUpdateManyMutationInput!, where: InsulationFormWhereInput): BatchPayload!
  upsertInsulationForm(where: InsulationFormWhereUniqueInput!, create: InsulationFormCreateInput!, update: InsulationFormUpdateInput!): InsulationForm!
  deleteInsulationForm(where: InsulationFormWhereUniqueInput!): InsulationForm
  deleteManyInsulationForms(where: InsulationFormWhereInput): BatchPayload!
  createLessee(data: LesseeCreateInput!): Lessee!
  updateLessee(data: LesseeUpdateInput!, where: LesseeWhereUniqueInput!): Lessee
  updateManyLessees(data: LesseeUpdateManyMutationInput!, where: LesseeWhereInput): BatchPayload!
  upsertLessee(where: LesseeWhereUniqueInput!, create: LesseeCreateInput!, update: LesseeUpdateInput!): Lessee!
  deleteLessee(where: LesseeWhereUniqueInput!): Lessee
  deleteManyLessees(where: LesseeWhereInput): BatchPayload!
  createLessor(data: LessorCreateInput!): Lessor!
  updateLessor(data: LessorUpdateInput!, where: LessorWhereUniqueInput!): Lessor
  updateManyLessors(data: LessorUpdateManyMutationInput!, where: LessorWhereInput): BatchPayload!
  upsertLessor(where: LessorWhereUniqueInput!, create: LessorCreateInput!, update: LessorUpdateInput!): Lessor!
  deleteLessor(where: LessorWhereUniqueInput!): Lessor
  deleteManyLessors(where: LessorWhereInput): BatchPayload!
  createMessage(data: MessageCreateInput!): Message!
  updateMessage(data: MessageUpdateInput!, where: MessageWhereUniqueInput!): Message
  updateManyMessages(data: MessageUpdateManyMutationInput!, where: MessageWhereInput): BatchPayload!
  upsertMessage(where: MessageWhereUniqueInput!, create: MessageCreateInput!, update: MessageUpdateInput!): Message!
  deleteMessage(where: MessageWhereUniqueInput!): Message
  deleteManyMessages(where: MessageWhereInput): BatchPayload!
  createPayment(data: PaymentCreateInput!): Payment!
  updatePayment(data: PaymentUpdateInput!, where: PaymentWhereUniqueInput!): Payment
  updateManyPayments(data: PaymentUpdateManyMutationInput!, where: PaymentWhereInput): BatchPayload!
  upsertPayment(where: PaymentWhereUniqueInput!, create: PaymentCreateInput!, update: PaymentUpdateInput!): Payment!
  deletePayment(where: PaymentWhereUniqueInput!): Payment
  deleteManyPayments(where: PaymentWhereInput): BatchPayload!
  createPreTenancyForm(data: PreTenancyFormCreateInput!): PreTenancyForm!
  updatePreTenancyForm(data: PreTenancyFormUpdateInput!, where: PreTenancyFormWhereUniqueInput!): PreTenancyForm
  updateManyPreTenancyForms(data: PreTenancyFormUpdateManyMutationInput!, where: PreTenancyFormWhereInput): BatchPayload!
  upsertPreTenancyForm(where: PreTenancyFormWhereUniqueInput!, create: PreTenancyFormCreateInput!, update: PreTenancyFormUpdateInput!): PreTenancyForm!
  deletePreTenancyForm(where: PreTenancyFormWhereUniqueInput!): PreTenancyForm
  deleteManyPreTenancyForms(where: PreTenancyFormWhereInput): BatchPayload!
  createProperty(data: PropertyCreateInput!): Property!
  updateProperty(data: PropertyUpdateInput!, where: PropertyWhereUniqueInput!): Property
  updateManyProperties(data: PropertyUpdateManyMutationInput!, where: PropertyWhereInput): BatchPayload!
  upsertProperty(where: PropertyWhereUniqueInput!, create: PropertyCreateInput!, update: PropertyUpdateInput!): Property!
  deleteProperty(where: PropertyWhereUniqueInput!): Property
  deleteManyProperties(where: PropertyWhereInput): BatchPayload!
  createPropertyAdvertisement(data: PropertyAdvertisementCreateInput!): PropertyAdvertisement!
  deletePropertyAdvertisement(where: PropertyAdvertisementWhereUniqueInput!): PropertyAdvertisement
  deleteManyPropertyAdvertisements(where: PropertyAdvertisementWhereInput): BatchPayload!
  createPropertyAssist(data: PropertyAssistCreateInput!): PropertyAssist!
  updatePropertyAssist(data: PropertyAssistUpdateInput!, where: PropertyAssistWhereUniqueInput!): PropertyAssist
  updateManyPropertyAssists(data: PropertyAssistUpdateManyMutationInput!, where: PropertyAssistWhereInput): BatchPayload!
  upsertPropertyAssist(where: PropertyAssistWhereUniqueInput!, create: PropertyAssistCreateInput!, update: PropertyAssistUpdateInput!): PropertyAssist!
  deletePropertyAssist(where: PropertyAssistWhereUniqueInput!): PropertyAssist
  deleteManyPropertyAssists(where: PropertyAssistWhereInput): BatchPayload!
  createPropertyFiles(data: PropertyFilesCreateInput!): PropertyFiles!
  updatePropertyFiles(data: PropertyFilesUpdateInput!, where: PropertyFilesWhereUniqueInput!): PropertyFiles
  upsertPropertyFiles(where: PropertyFilesWhereUniqueInput!, create: PropertyFilesCreateInput!, update: PropertyFilesUpdateInput!): PropertyFiles!
  deletePropertyFiles(where: PropertyFilesWhereUniqueInput!): PropertyFiles
  deleteManyPropertyFileses(where: PropertyFilesWhereInput): BatchPayload!
  createPropertyLease(data: PropertyLeaseCreateInput!): PropertyLease!
  updatePropertyLease(data: PropertyLeaseUpdateInput!, where: PropertyLeaseWhereUniqueInput!): PropertyLease
  updateManyPropertyLeases(data: PropertyLeaseUpdateManyMutationInput!, where: PropertyLeaseWhereInput): BatchPayload!
  upsertPropertyLease(where: PropertyLeaseWhereUniqueInput!, create: PropertyLeaseCreateInput!, update: PropertyLeaseUpdateInput!): PropertyLease!
  deletePropertyLease(where: PropertyLeaseWhereUniqueInput!): PropertyLease
  deleteManyPropertyLeases(where: PropertyLeaseWhereInput): BatchPayload!
  createRentalApplication(data: RentalApplicationCreateInput!): RentalApplication!
  updateRentalApplication(data: RentalApplicationUpdateInput!, where: RentalApplicationWhereUniqueInput!): RentalApplication
  updateManyRentalApplications(data: RentalApplicationUpdateManyMutationInput!, where: RentalApplicationWhereInput): BatchPayload!
  upsertRentalApplication(where: RentalApplicationWhereUniqueInput!, create: RentalApplicationCreateInput!, update: RentalApplicationUpdateInput!): RentalApplication!
  deleteRentalApplication(where: RentalApplicationWhereUniqueInput!): RentalApplication
  deleteManyRentalApplications(where: RentalApplicationWhereInput): BatchPayload!
  createRentalAppraisal(data: RentalAppraisalCreateInput!): RentalAppraisal!
  updateRentalAppraisal(data: RentalAppraisalUpdateInput!, where: RentalAppraisalWhereUniqueInput!): RentalAppraisal
  updateManyRentalAppraisals(data: RentalAppraisalUpdateManyMutationInput!, where: RentalAppraisalWhereInput): BatchPayload!
  upsertRentalAppraisal(where: RentalAppraisalWhereUniqueInput!, create: RentalAppraisalCreateInput!, update: RentalAppraisalUpdateInput!): RentalAppraisal!
  deleteRentalAppraisal(where: RentalAppraisalWhereUniqueInput!): RentalAppraisal
  deleteManyRentalAppraisals(where: RentalAppraisalWhereInput): BatchPayload!
  createRentalGroupApplicant(data: RentalGroupApplicantCreateInput!): RentalGroupApplicant!
  updateRentalGroupApplicant(data: RentalGroupApplicantUpdateInput!, where: RentalGroupApplicantWhereUniqueInput!): RentalGroupApplicant
  updateManyRentalGroupApplicants(data: RentalGroupApplicantUpdateManyMutationInput!, where: RentalGroupApplicantWhereInput): BatchPayload!
  upsertRentalGroupApplicant(where: RentalGroupApplicantWhereUniqueInput!, create: RentalGroupApplicantCreateInput!, update: RentalGroupApplicantUpdateInput!): RentalGroupApplicant!
  deleteRentalGroupApplicant(where: RentalGroupApplicantWhereUniqueInput!): RentalGroupApplicant
  deleteManyRentalGroupApplicants(where: RentalGroupApplicantWhereInput): BatchPayload!
  createSeen(data: SeenCreateInput!): Seen!
  updateSeen(data: SeenUpdateInput!, where: SeenWhereUniqueInput!): Seen
  updateManySeens(data: SeenUpdateManyMutationInput!, where: SeenWhereInput): BatchPayload!
  upsertSeen(where: SeenWhereUniqueInput!, create: SeenCreateInput!, update: SeenUpdateInput!): Seen!
  deleteSeen(where: SeenWhereUniqueInput!): Seen
  deleteManySeens(where: SeenWhereInput): BatchPayload!
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  createViewing(data: ViewingCreateInput!): Viewing!
  updateViewing(data: ViewingUpdateInput!, where: ViewingWhereUniqueInput!): Viewing
  updateManyViewings(data: ViewingUpdateManyMutationInput!, where: ViewingWhereInput): BatchPayload!
  upsertViewing(where: ViewingWhereUniqueInput!, create: ViewingCreateInput!, update: ViewingUpdateInput!): Viewing!
  deleteViewing(where: ViewingWhereUniqueInput!): Viewing
  deleteManyViewings(where: ViewingWhereInput): BatchPayload!
  createWallet(data: WalletCreateInput!): Wallet!
  updateWallet(data: WalletUpdateInput!, where: WalletWhereUniqueInput!): Wallet
  updateManyWallets(data: WalletUpdateManyMutationInput!, where: WalletWhereInput): BatchPayload!
  upsertWallet(where: WalletWhereUniqueInput!, create: WalletCreateInput!, update: WalletUpdateInput!): Wallet!
  deleteWallet(where: WalletWhereUniqueInput!): Wallet
  deleteManyWallets(where: WalletWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

enum OutdoorFeature {
  OUTDOOR_SPA
  OUTDOOR_ENTERTAINMENT
  SWIMMING_POOL
  FULLY_FENCED
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

enum PartyResponsible {
  LANDLORD
  TENANT
  REHOUSER
}

type Payment {
  id: ID!
  wallet: Wallet
  userId: ID!
  bankName: String
  bankBranch: String
  bankAccount: String
  bankRef: String
  type: PaymentType
  leaseId: ID
  propertyId: ID
  stripePaymentId: String
  object: Json
  amount: Float
  createdAt: DateTime!
  description: String
  status: String
}

type PaymentConnection {
  pageInfo: PageInfo!
  edges: [PaymentEdge]!
  aggregate: AggregatePayment!
}

input PaymentCreateInput {
  id: ID
  wallet: WalletCreateOneWithoutPaymentsInput
  userId: ID!
  bankName: String
  bankBranch: String
  bankAccount: String
  bankRef: String
  type: PaymentType
  leaseId: ID
  propertyId: ID
  stripePaymentId: String
  object: Json
  amount: Float
  description: String
  status: String
}

input PaymentCreateManyWithoutWalletInput {
  create: [PaymentCreateWithoutWalletInput!]
  connect: [PaymentWhereUniqueInput!]
}

input PaymentCreateWithoutWalletInput {
  id: ID
  userId: ID!
  bankName: String
  bankBranch: String
  bankAccount: String
  bankRef: String
  type: PaymentType
  leaseId: ID
  propertyId: ID
  stripePaymentId: String
  object: Json
  amount: Float
  description: String
  status: String
}

type PaymentEdge {
  node: Payment!
  cursor: String!
}

enum PaymentOrderByInput {
  id_ASC
  id_DESC
  userId_ASC
  userId_DESC
  bankName_ASC
  bankName_DESC
  bankBranch_ASC
  bankBranch_DESC
  bankAccount_ASC
  bankAccount_DESC
  bankRef_ASC
  bankRef_DESC
  type_ASC
  type_DESC
  leaseId_ASC
  leaseId_DESC
  propertyId_ASC
  propertyId_DESC
  stripePaymentId_ASC
  stripePaymentId_DESC
  object_ASC
  object_DESC
  amount_ASC
  amount_DESC
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  status_ASC
  status_DESC
}

type PaymentPreviousValues {
  id: ID!
  userId: ID!
  bankName: String
  bankBranch: String
  bankAccount: String
  bankRef: String
  type: PaymentType
  leaseId: ID
  propertyId: ID
  stripePaymentId: String
  object: Json
  amount: Float
  createdAt: DateTime!
  description: String
  status: String
}

input PaymentScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  userId: ID
  userId_not: ID
  userId_in: [ID!]
  userId_not_in: [ID!]
  userId_lt: ID
  userId_lte: ID
  userId_gt: ID
  userId_gte: ID
  userId_contains: ID
  userId_not_contains: ID
  userId_starts_with: ID
  userId_not_starts_with: ID
  userId_ends_with: ID
  userId_not_ends_with: ID
  bankName: String
  bankName_not: String
  bankName_in: [String!]
  bankName_not_in: [String!]
  bankName_lt: String
  bankName_lte: String
  bankName_gt: String
  bankName_gte: String
  bankName_contains: String
  bankName_not_contains: String
  bankName_starts_with: String
  bankName_not_starts_with: String
  bankName_ends_with: String
  bankName_not_ends_with: String
  bankBranch: String
  bankBranch_not: String
  bankBranch_in: [String!]
  bankBranch_not_in: [String!]
  bankBranch_lt: String
  bankBranch_lte: String
  bankBranch_gt: String
  bankBranch_gte: String
  bankBranch_contains: String
  bankBranch_not_contains: String
  bankBranch_starts_with: String
  bankBranch_not_starts_with: String
  bankBranch_ends_with: String
  bankBranch_not_ends_with: String
  bankAccount: String
  bankAccount_not: String
  bankAccount_in: [String!]
  bankAccount_not_in: [String!]
  bankAccount_lt: String
  bankAccount_lte: String
  bankAccount_gt: String
  bankAccount_gte: String
  bankAccount_contains: String
  bankAccount_not_contains: String
  bankAccount_starts_with: String
  bankAccount_not_starts_with: String
  bankAccount_ends_with: String
  bankAccount_not_ends_with: String
  bankRef: String
  bankRef_not: String
  bankRef_in: [String!]
  bankRef_not_in: [String!]
  bankRef_lt: String
  bankRef_lte: String
  bankRef_gt: String
  bankRef_gte: String
  bankRef_contains: String
  bankRef_not_contains: String
  bankRef_starts_with: String
  bankRef_not_starts_with: String
  bankRef_ends_with: String
  bankRef_not_ends_with: String
  type: PaymentType
  type_not: PaymentType
  type_in: [PaymentType!]
  type_not_in: [PaymentType!]
  leaseId: ID
  leaseId_not: ID
  leaseId_in: [ID!]
  leaseId_not_in: [ID!]
  leaseId_lt: ID
  leaseId_lte: ID
  leaseId_gt: ID
  leaseId_gte: ID
  leaseId_contains: ID
  leaseId_not_contains: ID
  leaseId_starts_with: ID
  leaseId_not_starts_with: ID
  leaseId_ends_with: ID
  leaseId_not_ends_with: ID
  propertyId: ID
  propertyId_not: ID
  propertyId_in: [ID!]
  propertyId_not_in: [ID!]
  propertyId_lt: ID
  propertyId_lte: ID
  propertyId_gt: ID
  propertyId_gte: ID
  propertyId_contains: ID
  propertyId_not_contains: ID
  propertyId_starts_with: ID
  propertyId_not_starts_with: ID
  propertyId_ends_with: ID
  propertyId_not_ends_with: ID
  stripePaymentId: String
  stripePaymentId_not: String
  stripePaymentId_in: [String!]
  stripePaymentId_not_in: [String!]
  stripePaymentId_lt: String
  stripePaymentId_lte: String
  stripePaymentId_gt: String
  stripePaymentId_gte: String
  stripePaymentId_contains: String
  stripePaymentId_not_contains: String
  stripePaymentId_starts_with: String
  stripePaymentId_not_starts_with: String
  stripePaymentId_ends_with: String
  stripePaymentId_not_ends_with: String
  amount: Float
  amount_not: Float
  amount_in: [Float!]
  amount_not_in: [Float!]
  amount_lt: Float
  amount_lte: Float
  amount_gt: Float
  amount_gte: Float
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  status: String
  status_not: String
  status_in: [String!]
  status_not_in: [String!]
  status_lt: String
  status_lte: String
  status_gt: String
  status_gte: String
  status_contains: String
  status_not_contains: String
  status_starts_with: String
  status_not_starts_with: String
  status_ends_with: String
  status_not_ends_with: String
  AND: [PaymentScalarWhereInput!]
  OR: [PaymentScalarWhereInput!]
  NOT: [PaymentScalarWhereInput!]
}

type PaymentSubscriptionPayload {
  mutation: MutationType!
  node: Payment
  updatedFields: [String!]
  previousValues: PaymentPreviousValues
}

input PaymentSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: PaymentWhereInput
  AND: [PaymentSubscriptionWhereInput!]
  OR: [PaymentSubscriptionWhereInput!]
  NOT: [PaymentSubscriptionWhereInput!]
}

enum PaymentType {
  STRIPE
  SYSTEM
}

input PaymentUpdateInput {
  wallet: WalletUpdateOneWithoutPaymentsInput
  userId: ID
  bankName: String
  bankBranch: String
  bankAccount: String
  bankRef: String
  type: PaymentType
  leaseId: ID
  propertyId: ID
  stripePaymentId: String
  object: Json
  amount: Float
  description: String
  status: String
}

input PaymentUpdateManyDataInput {
  userId: ID
  bankName: String
  bankBranch: String
  bankAccount: String
  bankRef: String
  type: PaymentType
  leaseId: ID
  propertyId: ID
  stripePaymentId: String
  object: Json
  amount: Float
  description: String
  status: String
}

input PaymentUpdateManyMutationInput {
  userId: ID
  bankName: String
  bankBranch: String
  bankAccount: String
  bankRef: String
  type: PaymentType
  leaseId: ID
  propertyId: ID
  stripePaymentId: String
  object: Json
  amount: Float
  description: String
  status: String
}

input PaymentUpdateManyWithoutWalletInput {
  create: [PaymentCreateWithoutWalletInput!]
  delete: [PaymentWhereUniqueInput!]
  connect: [PaymentWhereUniqueInput!]
  set: [PaymentWhereUniqueInput!]
  disconnect: [PaymentWhereUniqueInput!]
  update: [PaymentUpdateWithWhereUniqueWithoutWalletInput!]
  upsert: [PaymentUpsertWithWhereUniqueWithoutWalletInput!]
  deleteMany: [PaymentScalarWhereInput!]
  updateMany: [PaymentUpdateManyWithWhereNestedInput!]
}

input PaymentUpdateManyWithWhereNestedInput {
  where: PaymentScalarWhereInput!
  data: PaymentUpdateManyDataInput!
}

input PaymentUpdateWithoutWalletDataInput {
  userId: ID
  bankName: String
  bankBranch: String
  bankAccount: String
  bankRef: String
  type: PaymentType
  leaseId: ID
  propertyId: ID
  stripePaymentId: String
  object: Json
  amount: Float
  description: String
  status: String
}

input PaymentUpdateWithWhereUniqueWithoutWalletInput {
  where: PaymentWhereUniqueInput!
  data: PaymentUpdateWithoutWalletDataInput!
}

input PaymentUpsertWithWhereUniqueWithoutWalletInput {
  where: PaymentWhereUniqueInput!
  update: PaymentUpdateWithoutWalletDataInput!
  create: PaymentCreateWithoutWalletInput!
}

input PaymentWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  wallet: WalletWhereInput
  userId: ID
  userId_not: ID
  userId_in: [ID!]
  userId_not_in: [ID!]
  userId_lt: ID
  userId_lte: ID
  userId_gt: ID
  userId_gte: ID
  userId_contains: ID
  userId_not_contains: ID
  userId_starts_with: ID
  userId_not_starts_with: ID
  userId_ends_with: ID
  userId_not_ends_with: ID
  bankName: String
  bankName_not: String
  bankName_in: [String!]
  bankName_not_in: [String!]
  bankName_lt: String
  bankName_lte: String
  bankName_gt: String
  bankName_gte: String
  bankName_contains: String
  bankName_not_contains: String
  bankName_starts_with: String
  bankName_not_starts_with: String
  bankName_ends_with: String
  bankName_not_ends_with: String
  bankBranch: String
  bankBranch_not: String
  bankBranch_in: [String!]
  bankBranch_not_in: [String!]
  bankBranch_lt: String
  bankBranch_lte: String
  bankBranch_gt: String
  bankBranch_gte: String
  bankBranch_contains: String
  bankBranch_not_contains: String
  bankBranch_starts_with: String
  bankBranch_not_starts_with: String
  bankBranch_ends_with: String
  bankBranch_not_ends_with: String
  bankAccount: String
  bankAccount_not: String
  bankAccount_in: [String!]
  bankAccount_not_in: [String!]
  bankAccount_lt: String
  bankAccount_lte: String
  bankAccount_gt: String
  bankAccount_gte: String
  bankAccount_contains: String
  bankAccount_not_contains: String
  bankAccount_starts_with: String
  bankAccount_not_starts_with: String
  bankAccount_ends_with: String
  bankAccount_not_ends_with: String
  bankRef: String
  bankRef_not: String
  bankRef_in: [String!]
  bankRef_not_in: [String!]
  bankRef_lt: String
  bankRef_lte: String
  bankRef_gt: String
  bankRef_gte: String
  bankRef_contains: String
  bankRef_not_contains: String
  bankRef_starts_with: String
  bankRef_not_starts_with: String
  bankRef_ends_with: String
  bankRef_not_ends_with: String
  type: PaymentType
  type_not: PaymentType
  type_in: [PaymentType!]
  type_not_in: [PaymentType!]
  leaseId: ID
  leaseId_not: ID
  leaseId_in: [ID!]
  leaseId_not_in: [ID!]
  leaseId_lt: ID
  leaseId_lte: ID
  leaseId_gt: ID
  leaseId_gte: ID
  leaseId_contains: ID
  leaseId_not_contains: ID
  leaseId_starts_with: ID
  leaseId_not_starts_with: ID
  leaseId_ends_with: ID
  leaseId_not_ends_with: ID
  propertyId: ID
  propertyId_not: ID
  propertyId_in: [ID!]
  propertyId_not_in: [ID!]
  propertyId_lt: ID
  propertyId_lte: ID
  propertyId_gt: ID
  propertyId_gte: ID
  propertyId_contains: ID
  propertyId_not_contains: ID
  propertyId_starts_with: ID
  propertyId_not_starts_with: ID
  propertyId_ends_with: ID
  propertyId_not_ends_with: ID
  stripePaymentId: String
  stripePaymentId_not: String
  stripePaymentId_in: [String!]
  stripePaymentId_not_in: [String!]
  stripePaymentId_lt: String
  stripePaymentId_lte: String
  stripePaymentId_gt: String
  stripePaymentId_gte: String
  stripePaymentId_contains: String
  stripePaymentId_not_contains: String
  stripePaymentId_starts_with: String
  stripePaymentId_not_starts_with: String
  stripePaymentId_ends_with: String
  stripePaymentId_not_ends_with: String
  amount: Float
  amount_not: Float
  amount_in: [Float!]
  amount_not_in: [Float!]
  amount_lt: Float
  amount_lte: Float
  amount_gt: Float
  amount_gte: Float
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  status: String
  status_not: String
  status_in: [String!]
  status_not_in: [String!]
  status_lt: String
  status_lte: String
  status_gt: String
  status_gte: String
  status_contains: String
  status_not_contains: String
  status_starts_with: String
  status_not_starts_with: String
  status_ends_with: String
  status_not_ends_with: String
  AND: [PaymentWhereInput!]
  OR: [PaymentWhereInput!]
  NOT: [PaymentWhereInput!]
}

input PaymentWhereUniqueInput {
  id: ID
}

enum Permission {
  ADMIN
  USER
  PERMISSIONUPDATE
}

enum Pet {
  DOG
  CAT
  CAGED_BIRD
  FISH
}

type PreTenancyForm {
  id: ID!
  rentalApplicant: RentalGroupApplicant
  firstTimeTenant: Boolean
  preferredMoveInDate: DateTime
  fullName: String
  dob: DateTime
  under18: Boolean
  phone: String
  email: String
  placeId: String!
  currentLocation: String!
  currentLocationLat: Float!
  currentLocationLng: Float!
  proofOfAddress: File
  yearsAtAddress: Int
  monthsAtAddress: Int
  reasonForLeaving: String
  currentLandlordName: String
  currentLandlordNumber: String
  currentLandlordEmail: String
  consentToLandlordContact: Boolean
  referrence1Name: String
  referrence1Phone: String
  referrence1Email: String
  referrence2Name: String
  referrence2Phone: String
  referrence2Email: String
  acceptedTerms: Boolean
}

type PreTenancyFormConnection {
  pageInfo: PageInfo!
  edges: [PreTenancyFormEdge]!
  aggregate: AggregatePreTenancyForm!
}

input PreTenancyFormCreateInput {
  id: ID
  rentalApplicant: RentalGroupApplicantCreateOneWithoutPreTenancyApplicationFormInput
  firstTimeTenant: Boolean
  preferredMoveInDate: DateTime
  fullName: String
  dob: DateTime
  under18: Boolean
  phone: String
  email: String
  placeId: String!
  currentLocation: String!
  currentLocationLat: Float!
  currentLocationLng: Float!
  proofOfAddress: FileCreateOneWithoutPreTenancyProofOfAddressInput
  yearsAtAddress: Int
  monthsAtAddress: Int
  reasonForLeaving: String
  currentLandlordName: String
  currentLandlordNumber: String
  currentLandlordEmail: String
  consentToLandlordContact: Boolean
  referrence1Name: String
  referrence1Phone: String
  referrence1Email: String
  referrence2Name: String
  referrence2Phone: String
  referrence2Email: String
  acceptedTerms: Boolean
}

input PreTenancyFormCreateOneWithoutProofOfAddressInput {
  create: PreTenancyFormCreateWithoutProofOfAddressInput
  connect: PreTenancyFormWhereUniqueInput
}

input PreTenancyFormCreateOneWithoutRentalApplicantInput {
  create: PreTenancyFormCreateWithoutRentalApplicantInput
  connect: PreTenancyFormWhereUniqueInput
}

input PreTenancyFormCreateWithoutProofOfAddressInput {
  id: ID
  rentalApplicant: RentalGroupApplicantCreateOneWithoutPreTenancyApplicationFormInput
  firstTimeTenant: Boolean
  preferredMoveInDate: DateTime
  fullName: String
  dob: DateTime
  under18: Boolean
  phone: String
  email: String
  placeId: String!
  currentLocation: String!
  currentLocationLat: Float!
  currentLocationLng: Float!
  yearsAtAddress: Int
  monthsAtAddress: Int
  reasonForLeaving: String
  currentLandlordName: String
  currentLandlordNumber: String
  currentLandlordEmail: String
  consentToLandlordContact: Boolean
  referrence1Name: String
  referrence1Phone: String
  referrence1Email: String
  referrence2Name: String
  referrence2Phone: String
  referrence2Email: String
  acceptedTerms: Boolean
}

input PreTenancyFormCreateWithoutRentalApplicantInput {
  id: ID
  firstTimeTenant: Boolean
  preferredMoveInDate: DateTime
  fullName: String
  dob: DateTime
  under18: Boolean
  phone: String
  email: String
  placeId: String!
  currentLocation: String!
  currentLocationLat: Float!
  currentLocationLng: Float!
  proofOfAddress: FileCreateOneWithoutPreTenancyProofOfAddressInput
  yearsAtAddress: Int
  monthsAtAddress: Int
  reasonForLeaving: String
  currentLandlordName: String
  currentLandlordNumber: String
  currentLandlordEmail: String
  consentToLandlordContact: Boolean
  referrence1Name: String
  referrence1Phone: String
  referrence1Email: String
  referrence2Name: String
  referrence2Phone: String
  referrence2Email: String
  acceptedTerms: Boolean
}

type PreTenancyFormEdge {
  node: PreTenancyForm!
  cursor: String!
}

enum PreTenancyFormOrderByInput {
  id_ASC
  id_DESC
  firstTimeTenant_ASC
  firstTimeTenant_DESC
  preferredMoveInDate_ASC
  preferredMoveInDate_DESC
  fullName_ASC
  fullName_DESC
  dob_ASC
  dob_DESC
  under18_ASC
  under18_DESC
  phone_ASC
  phone_DESC
  email_ASC
  email_DESC
  placeId_ASC
  placeId_DESC
  currentLocation_ASC
  currentLocation_DESC
  currentLocationLat_ASC
  currentLocationLat_DESC
  currentLocationLng_ASC
  currentLocationLng_DESC
  yearsAtAddress_ASC
  yearsAtAddress_DESC
  monthsAtAddress_ASC
  monthsAtAddress_DESC
  reasonForLeaving_ASC
  reasonForLeaving_DESC
  currentLandlordName_ASC
  currentLandlordName_DESC
  currentLandlordNumber_ASC
  currentLandlordNumber_DESC
  currentLandlordEmail_ASC
  currentLandlordEmail_DESC
  consentToLandlordContact_ASC
  consentToLandlordContact_DESC
  referrence1Name_ASC
  referrence1Name_DESC
  referrence1Phone_ASC
  referrence1Phone_DESC
  referrence1Email_ASC
  referrence1Email_DESC
  referrence2Name_ASC
  referrence2Name_DESC
  referrence2Phone_ASC
  referrence2Phone_DESC
  referrence2Email_ASC
  referrence2Email_DESC
  acceptedTerms_ASC
  acceptedTerms_DESC
}

type PreTenancyFormPreviousValues {
  id: ID!
  firstTimeTenant: Boolean
  preferredMoveInDate: DateTime
  fullName: String
  dob: DateTime
  under18: Boolean
  phone: String
  email: String
  placeId: String!
  currentLocation: String!
  currentLocationLat: Float!
  currentLocationLng: Float!
  yearsAtAddress: Int
  monthsAtAddress: Int
  reasonForLeaving: String
  currentLandlordName: String
  currentLandlordNumber: String
  currentLandlordEmail: String
  consentToLandlordContact: Boolean
  referrence1Name: String
  referrence1Phone: String
  referrence1Email: String
  referrence2Name: String
  referrence2Phone: String
  referrence2Email: String
  acceptedTerms: Boolean
}

type PreTenancyFormSubscriptionPayload {
  mutation: MutationType!
  node: PreTenancyForm
  updatedFields: [String!]
  previousValues: PreTenancyFormPreviousValues
}

input PreTenancyFormSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: PreTenancyFormWhereInput
  AND: [PreTenancyFormSubscriptionWhereInput!]
  OR: [PreTenancyFormSubscriptionWhereInput!]
  NOT: [PreTenancyFormSubscriptionWhereInput!]
}

input PreTenancyFormUpdateInput {
  rentalApplicant: RentalGroupApplicantUpdateOneWithoutPreTenancyApplicationFormInput
  firstTimeTenant: Boolean
  preferredMoveInDate: DateTime
  fullName: String
  dob: DateTime
  under18: Boolean
  phone: String
  email: String
  placeId: String
  currentLocation: String
  currentLocationLat: Float
  currentLocationLng: Float
  proofOfAddress: FileUpdateOneWithoutPreTenancyProofOfAddressInput
  yearsAtAddress: Int
  monthsAtAddress: Int
  reasonForLeaving: String
  currentLandlordName: String
  currentLandlordNumber: String
  currentLandlordEmail: String
  consentToLandlordContact: Boolean
  referrence1Name: String
  referrence1Phone: String
  referrence1Email: String
  referrence2Name: String
  referrence2Phone: String
  referrence2Email: String
  acceptedTerms: Boolean
}

input PreTenancyFormUpdateManyMutationInput {
  firstTimeTenant: Boolean
  preferredMoveInDate: DateTime
  fullName: String
  dob: DateTime
  under18: Boolean
  phone: String
  email: String
  placeId: String
  currentLocation: String
  currentLocationLat: Float
  currentLocationLng: Float
  yearsAtAddress: Int
  monthsAtAddress: Int
  reasonForLeaving: String
  currentLandlordName: String
  currentLandlordNumber: String
  currentLandlordEmail: String
  consentToLandlordContact: Boolean
  referrence1Name: String
  referrence1Phone: String
  referrence1Email: String
  referrence2Name: String
  referrence2Phone: String
  referrence2Email: String
  acceptedTerms: Boolean
}

input PreTenancyFormUpdateOneWithoutProofOfAddressInput {
  create: PreTenancyFormCreateWithoutProofOfAddressInput
  update: PreTenancyFormUpdateWithoutProofOfAddressDataInput
  upsert: PreTenancyFormUpsertWithoutProofOfAddressInput
  delete: Boolean
  disconnect: Boolean
  connect: PreTenancyFormWhereUniqueInput
}

input PreTenancyFormUpdateOneWithoutRentalApplicantInput {
  create: PreTenancyFormCreateWithoutRentalApplicantInput
  update: PreTenancyFormUpdateWithoutRentalApplicantDataInput
  upsert: PreTenancyFormUpsertWithoutRentalApplicantInput
  delete: Boolean
  disconnect: Boolean
  connect: PreTenancyFormWhereUniqueInput
}

input PreTenancyFormUpdateWithoutProofOfAddressDataInput {
  rentalApplicant: RentalGroupApplicantUpdateOneWithoutPreTenancyApplicationFormInput
  firstTimeTenant: Boolean
  preferredMoveInDate: DateTime
  fullName: String
  dob: DateTime
  under18: Boolean
  phone: String
  email: String
  placeId: String
  currentLocation: String
  currentLocationLat: Float
  currentLocationLng: Float
  yearsAtAddress: Int
  monthsAtAddress: Int
  reasonForLeaving: String
  currentLandlordName: String
  currentLandlordNumber: String
  currentLandlordEmail: String
  consentToLandlordContact: Boolean
  referrence1Name: String
  referrence1Phone: String
  referrence1Email: String
  referrence2Name: String
  referrence2Phone: String
  referrence2Email: String
  acceptedTerms: Boolean
}

input PreTenancyFormUpdateWithoutRentalApplicantDataInput {
  firstTimeTenant: Boolean
  preferredMoveInDate: DateTime
  fullName: String
  dob: DateTime
  under18: Boolean
  phone: String
  email: String
  placeId: String
  currentLocation: String
  currentLocationLat: Float
  currentLocationLng: Float
  proofOfAddress: FileUpdateOneWithoutPreTenancyProofOfAddressInput
  yearsAtAddress: Int
  monthsAtAddress: Int
  reasonForLeaving: String
  currentLandlordName: String
  currentLandlordNumber: String
  currentLandlordEmail: String
  consentToLandlordContact: Boolean
  referrence1Name: String
  referrence1Phone: String
  referrence1Email: String
  referrence2Name: String
  referrence2Phone: String
  referrence2Email: String
  acceptedTerms: Boolean
}

input PreTenancyFormUpsertWithoutProofOfAddressInput {
  update: PreTenancyFormUpdateWithoutProofOfAddressDataInput!
  create: PreTenancyFormCreateWithoutProofOfAddressInput!
}

input PreTenancyFormUpsertWithoutRentalApplicantInput {
  update: PreTenancyFormUpdateWithoutRentalApplicantDataInput!
  create: PreTenancyFormCreateWithoutRentalApplicantInput!
}

input PreTenancyFormWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  rentalApplicant: RentalGroupApplicantWhereInput
  firstTimeTenant: Boolean
  firstTimeTenant_not: Boolean
  preferredMoveInDate: DateTime
  preferredMoveInDate_not: DateTime
  preferredMoveInDate_in: [DateTime!]
  preferredMoveInDate_not_in: [DateTime!]
  preferredMoveInDate_lt: DateTime
  preferredMoveInDate_lte: DateTime
  preferredMoveInDate_gt: DateTime
  preferredMoveInDate_gte: DateTime
  fullName: String
  fullName_not: String
  fullName_in: [String!]
  fullName_not_in: [String!]
  fullName_lt: String
  fullName_lte: String
  fullName_gt: String
  fullName_gte: String
  fullName_contains: String
  fullName_not_contains: String
  fullName_starts_with: String
  fullName_not_starts_with: String
  fullName_ends_with: String
  fullName_not_ends_with: String
  dob: DateTime
  dob_not: DateTime
  dob_in: [DateTime!]
  dob_not_in: [DateTime!]
  dob_lt: DateTime
  dob_lte: DateTime
  dob_gt: DateTime
  dob_gte: DateTime
  under18: Boolean
  under18_not: Boolean
  phone: String
  phone_not: String
  phone_in: [String!]
  phone_not_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_gt: String
  phone_gte: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  placeId: String
  placeId_not: String
  placeId_in: [String!]
  placeId_not_in: [String!]
  placeId_lt: String
  placeId_lte: String
  placeId_gt: String
  placeId_gte: String
  placeId_contains: String
  placeId_not_contains: String
  placeId_starts_with: String
  placeId_not_starts_with: String
  placeId_ends_with: String
  placeId_not_ends_with: String
  currentLocation: String
  currentLocation_not: String
  currentLocation_in: [String!]
  currentLocation_not_in: [String!]
  currentLocation_lt: String
  currentLocation_lte: String
  currentLocation_gt: String
  currentLocation_gte: String
  currentLocation_contains: String
  currentLocation_not_contains: String
  currentLocation_starts_with: String
  currentLocation_not_starts_with: String
  currentLocation_ends_with: String
  currentLocation_not_ends_with: String
  currentLocationLat: Float
  currentLocationLat_not: Float
  currentLocationLat_in: [Float!]
  currentLocationLat_not_in: [Float!]
  currentLocationLat_lt: Float
  currentLocationLat_lte: Float
  currentLocationLat_gt: Float
  currentLocationLat_gte: Float
  currentLocationLng: Float
  currentLocationLng_not: Float
  currentLocationLng_in: [Float!]
  currentLocationLng_not_in: [Float!]
  currentLocationLng_lt: Float
  currentLocationLng_lte: Float
  currentLocationLng_gt: Float
  currentLocationLng_gte: Float
  proofOfAddress: FileWhereInput
  yearsAtAddress: Int
  yearsAtAddress_not: Int
  yearsAtAddress_in: [Int!]
  yearsAtAddress_not_in: [Int!]
  yearsAtAddress_lt: Int
  yearsAtAddress_lte: Int
  yearsAtAddress_gt: Int
  yearsAtAddress_gte: Int
  monthsAtAddress: Int
  monthsAtAddress_not: Int
  monthsAtAddress_in: [Int!]
  monthsAtAddress_not_in: [Int!]
  monthsAtAddress_lt: Int
  monthsAtAddress_lte: Int
  monthsAtAddress_gt: Int
  monthsAtAddress_gte: Int
  reasonForLeaving: String
  reasonForLeaving_not: String
  reasonForLeaving_in: [String!]
  reasonForLeaving_not_in: [String!]
  reasonForLeaving_lt: String
  reasonForLeaving_lte: String
  reasonForLeaving_gt: String
  reasonForLeaving_gte: String
  reasonForLeaving_contains: String
  reasonForLeaving_not_contains: String
  reasonForLeaving_starts_with: String
  reasonForLeaving_not_starts_with: String
  reasonForLeaving_ends_with: String
  reasonForLeaving_not_ends_with: String
  currentLandlordName: String
  currentLandlordName_not: String
  currentLandlordName_in: [String!]
  currentLandlordName_not_in: [String!]
  currentLandlordName_lt: String
  currentLandlordName_lte: String
  currentLandlordName_gt: String
  currentLandlordName_gte: String
  currentLandlordName_contains: String
  currentLandlordName_not_contains: String
  currentLandlordName_starts_with: String
  currentLandlordName_not_starts_with: String
  currentLandlordName_ends_with: String
  currentLandlordName_not_ends_with: String
  currentLandlordNumber: String
  currentLandlordNumber_not: String
  currentLandlordNumber_in: [String!]
  currentLandlordNumber_not_in: [String!]
  currentLandlordNumber_lt: String
  currentLandlordNumber_lte: String
  currentLandlordNumber_gt: String
  currentLandlordNumber_gte: String
  currentLandlordNumber_contains: String
  currentLandlordNumber_not_contains: String
  currentLandlordNumber_starts_with: String
  currentLandlordNumber_not_starts_with: String
  currentLandlordNumber_ends_with: String
  currentLandlordNumber_not_ends_with: String
  currentLandlordEmail: String
  currentLandlordEmail_not: String
  currentLandlordEmail_in: [String!]
  currentLandlordEmail_not_in: [String!]
  currentLandlordEmail_lt: String
  currentLandlordEmail_lte: String
  currentLandlordEmail_gt: String
  currentLandlordEmail_gte: String
  currentLandlordEmail_contains: String
  currentLandlordEmail_not_contains: String
  currentLandlordEmail_starts_with: String
  currentLandlordEmail_not_starts_with: String
  currentLandlordEmail_ends_with: String
  currentLandlordEmail_not_ends_with: String
  consentToLandlordContact: Boolean
  consentToLandlordContact_not: Boolean
  referrence1Name: String
  referrence1Name_not: String
  referrence1Name_in: [String!]
  referrence1Name_not_in: [String!]
  referrence1Name_lt: String
  referrence1Name_lte: String
  referrence1Name_gt: String
  referrence1Name_gte: String
  referrence1Name_contains: String
  referrence1Name_not_contains: String
  referrence1Name_starts_with: String
  referrence1Name_not_starts_with: String
  referrence1Name_ends_with: String
  referrence1Name_not_ends_with: String
  referrence1Phone: String
  referrence1Phone_not: String
  referrence1Phone_in: [String!]
  referrence1Phone_not_in: [String!]
  referrence1Phone_lt: String
  referrence1Phone_lte: String
  referrence1Phone_gt: String
  referrence1Phone_gte: String
  referrence1Phone_contains: String
  referrence1Phone_not_contains: String
  referrence1Phone_starts_with: String
  referrence1Phone_not_starts_with: String
  referrence1Phone_ends_with: String
  referrence1Phone_not_ends_with: String
  referrence1Email: String
  referrence1Email_not: String
  referrence1Email_in: [String!]
  referrence1Email_not_in: [String!]
  referrence1Email_lt: String
  referrence1Email_lte: String
  referrence1Email_gt: String
  referrence1Email_gte: String
  referrence1Email_contains: String
  referrence1Email_not_contains: String
  referrence1Email_starts_with: String
  referrence1Email_not_starts_with: String
  referrence1Email_ends_with: String
  referrence1Email_not_ends_with: String
  referrence2Name: String
  referrence2Name_not: String
  referrence2Name_in: [String!]
  referrence2Name_not_in: [String!]
  referrence2Name_lt: String
  referrence2Name_lte: String
  referrence2Name_gt: String
  referrence2Name_gte: String
  referrence2Name_contains: String
  referrence2Name_not_contains: String
  referrence2Name_starts_with: String
  referrence2Name_not_starts_with: String
  referrence2Name_ends_with: String
  referrence2Name_not_ends_with: String
  referrence2Phone: String
  referrence2Phone_not: String
  referrence2Phone_in: [String!]
  referrence2Phone_not_in: [String!]
  referrence2Phone_lt: String
  referrence2Phone_lte: String
  referrence2Phone_gt: String
  referrence2Phone_gte: String
  referrence2Phone_contains: String
  referrence2Phone_not_contains: String
  referrence2Phone_starts_with: String
  referrence2Phone_not_starts_with: String
  referrence2Phone_ends_with: String
  referrence2Phone_not_ends_with: String
  referrence2Email: String
  referrence2Email_not: String
  referrence2Email_in: [String!]
  referrence2Email_not_in: [String!]
  referrence2Email_lt: String
  referrence2Email_lte: String
  referrence2Email_gt: String
  referrence2Email_gte: String
  referrence2Email_contains: String
  referrence2Email_not_contains: String
  referrence2Email_starts_with: String
  referrence2Email_not_starts_with: String
  referrence2Email_ends_with: String
  referrence2Email_not_ends_with: String
  acceptedTerms: Boolean
  acceptedTerms_not: Boolean
  AND: [PreTenancyFormWhereInput!]
  OR: [PreTenancyFormWhereInput!]
  NOT: [PreTenancyFormWhereInput!]
}

input PreTenancyFormWhereUniqueInput {
  id: ID
}

type Property {
  id: ID!
  placeId: String!
  location: String!
  locationLat: Float!
  locationLng: Float!
  titleType: PropertyTitleType!
  updatedAt: DateTime!
  createdAt: DateTime!
  bankDetails: BankDetail
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int!
  maximumOccupants: Int
  rent: Float!
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation(where: AccommodationWhereInput, orderBy: AccommodationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Accommodation!]
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  insulationProof: InsulationProof
  insulationForm: InsulationForm
  insulationStatementFile: File
  indoorFeatures: [IndoorFeature!]!
  outdoorFeatures: [OutdoorFeature!]!
  heatSources: [HeatSource!]!
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean!
  owners(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  creator: User!
  images(where: FileWhereInput, orderBy: FileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [File!]
  proofOfOwnership: File
  acceptedTerms: Boolean
  rentalApplications(where: RentalApplicationWhereInput, orderBy: RentalApplicationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [RentalApplication!]
  leases(where: PropertyLeaseWhereInput, orderBy: PropertyLeaseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PropertyLease!]
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity(where: ActivityWhereInput, orderBy: ActivityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Activity!]
  appraisals(where: RentalAppraisalWhereInput, orderBy: RentalAppraisalOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [RentalAppraisal!]
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: [Pet!]!
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: [PropertyChattel!]!
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings(where: ViewingWhereInput, orderBy: ViewingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Viewing!]
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssist
  files: PropertyFiles
  inspections(where: InspectionWhereInput, orderBy: InspectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Inspection!]
}

type PropertyAdvertisement {
  id: ID!
  updatedAt: DateTime!
  createdAt: DateTime!
}

type PropertyAdvertisementConnection {
  pageInfo: PageInfo!
  edges: [PropertyAdvertisementEdge]!
  aggregate: AggregatePropertyAdvertisement!
}

input PropertyAdvertisementCreateInput {
  id: ID
}

type PropertyAdvertisementEdge {
  node: PropertyAdvertisement!
  cursor: String!
}

enum PropertyAdvertisementOrderByInput {
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type PropertyAdvertisementPreviousValues {
  id: ID!
  updatedAt: DateTime!
  createdAt: DateTime!
}

type PropertyAdvertisementSubscriptionPayload {
  mutation: MutationType!
  node: PropertyAdvertisement
  updatedFields: [String!]
  previousValues: PropertyAdvertisementPreviousValues
}

input PropertyAdvertisementSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: PropertyAdvertisementWhereInput
  AND: [PropertyAdvertisementSubscriptionWhereInput!]
  OR: [PropertyAdvertisementSubscriptionWhereInput!]
  NOT: [PropertyAdvertisementSubscriptionWhereInput!]
}

input PropertyAdvertisementWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [PropertyAdvertisementWhereInput!]
  OR: [PropertyAdvertisementWhereInput!]
  NOT: [PropertyAdvertisementWhereInput!]
}

input PropertyAdvertisementWhereUniqueInput {
  id: ID
}

type PropertyAssist {
  id: ID!
  property: Property
  rates: Boolean
  insurance: Boolean
  water: Boolean
}

type PropertyAssistConnection {
  pageInfo: PageInfo!
  edges: [PropertyAssistEdge]!
  aggregate: AggregatePropertyAssist!
}

input PropertyAssistCreateInput {
  id: ID
  property: PropertyCreateOneWithoutRehouserAssistInput
  rates: Boolean
  insurance: Boolean
  water: Boolean
}

input PropertyAssistCreateOneWithoutPropertyInput {
  create: PropertyAssistCreateWithoutPropertyInput
  connect: PropertyAssistWhereUniqueInput
}

input PropertyAssistCreateWithoutPropertyInput {
  id: ID
  rates: Boolean
  insurance: Boolean
  water: Boolean
}

type PropertyAssistEdge {
  node: PropertyAssist!
  cursor: String!
}

enum PropertyAssistOrderByInput {
  id_ASC
  id_DESC
  rates_ASC
  rates_DESC
  insurance_ASC
  insurance_DESC
  water_ASC
  water_DESC
}

type PropertyAssistPreviousValues {
  id: ID!
  rates: Boolean
  insurance: Boolean
  water: Boolean
}

type PropertyAssistSubscriptionPayload {
  mutation: MutationType!
  node: PropertyAssist
  updatedFields: [String!]
  previousValues: PropertyAssistPreviousValues
}

input PropertyAssistSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: PropertyAssistWhereInput
  AND: [PropertyAssistSubscriptionWhereInput!]
  OR: [PropertyAssistSubscriptionWhereInput!]
  NOT: [PropertyAssistSubscriptionWhereInput!]
}

input PropertyAssistUpdateInput {
  property: PropertyUpdateOneWithoutRehouserAssistInput
  rates: Boolean
  insurance: Boolean
  water: Boolean
}

input PropertyAssistUpdateManyMutationInput {
  rates: Boolean
  insurance: Boolean
  water: Boolean
}

input PropertyAssistUpdateOneWithoutPropertyInput {
  create: PropertyAssistCreateWithoutPropertyInput
  update: PropertyAssistUpdateWithoutPropertyDataInput
  upsert: PropertyAssistUpsertWithoutPropertyInput
  delete: Boolean
  disconnect: Boolean
  connect: PropertyAssistWhereUniqueInput
}

input PropertyAssistUpdateWithoutPropertyDataInput {
  rates: Boolean
  insurance: Boolean
  water: Boolean
}

input PropertyAssistUpsertWithoutPropertyInput {
  update: PropertyAssistUpdateWithoutPropertyDataInput!
  create: PropertyAssistCreateWithoutPropertyInput!
}

input PropertyAssistWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  property: PropertyWhereInput
  rates: Boolean
  rates_not: Boolean
  insurance: Boolean
  insurance_not: Boolean
  water: Boolean
  water_not: Boolean
  AND: [PropertyAssistWhereInput!]
  OR: [PropertyAssistWhereInput!]
  NOT: [PropertyAssistWhereInput!]
}

input PropertyAssistWhereUniqueInput {
  id: ID
}

enum PropertyChattel {
  DISH_WASHER
  RANGE_HOOD
  HOB_OR_STOVE
  WALL_OVEN
  DRAPES
  BLINDS
  HEAT_PUMP
  GAS_FIRE
  HEATED_TOWEL_RAIL
  WALL_HEATER
  ALARM
  IRRIGATION
  SMOKE_DETECTORS
  AUTOMATIC_GARAGE_DOOR
}

type PropertyConnection {
  pageInfo: PageInfo!
  edges: [PropertyEdge]!
  aggregate: AggregateProperty!
}

input PropertyCreatechattelsInput {
  set: [PropertyChattel!]
}

input PropertyCreateheatSourcesInput {
  set: [HeatSource!]
}

input PropertyCreateindoorFeaturesInput {
  set: [IndoorFeature!]
}

input PropertyCreateInput {
  id: ID
  placeId: String!
  location: String!
  locationLat: Float!
  locationLng: Float!
  titleType: PropertyTitleType!
  bankDetails: BankDetailCreateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int!
  maximumOccupants: Int
  rent: Float!
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationCreateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  insulationProof: InsulationProof
  insulationForm: InsulationFormCreateOneInput
  insulationStatementFile: FileCreateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyCreateindoorFeaturesInput
  outdoorFeatures: PropertyCreateoutdoorFeaturesInput
  heatSources: PropertyCreateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean!
  owners: UserCreateManyWithoutPropertiesInput
  creator: UserCreateOneWithoutCreatedPropertiesInput!
  images: FileCreateManyWithoutPropertyImagesInput
  proofOfOwnership: FileCreateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationCreateManyWithoutPropertyInput
  leases: PropertyLeaseCreateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityCreateManyWithoutPropertyInput
  appraisals: RentalAppraisalCreateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyCreatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyCreatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingCreateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistCreateOneWithoutPropertyInput
  files: PropertyFilesCreateOneWithoutPropertyInput
  inspections: InspectionCreateManyWithoutPropertyInput
}

input PropertyCreateManyWithoutCreatorInput {
  create: [PropertyCreateWithoutCreatorInput!]
  connect: [PropertyWhereUniqueInput!]
}

input PropertyCreateManyWithoutOwnersInput {
  create: [PropertyCreateWithoutOwnersInput!]
  connect: [PropertyWhereUniqueInput!]
}

input PropertyCreateOneWithoutAccommodationInput {
  create: PropertyCreateWithoutAccommodationInput
  connect: PropertyWhereUniqueInput
}

input PropertyCreateOneWithoutActivityInput {
  create: PropertyCreateWithoutActivityInput
  connect: PropertyWhereUniqueInput
}

input PropertyCreateOneWithoutAppraisalsInput {
  create: PropertyCreateWithoutAppraisalsInput
  connect: PropertyWhereUniqueInput
}

input PropertyCreateOneWithoutBankDetailsInput {
  create: PropertyCreateWithoutBankDetailsInput
  connect: PropertyWhereUniqueInput
}

input PropertyCreateOneWithoutFilesInput {
  create: PropertyCreateWithoutFilesInput
  connect: PropertyWhereUniqueInput
}

input PropertyCreateOneWithoutImagesInput {
  create: PropertyCreateWithoutImagesInput
  connect: PropertyWhereUniqueInput
}

input PropertyCreateOneWithoutInspectionsInput {
  create: PropertyCreateWithoutInspectionsInput
  connect: PropertyWhereUniqueInput
}

input PropertyCreateOneWithoutInsulationStatementFileInput {
  create: PropertyCreateWithoutInsulationStatementFileInput
  connect: PropertyWhereUniqueInput
}

input PropertyCreateOneWithoutLeasesInput {
  create: PropertyCreateWithoutLeasesInput
  connect: PropertyWhereUniqueInput
}

input PropertyCreateOneWithoutProofOfOwnershipInput {
  create: PropertyCreateWithoutProofOfOwnershipInput
  connect: PropertyWhereUniqueInput
}

input PropertyCreateOneWithoutRehouserAssistInput {
  create: PropertyCreateWithoutRehouserAssistInput
  connect: PropertyWhereUniqueInput
}

input PropertyCreateOneWithoutRentalApplicationsInput {
  create: PropertyCreateWithoutRentalApplicationsInput
  connect: PropertyWhereUniqueInput
}

input PropertyCreateOneWithoutViewingsInput {
  create: PropertyCreateWithoutViewingsInput
  connect: PropertyWhereUniqueInput
}

input PropertyCreateoutdoorFeaturesInput {
  set: [OutdoorFeature!]
}

input PropertyCreatepetsInput {
  set: [Pet!]
}

input PropertyCreateWithoutAccommodationInput {
  id: ID
  placeId: String!
  location: String!
  locationLat: Float!
  locationLng: Float!
  titleType: PropertyTitleType!
  bankDetails: BankDetailCreateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int!
  maximumOccupants: Int
  rent: Float!
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  insulationProof: InsulationProof
  insulationForm: InsulationFormCreateOneInput
  insulationStatementFile: FileCreateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyCreateindoorFeaturesInput
  outdoorFeatures: PropertyCreateoutdoorFeaturesInput
  heatSources: PropertyCreateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean!
  owners: UserCreateManyWithoutPropertiesInput
  creator: UserCreateOneWithoutCreatedPropertiesInput!
  images: FileCreateManyWithoutPropertyImagesInput
  proofOfOwnership: FileCreateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationCreateManyWithoutPropertyInput
  leases: PropertyLeaseCreateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityCreateManyWithoutPropertyInput
  appraisals: RentalAppraisalCreateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyCreatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyCreatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingCreateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistCreateOneWithoutPropertyInput
  files: PropertyFilesCreateOneWithoutPropertyInput
  inspections: InspectionCreateManyWithoutPropertyInput
}

input PropertyCreateWithoutActivityInput {
  id: ID
  placeId: String!
  location: String!
  locationLat: Float!
  locationLng: Float!
  titleType: PropertyTitleType!
  bankDetails: BankDetailCreateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int!
  maximumOccupants: Int
  rent: Float!
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationCreateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  insulationProof: InsulationProof
  insulationForm: InsulationFormCreateOneInput
  insulationStatementFile: FileCreateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyCreateindoorFeaturesInput
  outdoorFeatures: PropertyCreateoutdoorFeaturesInput
  heatSources: PropertyCreateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean!
  owners: UserCreateManyWithoutPropertiesInput
  creator: UserCreateOneWithoutCreatedPropertiesInput!
  images: FileCreateManyWithoutPropertyImagesInput
  proofOfOwnership: FileCreateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationCreateManyWithoutPropertyInput
  leases: PropertyLeaseCreateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  appraisals: RentalAppraisalCreateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyCreatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyCreatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingCreateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistCreateOneWithoutPropertyInput
  files: PropertyFilesCreateOneWithoutPropertyInput
  inspections: InspectionCreateManyWithoutPropertyInput
}

input PropertyCreateWithoutAppraisalsInput {
  id: ID
  placeId: String!
  location: String!
  locationLat: Float!
  locationLng: Float!
  titleType: PropertyTitleType!
  bankDetails: BankDetailCreateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int!
  maximumOccupants: Int
  rent: Float!
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationCreateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  insulationProof: InsulationProof
  insulationForm: InsulationFormCreateOneInput
  insulationStatementFile: FileCreateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyCreateindoorFeaturesInput
  outdoorFeatures: PropertyCreateoutdoorFeaturesInput
  heatSources: PropertyCreateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean!
  owners: UserCreateManyWithoutPropertiesInput
  creator: UserCreateOneWithoutCreatedPropertiesInput!
  images: FileCreateManyWithoutPropertyImagesInput
  proofOfOwnership: FileCreateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationCreateManyWithoutPropertyInput
  leases: PropertyLeaseCreateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityCreateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyCreatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyCreatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingCreateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistCreateOneWithoutPropertyInput
  files: PropertyFilesCreateOneWithoutPropertyInput
  inspections: InspectionCreateManyWithoutPropertyInput
}

input PropertyCreateWithoutBankDetailsInput {
  id: ID
  placeId: String!
  location: String!
  locationLat: Float!
  locationLng: Float!
  titleType: PropertyTitleType!
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int!
  maximumOccupants: Int
  rent: Float!
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationCreateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  insulationProof: InsulationProof
  insulationForm: InsulationFormCreateOneInput
  insulationStatementFile: FileCreateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyCreateindoorFeaturesInput
  outdoorFeatures: PropertyCreateoutdoorFeaturesInput
  heatSources: PropertyCreateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean!
  owners: UserCreateManyWithoutPropertiesInput
  creator: UserCreateOneWithoutCreatedPropertiesInput!
  images: FileCreateManyWithoutPropertyImagesInput
  proofOfOwnership: FileCreateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationCreateManyWithoutPropertyInput
  leases: PropertyLeaseCreateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityCreateManyWithoutPropertyInput
  appraisals: RentalAppraisalCreateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyCreatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyCreatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingCreateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistCreateOneWithoutPropertyInput
  files: PropertyFilesCreateOneWithoutPropertyInput
  inspections: InspectionCreateManyWithoutPropertyInput
}

input PropertyCreateWithoutCreatorInput {
  id: ID
  placeId: String!
  location: String!
  locationLat: Float!
  locationLng: Float!
  titleType: PropertyTitleType!
  bankDetails: BankDetailCreateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int!
  maximumOccupants: Int
  rent: Float!
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationCreateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  insulationProof: InsulationProof
  insulationForm: InsulationFormCreateOneInput
  insulationStatementFile: FileCreateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyCreateindoorFeaturesInput
  outdoorFeatures: PropertyCreateoutdoorFeaturesInput
  heatSources: PropertyCreateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean!
  owners: UserCreateManyWithoutPropertiesInput
  images: FileCreateManyWithoutPropertyImagesInput
  proofOfOwnership: FileCreateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationCreateManyWithoutPropertyInput
  leases: PropertyLeaseCreateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityCreateManyWithoutPropertyInput
  appraisals: RentalAppraisalCreateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyCreatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyCreatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingCreateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistCreateOneWithoutPropertyInput
  files: PropertyFilesCreateOneWithoutPropertyInput
  inspections: InspectionCreateManyWithoutPropertyInput
}

input PropertyCreateWithoutFilesInput {
  id: ID
  placeId: String!
  location: String!
  locationLat: Float!
  locationLng: Float!
  titleType: PropertyTitleType!
  bankDetails: BankDetailCreateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int!
  maximumOccupants: Int
  rent: Float!
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationCreateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  insulationProof: InsulationProof
  insulationForm: InsulationFormCreateOneInput
  insulationStatementFile: FileCreateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyCreateindoorFeaturesInput
  outdoorFeatures: PropertyCreateoutdoorFeaturesInput
  heatSources: PropertyCreateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean!
  owners: UserCreateManyWithoutPropertiesInput
  creator: UserCreateOneWithoutCreatedPropertiesInput!
  images: FileCreateManyWithoutPropertyImagesInput
  proofOfOwnership: FileCreateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationCreateManyWithoutPropertyInput
  leases: PropertyLeaseCreateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityCreateManyWithoutPropertyInput
  appraisals: RentalAppraisalCreateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyCreatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyCreatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingCreateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistCreateOneWithoutPropertyInput
  inspections: InspectionCreateManyWithoutPropertyInput
}

input PropertyCreateWithoutImagesInput {
  id: ID
  placeId: String!
  location: String!
  locationLat: Float!
  locationLng: Float!
  titleType: PropertyTitleType!
  bankDetails: BankDetailCreateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int!
  maximumOccupants: Int
  rent: Float!
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationCreateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  insulationProof: InsulationProof
  insulationForm: InsulationFormCreateOneInput
  insulationStatementFile: FileCreateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyCreateindoorFeaturesInput
  outdoorFeatures: PropertyCreateoutdoorFeaturesInput
  heatSources: PropertyCreateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean!
  owners: UserCreateManyWithoutPropertiesInput
  creator: UserCreateOneWithoutCreatedPropertiesInput!
  proofOfOwnership: FileCreateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationCreateManyWithoutPropertyInput
  leases: PropertyLeaseCreateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityCreateManyWithoutPropertyInput
  appraisals: RentalAppraisalCreateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyCreatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyCreatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingCreateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistCreateOneWithoutPropertyInput
  files: PropertyFilesCreateOneWithoutPropertyInput
  inspections: InspectionCreateManyWithoutPropertyInput
}

input PropertyCreateWithoutInspectionsInput {
  id: ID
  placeId: String!
  location: String!
  locationLat: Float!
  locationLng: Float!
  titleType: PropertyTitleType!
  bankDetails: BankDetailCreateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int!
  maximumOccupants: Int
  rent: Float!
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationCreateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  insulationProof: InsulationProof
  insulationForm: InsulationFormCreateOneInput
  insulationStatementFile: FileCreateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyCreateindoorFeaturesInput
  outdoorFeatures: PropertyCreateoutdoorFeaturesInput
  heatSources: PropertyCreateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean!
  owners: UserCreateManyWithoutPropertiesInput
  creator: UserCreateOneWithoutCreatedPropertiesInput!
  images: FileCreateManyWithoutPropertyImagesInput
  proofOfOwnership: FileCreateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationCreateManyWithoutPropertyInput
  leases: PropertyLeaseCreateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityCreateManyWithoutPropertyInput
  appraisals: RentalAppraisalCreateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyCreatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyCreatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingCreateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistCreateOneWithoutPropertyInput
  files: PropertyFilesCreateOneWithoutPropertyInput
}

input PropertyCreateWithoutInsulationStatementFileInput {
  id: ID
  placeId: String!
  location: String!
  locationLat: Float!
  locationLng: Float!
  titleType: PropertyTitleType!
  bankDetails: BankDetailCreateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int!
  maximumOccupants: Int
  rent: Float!
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationCreateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  insulationProof: InsulationProof
  insulationForm: InsulationFormCreateOneInput
  indoorFeatures: PropertyCreateindoorFeaturesInput
  outdoorFeatures: PropertyCreateoutdoorFeaturesInput
  heatSources: PropertyCreateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean!
  owners: UserCreateManyWithoutPropertiesInput
  creator: UserCreateOneWithoutCreatedPropertiesInput!
  images: FileCreateManyWithoutPropertyImagesInput
  proofOfOwnership: FileCreateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationCreateManyWithoutPropertyInput
  leases: PropertyLeaseCreateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityCreateManyWithoutPropertyInput
  appraisals: RentalAppraisalCreateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyCreatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyCreatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingCreateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistCreateOneWithoutPropertyInput
  files: PropertyFilesCreateOneWithoutPropertyInput
  inspections: InspectionCreateManyWithoutPropertyInput
}

input PropertyCreateWithoutLeasesInput {
  id: ID
  placeId: String!
  location: String!
  locationLat: Float!
  locationLng: Float!
  titleType: PropertyTitleType!
  bankDetails: BankDetailCreateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int!
  maximumOccupants: Int
  rent: Float!
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationCreateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  insulationProof: InsulationProof
  insulationForm: InsulationFormCreateOneInput
  insulationStatementFile: FileCreateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyCreateindoorFeaturesInput
  outdoorFeatures: PropertyCreateoutdoorFeaturesInput
  heatSources: PropertyCreateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean!
  owners: UserCreateManyWithoutPropertiesInput
  creator: UserCreateOneWithoutCreatedPropertiesInput!
  images: FileCreateManyWithoutPropertyImagesInput
  proofOfOwnership: FileCreateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationCreateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityCreateManyWithoutPropertyInput
  appraisals: RentalAppraisalCreateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyCreatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyCreatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingCreateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistCreateOneWithoutPropertyInput
  files: PropertyFilesCreateOneWithoutPropertyInput
  inspections: InspectionCreateManyWithoutPropertyInput
}

input PropertyCreateWithoutOwnersInput {
  id: ID
  placeId: String!
  location: String!
  locationLat: Float!
  locationLng: Float!
  titleType: PropertyTitleType!
  bankDetails: BankDetailCreateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int!
  maximumOccupants: Int
  rent: Float!
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationCreateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  insulationProof: InsulationProof
  insulationForm: InsulationFormCreateOneInput
  insulationStatementFile: FileCreateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyCreateindoorFeaturesInput
  outdoorFeatures: PropertyCreateoutdoorFeaturesInput
  heatSources: PropertyCreateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean!
  creator: UserCreateOneWithoutCreatedPropertiesInput!
  images: FileCreateManyWithoutPropertyImagesInput
  proofOfOwnership: FileCreateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationCreateManyWithoutPropertyInput
  leases: PropertyLeaseCreateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityCreateManyWithoutPropertyInput
  appraisals: RentalAppraisalCreateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyCreatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyCreatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingCreateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistCreateOneWithoutPropertyInput
  files: PropertyFilesCreateOneWithoutPropertyInput
  inspections: InspectionCreateManyWithoutPropertyInput
}

input PropertyCreateWithoutProofOfOwnershipInput {
  id: ID
  placeId: String!
  location: String!
  locationLat: Float!
  locationLng: Float!
  titleType: PropertyTitleType!
  bankDetails: BankDetailCreateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int!
  maximumOccupants: Int
  rent: Float!
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationCreateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  insulationProof: InsulationProof
  insulationForm: InsulationFormCreateOneInput
  insulationStatementFile: FileCreateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyCreateindoorFeaturesInput
  outdoorFeatures: PropertyCreateoutdoorFeaturesInput
  heatSources: PropertyCreateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean!
  owners: UserCreateManyWithoutPropertiesInput
  creator: UserCreateOneWithoutCreatedPropertiesInput!
  images: FileCreateManyWithoutPropertyImagesInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationCreateManyWithoutPropertyInput
  leases: PropertyLeaseCreateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityCreateManyWithoutPropertyInput
  appraisals: RentalAppraisalCreateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyCreatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyCreatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingCreateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistCreateOneWithoutPropertyInput
  files: PropertyFilesCreateOneWithoutPropertyInput
  inspections: InspectionCreateManyWithoutPropertyInput
}

input PropertyCreateWithoutRehouserAssistInput {
  id: ID
  placeId: String!
  location: String!
  locationLat: Float!
  locationLng: Float!
  titleType: PropertyTitleType!
  bankDetails: BankDetailCreateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int!
  maximumOccupants: Int
  rent: Float!
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationCreateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  insulationProof: InsulationProof
  insulationForm: InsulationFormCreateOneInput
  insulationStatementFile: FileCreateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyCreateindoorFeaturesInput
  outdoorFeatures: PropertyCreateoutdoorFeaturesInput
  heatSources: PropertyCreateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean!
  owners: UserCreateManyWithoutPropertiesInput
  creator: UserCreateOneWithoutCreatedPropertiesInput!
  images: FileCreateManyWithoutPropertyImagesInput
  proofOfOwnership: FileCreateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationCreateManyWithoutPropertyInput
  leases: PropertyLeaseCreateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityCreateManyWithoutPropertyInput
  appraisals: RentalAppraisalCreateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyCreatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyCreatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingCreateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  files: PropertyFilesCreateOneWithoutPropertyInput
  inspections: InspectionCreateManyWithoutPropertyInput
}

input PropertyCreateWithoutRentalApplicationsInput {
  id: ID
  placeId: String!
  location: String!
  locationLat: Float!
  locationLng: Float!
  titleType: PropertyTitleType!
  bankDetails: BankDetailCreateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int!
  maximumOccupants: Int
  rent: Float!
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationCreateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  insulationProof: InsulationProof
  insulationForm: InsulationFormCreateOneInput
  insulationStatementFile: FileCreateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyCreateindoorFeaturesInput
  outdoorFeatures: PropertyCreateoutdoorFeaturesInput
  heatSources: PropertyCreateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean!
  owners: UserCreateManyWithoutPropertiesInput
  creator: UserCreateOneWithoutCreatedPropertiesInput!
  images: FileCreateManyWithoutPropertyImagesInput
  proofOfOwnership: FileCreateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  leases: PropertyLeaseCreateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityCreateManyWithoutPropertyInput
  appraisals: RentalAppraisalCreateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyCreatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyCreatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingCreateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistCreateOneWithoutPropertyInput
  files: PropertyFilesCreateOneWithoutPropertyInput
  inspections: InspectionCreateManyWithoutPropertyInput
}

input PropertyCreateWithoutViewingsInput {
  id: ID
  placeId: String!
  location: String!
  locationLat: Float!
  locationLng: Float!
  titleType: PropertyTitleType!
  bankDetails: BankDetailCreateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int!
  maximumOccupants: Int
  rent: Float!
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationCreateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  insulationProof: InsulationProof
  insulationForm: InsulationFormCreateOneInput
  insulationStatementFile: FileCreateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyCreateindoorFeaturesInput
  outdoorFeatures: PropertyCreateoutdoorFeaturesInput
  heatSources: PropertyCreateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean!
  owners: UserCreateManyWithoutPropertiesInput
  creator: UserCreateOneWithoutCreatedPropertiesInput!
  images: FileCreateManyWithoutPropertyImagesInput
  proofOfOwnership: FileCreateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationCreateManyWithoutPropertyInput
  leases: PropertyLeaseCreateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityCreateManyWithoutPropertyInput
  appraisals: RentalAppraisalCreateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyCreatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyCreatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistCreateOneWithoutPropertyInput
  files: PropertyFilesCreateOneWithoutPropertyInput
  inspections: InspectionCreateManyWithoutPropertyInput
}

type PropertyEdge {
  node: Property!
  cursor: String!
}

type PropertyFiles {
  id: ID!
  property: Property
  codeComplianceCert: File
  certOfAcceptance: File
}

type PropertyFilesConnection {
  pageInfo: PageInfo!
  edges: [PropertyFilesEdge]!
  aggregate: AggregatePropertyFiles!
}

input PropertyFilesCreateInput {
  id: ID
  property: PropertyCreateOneWithoutFilesInput
  codeComplianceCert: FileCreateOneWithoutCodeComplianceCertInput
  certOfAcceptance: FileCreateOneWithoutCertOfAcceptanceInput
}

input PropertyFilesCreateOneWithoutCertOfAcceptanceInput {
  create: PropertyFilesCreateWithoutCertOfAcceptanceInput
  connect: PropertyFilesWhereUniqueInput
}

input PropertyFilesCreateOneWithoutCodeComplianceCertInput {
  create: PropertyFilesCreateWithoutCodeComplianceCertInput
  connect: PropertyFilesWhereUniqueInput
}

input PropertyFilesCreateOneWithoutPropertyInput {
  create: PropertyFilesCreateWithoutPropertyInput
  connect: PropertyFilesWhereUniqueInput
}

input PropertyFilesCreateWithoutCertOfAcceptanceInput {
  id: ID
  property: PropertyCreateOneWithoutFilesInput
  codeComplianceCert: FileCreateOneWithoutCodeComplianceCertInput
}

input PropertyFilesCreateWithoutCodeComplianceCertInput {
  id: ID
  property: PropertyCreateOneWithoutFilesInput
  certOfAcceptance: FileCreateOneWithoutCertOfAcceptanceInput
}

input PropertyFilesCreateWithoutPropertyInput {
  id: ID
  codeComplianceCert: FileCreateOneWithoutCodeComplianceCertInput
  certOfAcceptance: FileCreateOneWithoutCertOfAcceptanceInput
}

type PropertyFilesEdge {
  node: PropertyFiles!
  cursor: String!
}

enum PropertyFilesOrderByInput {
  id_ASC
  id_DESC
}

type PropertyFilesPreviousValues {
  id: ID!
}

type PropertyFilesSubscriptionPayload {
  mutation: MutationType!
  node: PropertyFiles
  updatedFields: [String!]
  previousValues: PropertyFilesPreviousValues
}

input PropertyFilesSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: PropertyFilesWhereInput
  AND: [PropertyFilesSubscriptionWhereInput!]
  OR: [PropertyFilesSubscriptionWhereInput!]
  NOT: [PropertyFilesSubscriptionWhereInput!]
}

input PropertyFilesUpdateInput {
  property: PropertyUpdateOneWithoutFilesInput
  codeComplianceCert: FileUpdateOneWithoutCodeComplianceCertInput
  certOfAcceptance: FileUpdateOneWithoutCertOfAcceptanceInput
}

input PropertyFilesUpdateOneWithoutCertOfAcceptanceInput {
  create: PropertyFilesCreateWithoutCertOfAcceptanceInput
  update: PropertyFilesUpdateWithoutCertOfAcceptanceDataInput
  upsert: PropertyFilesUpsertWithoutCertOfAcceptanceInput
  delete: Boolean
  disconnect: Boolean
  connect: PropertyFilesWhereUniqueInput
}

input PropertyFilesUpdateOneWithoutCodeComplianceCertInput {
  create: PropertyFilesCreateWithoutCodeComplianceCertInput
  update: PropertyFilesUpdateWithoutCodeComplianceCertDataInput
  upsert: PropertyFilesUpsertWithoutCodeComplianceCertInput
  delete: Boolean
  disconnect: Boolean
  connect: PropertyFilesWhereUniqueInput
}

input PropertyFilesUpdateOneWithoutPropertyInput {
  create: PropertyFilesCreateWithoutPropertyInput
  update: PropertyFilesUpdateWithoutPropertyDataInput
  upsert: PropertyFilesUpsertWithoutPropertyInput
  delete: Boolean
  disconnect: Boolean
  connect: PropertyFilesWhereUniqueInput
}

input PropertyFilesUpdateWithoutCertOfAcceptanceDataInput {
  property: PropertyUpdateOneWithoutFilesInput
  codeComplianceCert: FileUpdateOneWithoutCodeComplianceCertInput
}

input PropertyFilesUpdateWithoutCodeComplianceCertDataInput {
  property: PropertyUpdateOneWithoutFilesInput
  certOfAcceptance: FileUpdateOneWithoutCertOfAcceptanceInput
}

input PropertyFilesUpdateWithoutPropertyDataInput {
  codeComplianceCert: FileUpdateOneWithoutCodeComplianceCertInput
  certOfAcceptance: FileUpdateOneWithoutCertOfAcceptanceInput
}

input PropertyFilesUpsertWithoutCertOfAcceptanceInput {
  update: PropertyFilesUpdateWithoutCertOfAcceptanceDataInput!
  create: PropertyFilesCreateWithoutCertOfAcceptanceInput!
}

input PropertyFilesUpsertWithoutCodeComplianceCertInput {
  update: PropertyFilesUpdateWithoutCodeComplianceCertDataInput!
  create: PropertyFilesCreateWithoutCodeComplianceCertInput!
}

input PropertyFilesUpsertWithoutPropertyInput {
  update: PropertyFilesUpdateWithoutPropertyDataInput!
  create: PropertyFilesCreateWithoutPropertyInput!
}

input PropertyFilesWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  property: PropertyWhereInput
  codeComplianceCert: FileWhereInput
  certOfAcceptance: FileWhereInput
  AND: [PropertyFilesWhereInput!]
  OR: [PropertyFilesWhereInput!]
  NOT: [PropertyFilesWhereInput!]
}

input PropertyFilesWhereUniqueInput {
  id: ID
}

type PropertyLease {
  id: ID!
  placeId: String!
  stage: LeaseStage!
  property: Property!
  updatedAt: DateTime!
  createdAt: DateTime!
  lessees(where: LesseeWhereInput, orderBy: LesseeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Lessee!]
  lessors(where: LessorWhereInput, orderBy: LessorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Lessor!]
  canAcceptPayment: Boolean
  rooms: Int!
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  indoorFeatures: [IndoorFeature!]!
  outdoorFeatures: [OutdoorFeature!]!
  rent: Float!
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  location: String!
  locationLat: Float!
  locationLng: Float!
  activity(where: ActivityWhereInput, orderBy: ActivityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Activity!]
  wallet: Wallet
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: [Pet!]!
  maximumOccupants: Int
  chattels: [PropertyChattel!]!
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  inspections(where: InspectionWhereInput, orderBy: InspectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Inspection!]
}

type PropertyLeaseConnection {
  pageInfo: PageInfo!
  edges: [PropertyLeaseEdge]!
  aggregate: AggregatePropertyLease!
}

input PropertyLeaseCreatechattelsInput {
  set: [PropertyChattel!]
}

input PropertyLeaseCreateindoorFeaturesInput {
  set: [IndoorFeature!]
}

input PropertyLeaseCreateInput {
  id: ID
  placeId: String!
  stage: LeaseStage!
  property: PropertyCreateOneWithoutLeasesInput!
  lessees: LesseeCreateManyWithoutLeaseInput
  lessors: LessorCreateManyWithoutLeaseInput
  canAcceptPayment: Boolean
  rooms: Int!
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  indoorFeatures: PropertyLeaseCreateindoorFeaturesInput
  outdoorFeatures: PropertyLeaseCreateoutdoorFeaturesInput
  rent: Float!
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  location: String!
  locationLat: Float!
  locationLng: Float!
  activity: ActivityCreateManyWithoutPropertyLeaseInput
  wallet: WalletCreateOneWithoutLeaseInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyLeaseCreatepetsInput
  maximumOccupants: Int
  chattels: PropertyLeaseCreatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  inspections: InspectionCreateManyWithoutLeaseInput
}

input PropertyLeaseCreateManyWithoutPropertyInput {
  create: [PropertyLeaseCreateWithoutPropertyInput!]
  connect: [PropertyLeaseWhereUniqueInput!]
}

input PropertyLeaseCreateOneWithoutActivityInput {
  create: PropertyLeaseCreateWithoutActivityInput
  connect: PropertyLeaseWhereUniqueInput
}

input PropertyLeaseCreateOneWithoutInspectionsInput {
  create: PropertyLeaseCreateWithoutInspectionsInput
  connect: PropertyLeaseWhereUniqueInput
}

input PropertyLeaseCreateOneWithoutLesseesInput {
  create: PropertyLeaseCreateWithoutLesseesInput
  connect: PropertyLeaseWhereUniqueInput
}

input PropertyLeaseCreateOneWithoutLessorsInput {
  create: PropertyLeaseCreateWithoutLessorsInput
  connect: PropertyLeaseWhereUniqueInput
}

input PropertyLeaseCreateOneWithoutWalletInput {
  create: PropertyLeaseCreateWithoutWalletInput
  connect: PropertyLeaseWhereUniqueInput
}

input PropertyLeaseCreateoutdoorFeaturesInput {
  set: [OutdoorFeature!]
}

input PropertyLeaseCreatepetsInput {
  set: [Pet!]
}

input PropertyLeaseCreateWithoutActivityInput {
  id: ID
  placeId: String!
  stage: LeaseStage!
  property: PropertyCreateOneWithoutLeasesInput!
  lessees: LesseeCreateManyWithoutLeaseInput
  lessors: LessorCreateManyWithoutLeaseInput
  canAcceptPayment: Boolean
  rooms: Int!
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  indoorFeatures: PropertyLeaseCreateindoorFeaturesInput
  outdoorFeatures: PropertyLeaseCreateoutdoorFeaturesInput
  rent: Float!
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  location: String!
  locationLat: Float!
  locationLng: Float!
  wallet: WalletCreateOneWithoutLeaseInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyLeaseCreatepetsInput
  maximumOccupants: Int
  chattels: PropertyLeaseCreatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  inspections: InspectionCreateManyWithoutLeaseInput
}

input PropertyLeaseCreateWithoutInspectionsInput {
  id: ID
  placeId: String!
  stage: LeaseStage!
  property: PropertyCreateOneWithoutLeasesInput!
  lessees: LesseeCreateManyWithoutLeaseInput
  lessors: LessorCreateManyWithoutLeaseInput
  canAcceptPayment: Boolean
  rooms: Int!
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  indoorFeatures: PropertyLeaseCreateindoorFeaturesInput
  outdoorFeatures: PropertyLeaseCreateoutdoorFeaturesInput
  rent: Float!
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  location: String!
  locationLat: Float!
  locationLng: Float!
  activity: ActivityCreateManyWithoutPropertyLeaseInput
  wallet: WalletCreateOneWithoutLeaseInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyLeaseCreatepetsInput
  maximumOccupants: Int
  chattels: PropertyLeaseCreatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
}

input PropertyLeaseCreateWithoutLesseesInput {
  id: ID
  placeId: String!
  stage: LeaseStage!
  property: PropertyCreateOneWithoutLeasesInput!
  lessors: LessorCreateManyWithoutLeaseInput
  canAcceptPayment: Boolean
  rooms: Int!
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  indoorFeatures: PropertyLeaseCreateindoorFeaturesInput
  outdoorFeatures: PropertyLeaseCreateoutdoorFeaturesInput
  rent: Float!
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  location: String!
  locationLat: Float!
  locationLng: Float!
  activity: ActivityCreateManyWithoutPropertyLeaseInput
  wallet: WalletCreateOneWithoutLeaseInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyLeaseCreatepetsInput
  maximumOccupants: Int
  chattels: PropertyLeaseCreatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  inspections: InspectionCreateManyWithoutLeaseInput
}

input PropertyLeaseCreateWithoutLessorsInput {
  id: ID
  placeId: String!
  stage: LeaseStage!
  property: PropertyCreateOneWithoutLeasesInput!
  lessees: LesseeCreateManyWithoutLeaseInput
  canAcceptPayment: Boolean
  rooms: Int!
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  indoorFeatures: PropertyLeaseCreateindoorFeaturesInput
  outdoorFeatures: PropertyLeaseCreateoutdoorFeaturesInput
  rent: Float!
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  location: String!
  locationLat: Float!
  locationLng: Float!
  activity: ActivityCreateManyWithoutPropertyLeaseInput
  wallet: WalletCreateOneWithoutLeaseInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyLeaseCreatepetsInput
  maximumOccupants: Int
  chattels: PropertyLeaseCreatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  inspections: InspectionCreateManyWithoutLeaseInput
}

input PropertyLeaseCreateWithoutPropertyInput {
  id: ID
  placeId: String!
  stage: LeaseStage!
  lessees: LesseeCreateManyWithoutLeaseInput
  lessors: LessorCreateManyWithoutLeaseInput
  canAcceptPayment: Boolean
  rooms: Int!
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  indoorFeatures: PropertyLeaseCreateindoorFeaturesInput
  outdoorFeatures: PropertyLeaseCreateoutdoorFeaturesInput
  rent: Float!
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  location: String!
  locationLat: Float!
  locationLng: Float!
  activity: ActivityCreateManyWithoutPropertyLeaseInput
  wallet: WalletCreateOneWithoutLeaseInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyLeaseCreatepetsInput
  maximumOccupants: Int
  chattels: PropertyLeaseCreatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  inspections: InspectionCreateManyWithoutLeaseInput
}

input PropertyLeaseCreateWithoutWalletInput {
  id: ID
  placeId: String!
  stage: LeaseStage!
  property: PropertyCreateOneWithoutLeasesInput!
  lessees: LesseeCreateManyWithoutLeaseInput
  lessors: LessorCreateManyWithoutLeaseInput
  canAcceptPayment: Boolean
  rooms: Int!
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  indoorFeatures: PropertyLeaseCreateindoorFeaturesInput
  outdoorFeatures: PropertyLeaseCreateoutdoorFeaturesInput
  rent: Float!
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  location: String!
  locationLat: Float!
  locationLng: Float!
  activity: ActivityCreateManyWithoutPropertyLeaseInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyLeaseCreatepetsInput
  maximumOccupants: Int
  chattels: PropertyLeaseCreatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  inspections: InspectionCreateManyWithoutLeaseInput
}

type PropertyLeaseEdge {
  node: PropertyLease!
  cursor: String!
}

enum PropertyLeaseOrderByInput {
  id_ASC
  id_DESC
  placeId_ASC
  placeId_DESC
  stage_ASC
  stage_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  canAcceptPayment_ASC
  canAcceptPayment_DESC
  rooms_ASC
  rooms_DESC
  bathrooms_ASC
  bathrooms_DESC
  garageSpaces_ASC
  garageSpaces_DESC
  carportSpaces_ASC
  carportSpaces_DESC
  offStreetSpaces_ASC
  offStreetSpaces_DESC
  rent_ASC
  rent_DESC
  moveInDate_ASC
  moveInDate_DESC
  expiryDate_ASC
  expiryDate_DESC
  leaseLengthInMonths_ASC
  leaseLengthInMonths_DESC
  location_ASC
  location_DESC
  locationLat_ASC
  locationLat_DESC
  locationLng_ASC
  locationLng_DESC
  tenancyType_ASC
  tenancyType_DESC
  petsAllowed_ASC
  petsAllowed_DESC
  maximumOccupants_ASC
  maximumOccupants_DESC
  landlordProtectionCover_ASC
  landlordProtectionCover_DESC
  freeGlassCover_ASC
  freeGlassCover_DESC
  workingAlarms_ASC
  workingAlarms_DESC
  inHallway3mOfEachBedroom_ASC
  inHallway3mOfEachBedroom_DESC
  tenYearPhotoelectricAlarms_ASC
  tenYearPhotoelectricAlarms_DESC
  alarmsEachLevel_ASC
  alarmsEachLevel_DESC
}

type PropertyLeasePreviousValues {
  id: ID!
  placeId: String!
  stage: LeaseStage!
  updatedAt: DateTime!
  createdAt: DateTime!
  canAcceptPayment: Boolean
  rooms: Int!
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  indoorFeatures: [IndoorFeature!]!
  outdoorFeatures: [OutdoorFeature!]!
  rent: Float!
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  location: String!
  locationLat: Float!
  locationLng: Float!
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: [Pet!]!
  maximumOccupants: Int
  chattels: [PropertyChattel!]!
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
}

input PropertyLeaseScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  placeId: String
  placeId_not: String
  placeId_in: [String!]
  placeId_not_in: [String!]
  placeId_lt: String
  placeId_lte: String
  placeId_gt: String
  placeId_gte: String
  placeId_contains: String
  placeId_not_contains: String
  placeId_starts_with: String
  placeId_not_starts_with: String
  placeId_ends_with: String
  placeId_not_ends_with: String
  stage: LeaseStage
  stage_not: LeaseStage
  stage_in: [LeaseStage!]
  stage_not_in: [LeaseStage!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  canAcceptPayment: Boolean
  canAcceptPayment_not: Boolean
  rooms: Int
  rooms_not: Int
  rooms_in: [Int!]
  rooms_not_in: [Int!]
  rooms_lt: Int
  rooms_lte: Int
  rooms_gt: Int
  rooms_gte: Int
  bathrooms: Int
  bathrooms_not: Int
  bathrooms_in: [Int!]
  bathrooms_not_in: [Int!]
  bathrooms_lt: Int
  bathrooms_lte: Int
  bathrooms_gt: Int
  bathrooms_gte: Int
  garageSpaces: Int
  garageSpaces_not: Int
  garageSpaces_in: [Int!]
  garageSpaces_not_in: [Int!]
  garageSpaces_lt: Int
  garageSpaces_lte: Int
  garageSpaces_gt: Int
  garageSpaces_gte: Int
  carportSpaces: Int
  carportSpaces_not: Int
  carportSpaces_in: [Int!]
  carportSpaces_not_in: [Int!]
  carportSpaces_lt: Int
  carportSpaces_lte: Int
  carportSpaces_gt: Int
  carportSpaces_gte: Int
  offStreetSpaces: Int
  offStreetSpaces_not: Int
  offStreetSpaces_in: [Int!]
  offStreetSpaces_not_in: [Int!]
  offStreetSpaces_lt: Int
  offStreetSpaces_lte: Int
  offStreetSpaces_gt: Int
  offStreetSpaces_gte: Int
  rent: Float
  rent_not: Float
  rent_in: [Float!]
  rent_not_in: [Float!]
  rent_lt: Float
  rent_lte: Float
  rent_gt: Float
  rent_gte: Float
  moveInDate: DateTime
  moveInDate_not: DateTime
  moveInDate_in: [DateTime!]
  moveInDate_not_in: [DateTime!]
  moveInDate_lt: DateTime
  moveInDate_lte: DateTime
  moveInDate_gt: DateTime
  moveInDate_gte: DateTime
  expiryDate: DateTime
  expiryDate_not: DateTime
  expiryDate_in: [DateTime!]
  expiryDate_not_in: [DateTime!]
  expiryDate_lt: DateTime
  expiryDate_lte: DateTime
  expiryDate_gt: DateTime
  expiryDate_gte: DateTime
  leaseLengthInMonths: Int
  leaseLengthInMonths_not: Int
  leaseLengthInMonths_in: [Int!]
  leaseLengthInMonths_not_in: [Int!]
  leaseLengthInMonths_lt: Int
  leaseLengthInMonths_lte: Int
  leaseLengthInMonths_gt: Int
  leaseLengthInMonths_gte: Int
  location: String
  location_not: String
  location_in: [String!]
  location_not_in: [String!]
  location_lt: String
  location_lte: String
  location_gt: String
  location_gte: String
  location_contains: String
  location_not_contains: String
  location_starts_with: String
  location_not_starts_with: String
  location_ends_with: String
  location_not_ends_with: String
  locationLat: Float
  locationLat_not: Float
  locationLat_in: [Float!]
  locationLat_not_in: [Float!]
  locationLat_lt: Float
  locationLat_lte: Float
  locationLat_gt: Float
  locationLat_gte: Float
  locationLng: Float
  locationLng_not: Float
  locationLng_in: [Float!]
  locationLng_not_in: [Float!]
  locationLng_lt: Float
  locationLng_lte: Float
  locationLng_gt: Float
  locationLng_gte: Float
  tenancyType: TenancyType
  tenancyType_not: TenancyType
  tenancyType_in: [TenancyType!]
  tenancyType_not_in: [TenancyType!]
  petsAllowed: Boolean
  petsAllowed_not: Boolean
  maximumOccupants: Int
  maximumOccupants_not: Int
  maximumOccupants_in: [Int!]
  maximumOccupants_not_in: [Int!]
  maximumOccupants_lt: Int
  maximumOccupants_lte: Int
  maximumOccupants_gt: Int
  maximumOccupants_gte: Int
  landlordProtectionCover: Boolean
  landlordProtectionCover_not: Boolean
  freeGlassCover: Boolean
  freeGlassCover_not: Boolean
  workingAlarms: Boolean
  workingAlarms_not: Boolean
  inHallway3mOfEachBedroom: Boolean
  inHallway3mOfEachBedroom_not: Boolean
  tenYearPhotoelectricAlarms: Boolean
  tenYearPhotoelectricAlarms_not: Boolean
  alarmsEachLevel: Boolean
  alarmsEachLevel_not: Boolean
  AND: [PropertyLeaseScalarWhereInput!]
  OR: [PropertyLeaseScalarWhereInput!]
  NOT: [PropertyLeaseScalarWhereInput!]
}

type PropertyLeaseSubscriptionPayload {
  mutation: MutationType!
  node: PropertyLease
  updatedFields: [String!]
  previousValues: PropertyLeasePreviousValues
}

input PropertyLeaseSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: PropertyLeaseWhereInput
  AND: [PropertyLeaseSubscriptionWhereInput!]
  OR: [PropertyLeaseSubscriptionWhereInput!]
  NOT: [PropertyLeaseSubscriptionWhereInput!]
}

input PropertyLeaseUpdatechattelsInput {
  set: [PropertyChattel!]
}

input PropertyLeaseUpdateindoorFeaturesInput {
  set: [IndoorFeature!]
}

input PropertyLeaseUpdateInput {
  placeId: String
  stage: LeaseStage
  property: PropertyUpdateOneRequiredWithoutLeasesInput
  lessees: LesseeUpdateManyWithoutLeaseInput
  lessors: LessorUpdateManyWithoutLeaseInput
  canAcceptPayment: Boolean
  rooms: Int
  bathrooms: Int
  garageSpaces: Int
  carportSpaces: Int
  offStreetSpaces: Int
  indoorFeatures: PropertyLeaseUpdateindoorFeaturesInput
  outdoorFeatures: PropertyLeaseUpdateoutdoorFeaturesInput
  rent: Float
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  location: String
  locationLat: Float
  locationLng: Float
  activity: ActivityUpdateManyWithoutPropertyLeaseInput
  wallet: WalletUpdateOneWithoutLeaseInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyLeaseUpdatepetsInput
  maximumOccupants: Int
  chattels: PropertyLeaseUpdatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  inspections: InspectionUpdateManyWithoutLeaseInput
}

input PropertyLeaseUpdateManyDataInput {
  placeId: String
  stage: LeaseStage
  canAcceptPayment: Boolean
  rooms: Int
  bathrooms: Int
  garageSpaces: Int
  carportSpaces: Int
  offStreetSpaces: Int
  indoorFeatures: PropertyLeaseUpdateindoorFeaturesInput
  outdoorFeatures: PropertyLeaseUpdateoutdoorFeaturesInput
  rent: Float
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  location: String
  locationLat: Float
  locationLng: Float
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyLeaseUpdatepetsInput
  maximumOccupants: Int
  chattels: PropertyLeaseUpdatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
}

input PropertyLeaseUpdateManyMutationInput {
  placeId: String
  stage: LeaseStage
  canAcceptPayment: Boolean
  rooms: Int
  bathrooms: Int
  garageSpaces: Int
  carportSpaces: Int
  offStreetSpaces: Int
  indoorFeatures: PropertyLeaseUpdateindoorFeaturesInput
  outdoorFeatures: PropertyLeaseUpdateoutdoorFeaturesInput
  rent: Float
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  location: String
  locationLat: Float
  locationLng: Float
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyLeaseUpdatepetsInput
  maximumOccupants: Int
  chattels: PropertyLeaseUpdatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
}

input PropertyLeaseUpdateManyWithoutPropertyInput {
  create: [PropertyLeaseCreateWithoutPropertyInput!]
  delete: [PropertyLeaseWhereUniqueInput!]
  connect: [PropertyLeaseWhereUniqueInput!]
  set: [PropertyLeaseWhereUniqueInput!]
  disconnect: [PropertyLeaseWhereUniqueInput!]
  update: [PropertyLeaseUpdateWithWhereUniqueWithoutPropertyInput!]
  upsert: [PropertyLeaseUpsertWithWhereUniqueWithoutPropertyInput!]
  deleteMany: [PropertyLeaseScalarWhereInput!]
  updateMany: [PropertyLeaseUpdateManyWithWhereNestedInput!]
}

input PropertyLeaseUpdateManyWithWhereNestedInput {
  where: PropertyLeaseScalarWhereInput!
  data: PropertyLeaseUpdateManyDataInput!
}

input PropertyLeaseUpdateOneWithoutActivityInput {
  create: PropertyLeaseCreateWithoutActivityInput
  update: PropertyLeaseUpdateWithoutActivityDataInput
  upsert: PropertyLeaseUpsertWithoutActivityInput
  delete: Boolean
  disconnect: Boolean
  connect: PropertyLeaseWhereUniqueInput
}

input PropertyLeaseUpdateOneWithoutInspectionsInput {
  create: PropertyLeaseCreateWithoutInspectionsInput
  update: PropertyLeaseUpdateWithoutInspectionsDataInput
  upsert: PropertyLeaseUpsertWithoutInspectionsInput
  delete: Boolean
  disconnect: Boolean
  connect: PropertyLeaseWhereUniqueInput
}

input PropertyLeaseUpdateOneWithoutLesseesInput {
  create: PropertyLeaseCreateWithoutLesseesInput
  update: PropertyLeaseUpdateWithoutLesseesDataInput
  upsert: PropertyLeaseUpsertWithoutLesseesInput
  delete: Boolean
  disconnect: Boolean
  connect: PropertyLeaseWhereUniqueInput
}

input PropertyLeaseUpdateOneWithoutLessorsInput {
  create: PropertyLeaseCreateWithoutLessorsInput
  update: PropertyLeaseUpdateWithoutLessorsDataInput
  upsert: PropertyLeaseUpsertWithoutLessorsInput
  delete: Boolean
  disconnect: Boolean
  connect: PropertyLeaseWhereUniqueInput
}

input PropertyLeaseUpdateOneWithoutWalletInput {
  create: PropertyLeaseCreateWithoutWalletInput
  update: PropertyLeaseUpdateWithoutWalletDataInput
  upsert: PropertyLeaseUpsertWithoutWalletInput
  delete: Boolean
  disconnect: Boolean
  connect: PropertyLeaseWhereUniqueInput
}

input PropertyLeaseUpdateoutdoorFeaturesInput {
  set: [OutdoorFeature!]
}

input PropertyLeaseUpdatepetsInput {
  set: [Pet!]
}

input PropertyLeaseUpdateWithoutActivityDataInput {
  placeId: String
  stage: LeaseStage
  property: PropertyUpdateOneRequiredWithoutLeasesInput
  lessees: LesseeUpdateManyWithoutLeaseInput
  lessors: LessorUpdateManyWithoutLeaseInput
  canAcceptPayment: Boolean
  rooms: Int
  bathrooms: Int
  garageSpaces: Int
  carportSpaces: Int
  offStreetSpaces: Int
  indoorFeatures: PropertyLeaseUpdateindoorFeaturesInput
  outdoorFeatures: PropertyLeaseUpdateoutdoorFeaturesInput
  rent: Float
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  location: String
  locationLat: Float
  locationLng: Float
  wallet: WalletUpdateOneWithoutLeaseInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyLeaseUpdatepetsInput
  maximumOccupants: Int
  chattels: PropertyLeaseUpdatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  inspections: InspectionUpdateManyWithoutLeaseInput
}

input PropertyLeaseUpdateWithoutInspectionsDataInput {
  placeId: String
  stage: LeaseStage
  property: PropertyUpdateOneRequiredWithoutLeasesInput
  lessees: LesseeUpdateManyWithoutLeaseInput
  lessors: LessorUpdateManyWithoutLeaseInput
  canAcceptPayment: Boolean
  rooms: Int
  bathrooms: Int
  garageSpaces: Int
  carportSpaces: Int
  offStreetSpaces: Int
  indoorFeatures: PropertyLeaseUpdateindoorFeaturesInput
  outdoorFeatures: PropertyLeaseUpdateoutdoorFeaturesInput
  rent: Float
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  location: String
  locationLat: Float
  locationLng: Float
  activity: ActivityUpdateManyWithoutPropertyLeaseInput
  wallet: WalletUpdateOneWithoutLeaseInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyLeaseUpdatepetsInput
  maximumOccupants: Int
  chattels: PropertyLeaseUpdatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
}

input PropertyLeaseUpdateWithoutLesseesDataInput {
  placeId: String
  stage: LeaseStage
  property: PropertyUpdateOneRequiredWithoutLeasesInput
  lessors: LessorUpdateManyWithoutLeaseInput
  canAcceptPayment: Boolean
  rooms: Int
  bathrooms: Int
  garageSpaces: Int
  carportSpaces: Int
  offStreetSpaces: Int
  indoorFeatures: PropertyLeaseUpdateindoorFeaturesInput
  outdoorFeatures: PropertyLeaseUpdateoutdoorFeaturesInput
  rent: Float
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  location: String
  locationLat: Float
  locationLng: Float
  activity: ActivityUpdateManyWithoutPropertyLeaseInput
  wallet: WalletUpdateOneWithoutLeaseInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyLeaseUpdatepetsInput
  maximumOccupants: Int
  chattels: PropertyLeaseUpdatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  inspections: InspectionUpdateManyWithoutLeaseInput
}

input PropertyLeaseUpdateWithoutLessorsDataInput {
  placeId: String
  stage: LeaseStage
  property: PropertyUpdateOneRequiredWithoutLeasesInput
  lessees: LesseeUpdateManyWithoutLeaseInput
  canAcceptPayment: Boolean
  rooms: Int
  bathrooms: Int
  garageSpaces: Int
  carportSpaces: Int
  offStreetSpaces: Int
  indoorFeatures: PropertyLeaseUpdateindoorFeaturesInput
  outdoorFeatures: PropertyLeaseUpdateoutdoorFeaturesInput
  rent: Float
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  location: String
  locationLat: Float
  locationLng: Float
  activity: ActivityUpdateManyWithoutPropertyLeaseInput
  wallet: WalletUpdateOneWithoutLeaseInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyLeaseUpdatepetsInput
  maximumOccupants: Int
  chattels: PropertyLeaseUpdatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  inspections: InspectionUpdateManyWithoutLeaseInput
}

input PropertyLeaseUpdateWithoutPropertyDataInput {
  placeId: String
  stage: LeaseStage
  lessees: LesseeUpdateManyWithoutLeaseInput
  lessors: LessorUpdateManyWithoutLeaseInput
  canAcceptPayment: Boolean
  rooms: Int
  bathrooms: Int
  garageSpaces: Int
  carportSpaces: Int
  offStreetSpaces: Int
  indoorFeatures: PropertyLeaseUpdateindoorFeaturesInput
  outdoorFeatures: PropertyLeaseUpdateoutdoorFeaturesInput
  rent: Float
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  location: String
  locationLat: Float
  locationLng: Float
  activity: ActivityUpdateManyWithoutPropertyLeaseInput
  wallet: WalletUpdateOneWithoutLeaseInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyLeaseUpdatepetsInput
  maximumOccupants: Int
  chattels: PropertyLeaseUpdatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  inspections: InspectionUpdateManyWithoutLeaseInput
}

input PropertyLeaseUpdateWithoutWalletDataInput {
  placeId: String
  stage: LeaseStage
  property: PropertyUpdateOneRequiredWithoutLeasesInput
  lessees: LesseeUpdateManyWithoutLeaseInput
  lessors: LessorUpdateManyWithoutLeaseInput
  canAcceptPayment: Boolean
  rooms: Int
  bathrooms: Int
  garageSpaces: Int
  carportSpaces: Int
  offStreetSpaces: Int
  indoorFeatures: PropertyLeaseUpdateindoorFeaturesInput
  outdoorFeatures: PropertyLeaseUpdateoutdoorFeaturesInput
  rent: Float
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  location: String
  locationLat: Float
  locationLng: Float
  activity: ActivityUpdateManyWithoutPropertyLeaseInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyLeaseUpdatepetsInput
  maximumOccupants: Int
  chattels: PropertyLeaseUpdatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  inspections: InspectionUpdateManyWithoutLeaseInput
}

input PropertyLeaseUpdateWithWhereUniqueWithoutPropertyInput {
  where: PropertyLeaseWhereUniqueInput!
  data: PropertyLeaseUpdateWithoutPropertyDataInput!
}

input PropertyLeaseUpsertWithoutActivityInput {
  update: PropertyLeaseUpdateWithoutActivityDataInput!
  create: PropertyLeaseCreateWithoutActivityInput!
}

input PropertyLeaseUpsertWithoutInspectionsInput {
  update: PropertyLeaseUpdateWithoutInspectionsDataInput!
  create: PropertyLeaseCreateWithoutInspectionsInput!
}

input PropertyLeaseUpsertWithoutLesseesInput {
  update: PropertyLeaseUpdateWithoutLesseesDataInput!
  create: PropertyLeaseCreateWithoutLesseesInput!
}

input PropertyLeaseUpsertWithoutLessorsInput {
  update: PropertyLeaseUpdateWithoutLessorsDataInput!
  create: PropertyLeaseCreateWithoutLessorsInput!
}

input PropertyLeaseUpsertWithoutWalletInput {
  update: PropertyLeaseUpdateWithoutWalletDataInput!
  create: PropertyLeaseCreateWithoutWalletInput!
}

input PropertyLeaseUpsertWithWhereUniqueWithoutPropertyInput {
  where: PropertyLeaseWhereUniqueInput!
  update: PropertyLeaseUpdateWithoutPropertyDataInput!
  create: PropertyLeaseCreateWithoutPropertyInput!
}

input PropertyLeaseWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  placeId: String
  placeId_not: String
  placeId_in: [String!]
  placeId_not_in: [String!]
  placeId_lt: String
  placeId_lte: String
  placeId_gt: String
  placeId_gte: String
  placeId_contains: String
  placeId_not_contains: String
  placeId_starts_with: String
  placeId_not_starts_with: String
  placeId_ends_with: String
  placeId_not_ends_with: String
  stage: LeaseStage
  stage_not: LeaseStage
  stage_in: [LeaseStage!]
  stage_not_in: [LeaseStage!]
  property: PropertyWhereInput
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  lessees_every: LesseeWhereInput
  lessees_some: LesseeWhereInput
  lessees_none: LesseeWhereInput
  lessors_every: LessorWhereInput
  lessors_some: LessorWhereInput
  lessors_none: LessorWhereInput
  canAcceptPayment: Boolean
  canAcceptPayment_not: Boolean
  rooms: Int
  rooms_not: Int
  rooms_in: [Int!]
  rooms_not_in: [Int!]
  rooms_lt: Int
  rooms_lte: Int
  rooms_gt: Int
  rooms_gte: Int
  bathrooms: Int
  bathrooms_not: Int
  bathrooms_in: [Int!]
  bathrooms_not_in: [Int!]
  bathrooms_lt: Int
  bathrooms_lte: Int
  bathrooms_gt: Int
  bathrooms_gte: Int
  garageSpaces: Int
  garageSpaces_not: Int
  garageSpaces_in: [Int!]
  garageSpaces_not_in: [Int!]
  garageSpaces_lt: Int
  garageSpaces_lte: Int
  garageSpaces_gt: Int
  garageSpaces_gte: Int
  carportSpaces: Int
  carportSpaces_not: Int
  carportSpaces_in: [Int!]
  carportSpaces_not_in: [Int!]
  carportSpaces_lt: Int
  carportSpaces_lte: Int
  carportSpaces_gt: Int
  carportSpaces_gte: Int
  offStreetSpaces: Int
  offStreetSpaces_not: Int
  offStreetSpaces_in: [Int!]
  offStreetSpaces_not_in: [Int!]
  offStreetSpaces_lt: Int
  offStreetSpaces_lte: Int
  offStreetSpaces_gt: Int
  offStreetSpaces_gte: Int
  rent: Float
  rent_not: Float
  rent_in: [Float!]
  rent_not_in: [Float!]
  rent_lt: Float
  rent_lte: Float
  rent_gt: Float
  rent_gte: Float
  moveInDate: DateTime
  moveInDate_not: DateTime
  moveInDate_in: [DateTime!]
  moveInDate_not_in: [DateTime!]
  moveInDate_lt: DateTime
  moveInDate_lte: DateTime
  moveInDate_gt: DateTime
  moveInDate_gte: DateTime
  expiryDate: DateTime
  expiryDate_not: DateTime
  expiryDate_in: [DateTime!]
  expiryDate_not_in: [DateTime!]
  expiryDate_lt: DateTime
  expiryDate_lte: DateTime
  expiryDate_gt: DateTime
  expiryDate_gte: DateTime
  leaseLengthInMonths: Int
  leaseLengthInMonths_not: Int
  leaseLengthInMonths_in: [Int!]
  leaseLengthInMonths_not_in: [Int!]
  leaseLengthInMonths_lt: Int
  leaseLengthInMonths_lte: Int
  leaseLengthInMonths_gt: Int
  leaseLengthInMonths_gte: Int
  location: String
  location_not: String
  location_in: [String!]
  location_not_in: [String!]
  location_lt: String
  location_lte: String
  location_gt: String
  location_gte: String
  location_contains: String
  location_not_contains: String
  location_starts_with: String
  location_not_starts_with: String
  location_ends_with: String
  location_not_ends_with: String
  locationLat: Float
  locationLat_not: Float
  locationLat_in: [Float!]
  locationLat_not_in: [Float!]
  locationLat_lt: Float
  locationLat_lte: Float
  locationLat_gt: Float
  locationLat_gte: Float
  locationLng: Float
  locationLng_not: Float
  locationLng_in: [Float!]
  locationLng_not_in: [Float!]
  locationLng_lt: Float
  locationLng_lte: Float
  locationLng_gt: Float
  locationLng_gte: Float
  activity_every: ActivityWhereInput
  activity_some: ActivityWhereInput
  activity_none: ActivityWhereInput
  wallet: WalletWhereInput
  tenancyType: TenancyType
  tenancyType_not: TenancyType
  tenancyType_in: [TenancyType!]
  tenancyType_not_in: [TenancyType!]
  petsAllowed: Boolean
  petsAllowed_not: Boolean
  maximumOccupants: Int
  maximumOccupants_not: Int
  maximumOccupants_in: [Int!]
  maximumOccupants_not_in: [Int!]
  maximumOccupants_lt: Int
  maximumOccupants_lte: Int
  maximumOccupants_gt: Int
  maximumOccupants_gte: Int
  landlordProtectionCover: Boolean
  landlordProtectionCover_not: Boolean
  freeGlassCover: Boolean
  freeGlassCover_not: Boolean
  workingAlarms: Boolean
  workingAlarms_not: Boolean
  inHallway3mOfEachBedroom: Boolean
  inHallway3mOfEachBedroom_not: Boolean
  tenYearPhotoelectricAlarms: Boolean
  tenYearPhotoelectricAlarms_not: Boolean
  alarmsEachLevel: Boolean
  alarmsEachLevel_not: Boolean
  inspections_every: InspectionWhereInput
  inspections_some: InspectionWhereInput
  inspections_none: InspectionWhereInput
  AND: [PropertyLeaseWhereInput!]
  OR: [PropertyLeaseWhereInput!]
  NOT: [PropertyLeaseWhereInput!]
}

input PropertyLeaseWhereUniqueInput {
  id: ID
  placeId: String
}

enum PropertyOrderByInput {
  id_ASC
  id_DESC
  placeId_ASC
  placeId_DESC
  location_ASC
  location_DESC
  locationLat_ASC
  locationLat_DESC
  locationLng_ASC
  locationLng_DESC
  titleType_ASC
  titleType_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  type_ASC
  type_DESC
  fixedLength_ASC
  fixedLength_DESC
  headline_ASC
  headline_DESC
  rooms_ASC
  rooms_DESC
  maximumOccupants_ASC
  maximumOccupants_DESC
  rent_ASC
  rent_DESC
  lowestRoomPrice_ASC
  lowestRoomPrice_DESC
  highestRoomPrice_ASC
  highestRoomPrice_DESC
  useAdvancedRent_ASC
  useAdvancedRent_DESC
  bathrooms_ASC
  bathrooms_DESC
  garageSpaces_ASC
  garageSpaces_DESC
  carportSpaces_ASC
  carportSpaces_DESC
  offStreetSpaces_ASC
  offStreetSpaces_DESC
  insulationProof_ASC
  insulationProof_DESC
  moveInDate_ASC
  moveInDate_DESC
  expiryDate_ASC
  expiryDate_DESC
  leaseLengthInMonths_ASC
  leaseLengthInMonths_DESC
  onTheMarket_ASC
  onTheMarket_DESC
  acceptedTerms_ASC
  acceptedTerms_DESC
  isLeased_ASC
  isLeased_DESC
  lastLeaseId_ASC
  lastLeaseId_DESC
  leaseExpiryDate_ASC
  leaseExpiryDate_DESC
  rehouserStamp_ASC
  rehouserStamp_DESC
  tenancyType_ASC
  tenancyType_DESC
  petsAllowed_ASC
  petsAllowed_DESC
  manholeLocation_ASC
  manholeLocation_DESC
  gardenToMaintain_ASC
  gardenToMaintain_DESC
  gardenResponsible_ASC
  gardenResponsible_DESC
  maintenanceResponsible_ASC
  maintenanceResponsible_DESC
  landlordProtectionCover_ASC
  landlordProtectionCover_DESC
  freeGlassCover_ASC
  freeGlassCover_DESC
  workingAlarms_ASC
  workingAlarms_DESC
  inHallway3mOfEachBedroom_ASC
  inHallway3mOfEachBedroom_DESC
  tenYearPhotoelectricAlarms_ASC
  tenYearPhotoelectricAlarms_DESC
  alarmsEachLevel_ASC
  alarmsEachLevel_DESC
  rehouserHandlesBills_ASC
  rehouserHandlesBills_DESC
}

type PropertyPreviousValues {
  id: ID!
  placeId: String!
  location: String!
  locationLat: Float!
  locationLng: Float!
  titleType: PropertyTitleType!
  updatedAt: DateTime!
  createdAt: DateTime!
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int!
  maximumOccupants: Int
  rent: Float!
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  insulationProof: InsulationProof
  indoorFeatures: [IndoorFeature!]!
  outdoorFeatures: [OutdoorFeature!]!
  heatSources: [HeatSource!]!
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean!
  acceptedTerms: Boolean
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: [Pet!]!
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: [PropertyChattel!]!
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  rehouserHandlesBills: Boolean
}

input PropertyScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  placeId: String
  placeId_not: String
  placeId_in: [String!]
  placeId_not_in: [String!]
  placeId_lt: String
  placeId_lte: String
  placeId_gt: String
  placeId_gte: String
  placeId_contains: String
  placeId_not_contains: String
  placeId_starts_with: String
  placeId_not_starts_with: String
  placeId_ends_with: String
  placeId_not_ends_with: String
  location: String
  location_not: String
  location_in: [String!]
  location_not_in: [String!]
  location_lt: String
  location_lte: String
  location_gt: String
  location_gte: String
  location_contains: String
  location_not_contains: String
  location_starts_with: String
  location_not_starts_with: String
  location_ends_with: String
  location_not_ends_with: String
  locationLat: Float
  locationLat_not: Float
  locationLat_in: [Float!]
  locationLat_not_in: [Float!]
  locationLat_lt: Float
  locationLat_lte: Float
  locationLat_gt: Float
  locationLat_gte: Float
  locationLng: Float
  locationLng_not: Float
  locationLng_in: [Float!]
  locationLng_not_in: [Float!]
  locationLng_lt: Float
  locationLng_lte: Float
  locationLng_gt: Float
  locationLng_gte: Float
  titleType: PropertyTitleType
  titleType_not: PropertyTitleType
  titleType_in: [PropertyTitleType!]
  titleType_not_in: [PropertyTitleType!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  type: PropertyType
  type_not: PropertyType
  type_in: [PropertyType!]
  type_not_in: [PropertyType!]
  fixedLength: TenancyFixedLength
  fixedLength_not: TenancyFixedLength
  fixedLength_in: [TenancyFixedLength!]
  fixedLength_not_in: [TenancyFixedLength!]
  headline: String
  headline_not: String
  headline_in: [String!]
  headline_not_in: [String!]
  headline_lt: String
  headline_lte: String
  headline_gt: String
  headline_gte: String
  headline_contains: String
  headline_not_contains: String
  headline_starts_with: String
  headline_not_starts_with: String
  headline_ends_with: String
  headline_not_ends_with: String
  rooms: Int
  rooms_not: Int
  rooms_in: [Int!]
  rooms_not_in: [Int!]
  rooms_lt: Int
  rooms_lte: Int
  rooms_gt: Int
  rooms_gte: Int
  maximumOccupants: Int
  maximumOccupants_not: Int
  maximumOccupants_in: [Int!]
  maximumOccupants_not_in: [Int!]
  maximumOccupants_lt: Int
  maximumOccupants_lte: Int
  maximumOccupants_gt: Int
  maximumOccupants_gte: Int
  rent: Float
  rent_not: Float
  rent_in: [Float!]
  rent_not_in: [Float!]
  rent_lt: Float
  rent_lte: Float
  rent_gt: Float
  rent_gte: Float
  lowestRoomPrice: Float
  lowestRoomPrice_not: Float
  lowestRoomPrice_in: [Float!]
  lowestRoomPrice_not_in: [Float!]
  lowestRoomPrice_lt: Float
  lowestRoomPrice_lte: Float
  lowestRoomPrice_gt: Float
  lowestRoomPrice_gte: Float
  highestRoomPrice: Float
  highestRoomPrice_not: Float
  highestRoomPrice_in: [Float!]
  highestRoomPrice_not_in: [Float!]
  highestRoomPrice_lt: Float
  highestRoomPrice_lte: Float
  highestRoomPrice_gt: Float
  highestRoomPrice_gte: Float
  useAdvancedRent: Boolean
  useAdvancedRent_not: Boolean
  bathrooms: Int
  bathrooms_not: Int
  bathrooms_in: [Int!]
  bathrooms_not_in: [Int!]
  bathrooms_lt: Int
  bathrooms_lte: Int
  bathrooms_gt: Int
  bathrooms_gte: Int
  garageSpaces: Int
  garageSpaces_not: Int
  garageSpaces_in: [Int!]
  garageSpaces_not_in: [Int!]
  garageSpaces_lt: Int
  garageSpaces_lte: Int
  garageSpaces_gt: Int
  garageSpaces_gte: Int
  carportSpaces: Int
  carportSpaces_not: Int
  carportSpaces_in: [Int!]
  carportSpaces_not_in: [Int!]
  carportSpaces_lt: Int
  carportSpaces_lte: Int
  carportSpaces_gt: Int
  carportSpaces_gte: Int
  offStreetSpaces: Int
  offStreetSpaces_not: Int
  offStreetSpaces_in: [Int!]
  offStreetSpaces_not_in: [Int!]
  offStreetSpaces_lt: Int
  offStreetSpaces_lte: Int
  offStreetSpaces_gt: Int
  offStreetSpaces_gte: Int
  insulationProof: InsulationProof
  insulationProof_not: InsulationProof
  insulationProof_in: [InsulationProof!]
  insulationProof_not_in: [InsulationProof!]
  moveInDate: DateTime
  moveInDate_not: DateTime
  moveInDate_in: [DateTime!]
  moveInDate_not_in: [DateTime!]
  moveInDate_lt: DateTime
  moveInDate_lte: DateTime
  moveInDate_gt: DateTime
  moveInDate_gte: DateTime
  expiryDate: DateTime
  expiryDate_not: DateTime
  expiryDate_in: [DateTime!]
  expiryDate_not_in: [DateTime!]
  expiryDate_lt: DateTime
  expiryDate_lte: DateTime
  expiryDate_gt: DateTime
  expiryDate_gte: DateTime
  leaseLengthInMonths: Int
  leaseLengthInMonths_not: Int
  leaseLengthInMonths_in: [Int!]
  leaseLengthInMonths_not_in: [Int!]
  leaseLengthInMonths_lt: Int
  leaseLengthInMonths_lte: Int
  leaseLengthInMonths_gt: Int
  leaseLengthInMonths_gte: Int
  onTheMarket: Boolean
  onTheMarket_not: Boolean
  acceptedTerms: Boolean
  acceptedTerms_not: Boolean
  isLeased: Boolean
  isLeased_not: Boolean
  lastLeaseId: String
  lastLeaseId_not: String
  lastLeaseId_in: [String!]
  lastLeaseId_not_in: [String!]
  lastLeaseId_lt: String
  lastLeaseId_lte: String
  lastLeaseId_gt: String
  lastLeaseId_gte: String
  lastLeaseId_contains: String
  lastLeaseId_not_contains: String
  lastLeaseId_starts_with: String
  lastLeaseId_not_starts_with: String
  lastLeaseId_ends_with: String
  lastLeaseId_not_ends_with: String
  leaseExpiryDate: DateTime
  leaseExpiryDate_not: DateTime
  leaseExpiryDate_in: [DateTime!]
  leaseExpiryDate_not_in: [DateTime!]
  leaseExpiryDate_lt: DateTime
  leaseExpiryDate_lte: DateTime
  leaseExpiryDate_gt: DateTime
  leaseExpiryDate_gte: DateTime
  rehouserStamp: Boolean
  rehouserStamp_not: Boolean
  tenancyType: TenancyType
  tenancyType_not: TenancyType
  tenancyType_in: [TenancyType!]
  tenancyType_not_in: [TenancyType!]
  petsAllowed: Boolean
  petsAllowed_not: Boolean
  manholeLocation: String
  manholeLocation_not: String
  manholeLocation_in: [String!]
  manholeLocation_not_in: [String!]
  manholeLocation_lt: String
  manholeLocation_lte: String
  manholeLocation_gt: String
  manholeLocation_gte: String
  manholeLocation_contains: String
  manholeLocation_not_contains: String
  manholeLocation_starts_with: String
  manholeLocation_not_starts_with: String
  manholeLocation_ends_with: String
  manholeLocation_not_ends_with: String
  gardenToMaintain: Boolean
  gardenToMaintain_not: Boolean
  gardenResponsible: PartyResponsible
  gardenResponsible_not: PartyResponsible
  gardenResponsible_in: [PartyResponsible!]
  gardenResponsible_not_in: [PartyResponsible!]
  maintenanceResponsible: PartyResponsible
  maintenanceResponsible_not: PartyResponsible
  maintenanceResponsible_in: [PartyResponsible!]
  maintenanceResponsible_not_in: [PartyResponsible!]
  landlordProtectionCover: Boolean
  landlordProtectionCover_not: Boolean
  freeGlassCover: Boolean
  freeGlassCover_not: Boolean
  workingAlarms: Boolean
  workingAlarms_not: Boolean
  inHallway3mOfEachBedroom: Boolean
  inHallway3mOfEachBedroom_not: Boolean
  tenYearPhotoelectricAlarms: Boolean
  tenYearPhotoelectricAlarms_not: Boolean
  alarmsEachLevel: Boolean
  alarmsEachLevel_not: Boolean
  rehouserHandlesBills: Boolean
  rehouserHandlesBills_not: Boolean
  AND: [PropertyScalarWhereInput!]
  OR: [PropertyScalarWhereInput!]
  NOT: [PropertyScalarWhereInput!]
}

type PropertySubscriptionPayload {
  mutation: MutationType!
  node: Property
  updatedFields: [String!]
  previousValues: PropertyPreviousValues
}

input PropertySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: PropertyWhereInput
  AND: [PropertySubscriptionWhereInput!]
  OR: [PropertySubscriptionWhereInput!]
  NOT: [PropertySubscriptionWhereInput!]
}

enum PropertyTitleType {
  UNIT_TITLE
  FREEHOLD
  CROSSLEASE
  LEASEHOLD
}

enum PropertyType {
  HOUSE
  APARTMENT
  UNIT
  TOWNHOUSE
  VILLA
  RETIREMENT_LIVING
  STUDIO
  FARM_LAND
  ACREAGE_SEMI_RURAL
  OTHER
}

input PropertyUpdatechattelsInput {
  set: [PropertyChattel!]
}

input PropertyUpdateheatSourcesInput {
  set: [HeatSource!]
}

input PropertyUpdateindoorFeaturesInput {
  set: [IndoorFeature!]
}

input PropertyUpdateInput {
  placeId: String
  location: String
  locationLat: Float
  locationLng: Float
  titleType: PropertyTitleType
  bankDetails: BankDetailUpdateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int
  maximumOccupants: Int
  rent: Float
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationUpdateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int
  carportSpaces: Int
  offStreetSpaces: Int
  insulationProof: InsulationProof
  insulationForm: InsulationFormUpdateOneInput
  insulationStatementFile: FileUpdateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyUpdateindoorFeaturesInput
  outdoorFeatures: PropertyUpdateoutdoorFeaturesInput
  heatSources: PropertyUpdateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean
  owners: UserUpdateManyWithoutPropertiesInput
  creator: UserUpdateOneRequiredWithoutCreatedPropertiesInput
  images: FileUpdateManyWithoutPropertyImagesInput
  proofOfOwnership: FileUpdateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationUpdateManyWithoutPropertyInput
  leases: PropertyLeaseUpdateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityUpdateManyWithoutPropertyInput
  appraisals: RentalAppraisalUpdateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyUpdatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyUpdatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingUpdateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistUpdateOneWithoutPropertyInput
  files: PropertyFilesUpdateOneWithoutPropertyInput
  inspections: InspectionUpdateManyWithoutPropertyInput
}

input PropertyUpdateManyDataInput {
  placeId: String
  location: String
  locationLat: Float
  locationLng: Float
  titleType: PropertyTitleType
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int
  maximumOccupants: Int
  rent: Float
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  bathrooms: Int
  garageSpaces: Int
  carportSpaces: Int
  offStreetSpaces: Int
  insulationProof: InsulationProof
  indoorFeatures: PropertyUpdateindoorFeaturesInput
  outdoorFeatures: PropertyUpdateoutdoorFeaturesInput
  heatSources: PropertyUpdateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean
  acceptedTerms: Boolean
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyUpdatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyUpdatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  rehouserHandlesBills: Boolean
}

input PropertyUpdateManyMutationInput {
  placeId: String
  location: String
  locationLat: Float
  locationLng: Float
  titleType: PropertyTitleType
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int
  maximumOccupants: Int
  rent: Float
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  bathrooms: Int
  garageSpaces: Int
  carportSpaces: Int
  offStreetSpaces: Int
  insulationProof: InsulationProof
  indoorFeatures: PropertyUpdateindoorFeaturesInput
  outdoorFeatures: PropertyUpdateoutdoorFeaturesInput
  heatSources: PropertyUpdateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean
  acceptedTerms: Boolean
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyUpdatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyUpdatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  rehouserHandlesBills: Boolean
}

input PropertyUpdateManyWithoutCreatorInput {
  create: [PropertyCreateWithoutCreatorInput!]
  delete: [PropertyWhereUniqueInput!]
  connect: [PropertyWhereUniqueInput!]
  set: [PropertyWhereUniqueInput!]
  disconnect: [PropertyWhereUniqueInput!]
  update: [PropertyUpdateWithWhereUniqueWithoutCreatorInput!]
  upsert: [PropertyUpsertWithWhereUniqueWithoutCreatorInput!]
  deleteMany: [PropertyScalarWhereInput!]
  updateMany: [PropertyUpdateManyWithWhereNestedInput!]
}

input PropertyUpdateManyWithoutOwnersInput {
  create: [PropertyCreateWithoutOwnersInput!]
  delete: [PropertyWhereUniqueInput!]
  connect: [PropertyWhereUniqueInput!]
  set: [PropertyWhereUniqueInput!]
  disconnect: [PropertyWhereUniqueInput!]
  update: [PropertyUpdateWithWhereUniqueWithoutOwnersInput!]
  upsert: [PropertyUpsertWithWhereUniqueWithoutOwnersInput!]
  deleteMany: [PropertyScalarWhereInput!]
  updateMany: [PropertyUpdateManyWithWhereNestedInput!]
}

input PropertyUpdateManyWithWhereNestedInput {
  where: PropertyScalarWhereInput!
  data: PropertyUpdateManyDataInput!
}

input PropertyUpdateOneRequiredWithoutAccommodationInput {
  create: PropertyCreateWithoutAccommodationInput
  update: PropertyUpdateWithoutAccommodationDataInput
  upsert: PropertyUpsertWithoutAccommodationInput
  connect: PropertyWhereUniqueInput
}

input PropertyUpdateOneRequiredWithoutLeasesInput {
  create: PropertyCreateWithoutLeasesInput
  update: PropertyUpdateWithoutLeasesDataInput
  upsert: PropertyUpsertWithoutLeasesInput
  connect: PropertyWhereUniqueInput
}

input PropertyUpdateOneRequiredWithoutRentalApplicationsInput {
  create: PropertyCreateWithoutRentalApplicationsInput
  update: PropertyUpdateWithoutRentalApplicationsDataInput
  upsert: PropertyUpsertWithoutRentalApplicationsInput
  connect: PropertyWhereUniqueInput
}

input PropertyUpdateOneRequiredWithoutViewingsInput {
  create: PropertyCreateWithoutViewingsInput
  update: PropertyUpdateWithoutViewingsDataInput
  upsert: PropertyUpsertWithoutViewingsInput
  connect: PropertyWhereUniqueInput
}

input PropertyUpdateOneWithoutActivityInput {
  create: PropertyCreateWithoutActivityInput
  update: PropertyUpdateWithoutActivityDataInput
  upsert: PropertyUpsertWithoutActivityInput
  delete: Boolean
  disconnect: Boolean
  connect: PropertyWhereUniqueInput
}

input PropertyUpdateOneWithoutAppraisalsInput {
  create: PropertyCreateWithoutAppraisalsInput
  update: PropertyUpdateWithoutAppraisalsDataInput
  upsert: PropertyUpsertWithoutAppraisalsInput
  delete: Boolean
  disconnect: Boolean
  connect: PropertyWhereUniqueInput
}

input PropertyUpdateOneWithoutBankDetailsInput {
  create: PropertyCreateWithoutBankDetailsInput
  update: PropertyUpdateWithoutBankDetailsDataInput
  upsert: PropertyUpsertWithoutBankDetailsInput
  delete: Boolean
  disconnect: Boolean
  connect: PropertyWhereUniqueInput
}

input PropertyUpdateOneWithoutFilesInput {
  create: PropertyCreateWithoutFilesInput
  update: PropertyUpdateWithoutFilesDataInput
  upsert: PropertyUpsertWithoutFilesInput
  delete: Boolean
  disconnect: Boolean
  connect: PropertyWhereUniqueInput
}

input PropertyUpdateOneWithoutImagesInput {
  create: PropertyCreateWithoutImagesInput
  update: PropertyUpdateWithoutImagesDataInput
  upsert: PropertyUpsertWithoutImagesInput
  delete: Boolean
  disconnect: Boolean
  connect: PropertyWhereUniqueInput
}

input PropertyUpdateOneWithoutInspectionsInput {
  create: PropertyCreateWithoutInspectionsInput
  update: PropertyUpdateWithoutInspectionsDataInput
  upsert: PropertyUpsertWithoutInspectionsInput
  delete: Boolean
  disconnect: Boolean
  connect: PropertyWhereUniqueInput
}

input PropertyUpdateOneWithoutInsulationStatementFileInput {
  create: PropertyCreateWithoutInsulationStatementFileInput
  update: PropertyUpdateWithoutInsulationStatementFileDataInput
  upsert: PropertyUpsertWithoutInsulationStatementFileInput
  delete: Boolean
  disconnect: Boolean
  connect: PropertyWhereUniqueInput
}

input PropertyUpdateOneWithoutProofOfOwnershipInput {
  create: PropertyCreateWithoutProofOfOwnershipInput
  update: PropertyUpdateWithoutProofOfOwnershipDataInput
  upsert: PropertyUpsertWithoutProofOfOwnershipInput
  delete: Boolean
  disconnect: Boolean
  connect: PropertyWhereUniqueInput
}

input PropertyUpdateOneWithoutRehouserAssistInput {
  create: PropertyCreateWithoutRehouserAssistInput
  update: PropertyUpdateWithoutRehouserAssistDataInput
  upsert: PropertyUpsertWithoutRehouserAssistInput
  delete: Boolean
  disconnect: Boolean
  connect: PropertyWhereUniqueInput
}

input PropertyUpdateoutdoorFeaturesInput {
  set: [OutdoorFeature!]
}

input PropertyUpdatepetsInput {
  set: [Pet!]
}

input PropertyUpdateWithoutAccommodationDataInput {
  placeId: String
  location: String
  locationLat: Float
  locationLng: Float
  titleType: PropertyTitleType
  bankDetails: BankDetailUpdateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int
  maximumOccupants: Int
  rent: Float
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  bathrooms: Int
  garageSpaces: Int
  carportSpaces: Int
  offStreetSpaces: Int
  insulationProof: InsulationProof
  insulationForm: InsulationFormUpdateOneInput
  insulationStatementFile: FileUpdateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyUpdateindoorFeaturesInput
  outdoorFeatures: PropertyUpdateoutdoorFeaturesInput
  heatSources: PropertyUpdateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean
  owners: UserUpdateManyWithoutPropertiesInput
  creator: UserUpdateOneRequiredWithoutCreatedPropertiesInput
  images: FileUpdateManyWithoutPropertyImagesInput
  proofOfOwnership: FileUpdateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationUpdateManyWithoutPropertyInput
  leases: PropertyLeaseUpdateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityUpdateManyWithoutPropertyInput
  appraisals: RentalAppraisalUpdateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyUpdatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyUpdatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingUpdateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistUpdateOneWithoutPropertyInput
  files: PropertyFilesUpdateOneWithoutPropertyInput
  inspections: InspectionUpdateManyWithoutPropertyInput
}

input PropertyUpdateWithoutActivityDataInput {
  placeId: String
  location: String
  locationLat: Float
  locationLng: Float
  titleType: PropertyTitleType
  bankDetails: BankDetailUpdateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int
  maximumOccupants: Int
  rent: Float
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationUpdateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int
  carportSpaces: Int
  offStreetSpaces: Int
  insulationProof: InsulationProof
  insulationForm: InsulationFormUpdateOneInput
  insulationStatementFile: FileUpdateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyUpdateindoorFeaturesInput
  outdoorFeatures: PropertyUpdateoutdoorFeaturesInput
  heatSources: PropertyUpdateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean
  owners: UserUpdateManyWithoutPropertiesInput
  creator: UserUpdateOneRequiredWithoutCreatedPropertiesInput
  images: FileUpdateManyWithoutPropertyImagesInput
  proofOfOwnership: FileUpdateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationUpdateManyWithoutPropertyInput
  leases: PropertyLeaseUpdateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  appraisals: RentalAppraisalUpdateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyUpdatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyUpdatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingUpdateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistUpdateOneWithoutPropertyInput
  files: PropertyFilesUpdateOneWithoutPropertyInput
  inspections: InspectionUpdateManyWithoutPropertyInput
}

input PropertyUpdateWithoutAppraisalsDataInput {
  placeId: String
  location: String
  locationLat: Float
  locationLng: Float
  titleType: PropertyTitleType
  bankDetails: BankDetailUpdateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int
  maximumOccupants: Int
  rent: Float
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationUpdateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int
  carportSpaces: Int
  offStreetSpaces: Int
  insulationProof: InsulationProof
  insulationForm: InsulationFormUpdateOneInput
  insulationStatementFile: FileUpdateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyUpdateindoorFeaturesInput
  outdoorFeatures: PropertyUpdateoutdoorFeaturesInput
  heatSources: PropertyUpdateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean
  owners: UserUpdateManyWithoutPropertiesInput
  creator: UserUpdateOneRequiredWithoutCreatedPropertiesInput
  images: FileUpdateManyWithoutPropertyImagesInput
  proofOfOwnership: FileUpdateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationUpdateManyWithoutPropertyInput
  leases: PropertyLeaseUpdateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityUpdateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyUpdatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyUpdatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingUpdateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistUpdateOneWithoutPropertyInput
  files: PropertyFilesUpdateOneWithoutPropertyInput
  inspections: InspectionUpdateManyWithoutPropertyInput
}

input PropertyUpdateWithoutBankDetailsDataInput {
  placeId: String
  location: String
  locationLat: Float
  locationLng: Float
  titleType: PropertyTitleType
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int
  maximumOccupants: Int
  rent: Float
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationUpdateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int
  carportSpaces: Int
  offStreetSpaces: Int
  insulationProof: InsulationProof
  insulationForm: InsulationFormUpdateOneInput
  insulationStatementFile: FileUpdateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyUpdateindoorFeaturesInput
  outdoorFeatures: PropertyUpdateoutdoorFeaturesInput
  heatSources: PropertyUpdateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean
  owners: UserUpdateManyWithoutPropertiesInput
  creator: UserUpdateOneRequiredWithoutCreatedPropertiesInput
  images: FileUpdateManyWithoutPropertyImagesInput
  proofOfOwnership: FileUpdateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationUpdateManyWithoutPropertyInput
  leases: PropertyLeaseUpdateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityUpdateManyWithoutPropertyInput
  appraisals: RentalAppraisalUpdateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyUpdatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyUpdatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingUpdateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistUpdateOneWithoutPropertyInput
  files: PropertyFilesUpdateOneWithoutPropertyInput
  inspections: InspectionUpdateManyWithoutPropertyInput
}

input PropertyUpdateWithoutCreatorDataInput {
  placeId: String
  location: String
  locationLat: Float
  locationLng: Float
  titleType: PropertyTitleType
  bankDetails: BankDetailUpdateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int
  maximumOccupants: Int
  rent: Float
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationUpdateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int
  carportSpaces: Int
  offStreetSpaces: Int
  insulationProof: InsulationProof
  insulationForm: InsulationFormUpdateOneInput
  insulationStatementFile: FileUpdateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyUpdateindoorFeaturesInput
  outdoorFeatures: PropertyUpdateoutdoorFeaturesInput
  heatSources: PropertyUpdateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean
  owners: UserUpdateManyWithoutPropertiesInput
  images: FileUpdateManyWithoutPropertyImagesInput
  proofOfOwnership: FileUpdateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationUpdateManyWithoutPropertyInput
  leases: PropertyLeaseUpdateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityUpdateManyWithoutPropertyInput
  appraisals: RentalAppraisalUpdateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyUpdatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyUpdatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingUpdateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistUpdateOneWithoutPropertyInput
  files: PropertyFilesUpdateOneWithoutPropertyInput
  inspections: InspectionUpdateManyWithoutPropertyInput
}

input PropertyUpdateWithoutFilesDataInput {
  placeId: String
  location: String
  locationLat: Float
  locationLng: Float
  titleType: PropertyTitleType
  bankDetails: BankDetailUpdateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int
  maximumOccupants: Int
  rent: Float
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationUpdateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int
  carportSpaces: Int
  offStreetSpaces: Int
  insulationProof: InsulationProof
  insulationForm: InsulationFormUpdateOneInput
  insulationStatementFile: FileUpdateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyUpdateindoorFeaturesInput
  outdoorFeatures: PropertyUpdateoutdoorFeaturesInput
  heatSources: PropertyUpdateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean
  owners: UserUpdateManyWithoutPropertiesInput
  creator: UserUpdateOneRequiredWithoutCreatedPropertiesInput
  images: FileUpdateManyWithoutPropertyImagesInput
  proofOfOwnership: FileUpdateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationUpdateManyWithoutPropertyInput
  leases: PropertyLeaseUpdateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityUpdateManyWithoutPropertyInput
  appraisals: RentalAppraisalUpdateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyUpdatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyUpdatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingUpdateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistUpdateOneWithoutPropertyInput
  inspections: InspectionUpdateManyWithoutPropertyInput
}

input PropertyUpdateWithoutImagesDataInput {
  placeId: String
  location: String
  locationLat: Float
  locationLng: Float
  titleType: PropertyTitleType
  bankDetails: BankDetailUpdateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int
  maximumOccupants: Int
  rent: Float
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationUpdateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int
  carportSpaces: Int
  offStreetSpaces: Int
  insulationProof: InsulationProof
  insulationForm: InsulationFormUpdateOneInput
  insulationStatementFile: FileUpdateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyUpdateindoorFeaturesInput
  outdoorFeatures: PropertyUpdateoutdoorFeaturesInput
  heatSources: PropertyUpdateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean
  owners: UserUpdateManyWithoutPropertiesInput
  creator: UserUpdateOneRequiredWithoutCreatedPropertiesInput
  proofOfOwnership: FileUpdateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationUpdateManyWithoutPropertyInput
  leases: PropertyLeaseUpdateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityUpdateManyWithoutPropertyInput
  appraisals: RentalAppraisalUpdateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyUpdatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyUpdatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingUpdateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistUpdateOneWithoutPropertyInput
  files: PropertyFilesUpdateOneWithoutPropertyInput
  inspections: InspectionUpdateManyWithoutPropertyInput
}

input PropertyUpdateWithoutInspectionsDataInput {
  placeId: String
  location: String
  locationLat: Float
  locationLng: Float
  titleType: PropertyTitleType
  bankDetails: BankDetailUpdateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int
  maximumOccupants: Int
  rent: Float
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationUpdateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int
  carportSpaces: Int
  offStreetSpaces: Int
  insulationProof: InsulationProof
  insulationForm: InsulationFormUpdateOneInput
  insulationStatementFile: FileUpdateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyUpdateindoorFeaturesInput
  outdoorFeatures: PropertyUpdateoutdoorFeaturesInput
  heatSources: PropertyUpdateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean
  owners: UserUpdateManyWithoutPropertiesInput
  creator: UserUpdateOneRequiredWithoutCreatedPropertiesInput
  images: FileUpdateManyWithoutPropertyImagesInput
  proofOfOwnership: FileUpdateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationUpdateManyWithoutPropertyInput
  leases: PropertyLeaseUpdateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityUpdateManyWithoutPropertyInput
  appraisals: RentalAppraisalUpdateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyUpdatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyUpdatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingUpdateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistUpdateOneWithoutPropertyInput
  files: PropertyFilesUpdateOneWithoutPropertyInput
}

input PropertyUpdateWithoutInsulationStatementFileDataInput {
  placeId: String
  location: String
  locationLat: Float
  locationLng: Float
  titleType: PropertyTitleType
  bankDetails: BankDetailUpdateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int
  maximumOccupants: Int
  rent: Float
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationUpdateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int
  carportSpaces: Int
  offStreetSpaces: Int
  insulationProof: InsulationProof
  insulationForm: InsulationFormUpdateOneInput
  indoorFeatures: PropertyUpdateindoorFeaturesInput
  outdoorFeatures: PropertyUpdateoutdoorFeaturesInput
  heatSources: PropertyUpdateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean
  owners: UserUpdateManyWithoutPropertiesInput
  creator: UserUpdateOneRequiredWithoutCreatedPropertiesInput
  images: FileUpdateManyWithoutPropertyImagesInput
  proofOfOwnership: FileUpdateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationUpdateManyWithoutPropertyInput
  leases: PropertyLeaseUpdateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityUpdateManyWithoutPropertyInput
  appraisals: RentalAppraisalUpdateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyUpdatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyUpdatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingUpdateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistUpdateOneWithoutPropertyInput
  files: PropertyFilesUpdateOneWithoutPropertyInput
  inspections: InspectionUpdateManyWithoutPropertyInput
}

input PropertyUpdateWithoutLeasesDataInput {
  placeId: String
  location: String
  locationLat: Float
  locationLng: Float
  titleType: PropertyTitleType
  bankDetails: BankDetailUpdateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int
  maximumOccupants: Int
  rent: Float
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationUpdateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int
  carportSpaces: Int
  offStreetSpaces: Int
  insulationProof: InsulationProof
  insulationForm: InsulationFormUpdateOneInput
  insulationStatementFile: FileUpdateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyUpdateindoorFeaturesInput
  outdoorFeatures: PropertyUpdateoutdoorFeaturesInput
  heatSources: PropertyUpdateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean
  owners: UserUpdateManyWithoutPropertiesInput
  creator: UserUpdateOneRequiredWithoutCreatedPropertiesInput
  images: FileUpdateManyWithoutPropertyImagesInput
  proofOfOwnership: FileUpdateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationUpdateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityUpdateManyWithoutPropertyInput
  appraisals: RentalAppraisalUpdateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyUpdatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyUpdatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingUpdateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistUpdateOneWithoutPropertyInput
  files: PropertyFilesUpdateOneWithoutPropertyInput
  inspections: InspectionUpdateManyWithoutPropertyInput
}

input PropertyUpdateWithoutOwnersDataInput {
  placeId: String
  location: String
  locationLat: Float
  locationLng: Float
  titleType: PropertyTitleType
  bankDetails: BankDetailUpdateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int
  maximumOccupants: Int
  rent: Float
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationUpdateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int
  carportSpaces: Int
  offStreetSpaces: Int
  insulationProof: InsulationProof
  insulationForm: InsulationFormUpdateOneInput
  insulationStatementFile: FileUpdateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyUpdateindoorFeaturesInput
  outdoorFeatures: PropertyUpdateoutdoorFeaturesInput
  heatSources: PropertyUpdateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean
  creator: UserUpdateOneRequiredWithoutCreatedPropertiesInput
  images: FileUpdateManyWithoutPropertyImagesInput
  proofOfOwnership: FileUpdateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationUpdateManyWithoutPropertyInput
  leases: PropertyLeaseUpdateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityUpdateManyWithoutPropertyInput
  appraisals: RentalAppraisalUpdateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyUpdatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyUpdatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingUpdateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistUpdateOneWithoutPropertyInput
  files: PropertyFilesUpdateOneWithoutPropertyInput
  inspections: InspectionUpdateManyWithoutPropertyInput
}

input PropertyUpdateWithoutProofOfOwnershipDataInput {
  placeId: String
  location: String
  locationLat: Float
  locationLng: Float
  titleType: PropertyTitleType
  bankDetails: BankDetailUpdateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int
  maximumOccupants: Int
  rent: Float
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationUpdateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int
  carportSpaces: Int
  offStreetSpaces: Int
  insulationProof: InsulationProof
  insulationForm: InsulationFormUpdateOneInput
  insulationStatementFile: FileUpdateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyUpdateindoorFeaturesInput
  outdoorFeatures: PropertyUpdateoutdoorFeaturesInput
  heatSources: PropertyUpdateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean
  owners: UserUpdateManyWithoutPropertiesInput
  creator: UserUpdateOneRequiredWithoutCreatedPropertiesInput
  images: FileUpdateManyWithoutPropertyImagesInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationUpdateManyWithoutPropertyInput
  leases: PropertyLeaseUpdateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityUpdateManyWithoutPropertyInput
  appraisals: RentalAppraisalUpdateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyUpdatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyUpdatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingUpdateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistUpdateOneWithoutPropertyInput
  files: PropertyFilesUpdateOneWithoutPropertyInput
  inspections: InspectionUpdateManyWithoutPropertyInput
}

input PropertyUpdateWithoutRehouserAssistDataInput {
  placeId: String
  location: String
  locationLat: Float
  locationLng: Float
  titleType: PropertyTitleType
  bankDetails: BankDetailUpdateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int
  maximumOccupants: Int
  rent: Float
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationUpdateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int
  carportSpaces: Int
  offStreetSpaces: Int
  insulationProof: InsulationProof
  insulationForm: InsulationFormUpdateOneInput
  insulationStatementFile: FileUpdateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyUpdateindoorFeaturesInput
  outdoorFeatures: PropertyUpdateoutdoorFeaturesInput
  heatSources: PropertyUpdateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean
  owners: UserUpdateManyWithoutPropertiesInput
  creator: UserUpdateOneRequiredWithoutCreatedPropertiesInput
  images: FileUpdateManyWithoutPropertyImagesInput
  proofOfOwnership: FileUpdateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationUpdateManyWithoutPropertyInput
  leases: PropertyLeaseUpdateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityUpdateManyWithoutPropertyInput
  appraisals: RentalAppraisalUpdateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyUpdatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyUpdatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingUpdateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  files: PropertyFilesUpdateOneWithoutPropertyInput
  inspections: InspectionUpdateManyWithoutPropertyInput
}

input PropertyUpdateWithoutRentalApplicationsDataInput {
  placeId: String
  location: String
  locationLat: Float
  locationLng: Float
  titleType: PropertyTitleType
  bankDetails: BankDetailUpdateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int
  maximumOccupants: Int
  rent: Float
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationUpdateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int
  carportSpaces: Int
  offStreetSpaces: Int
  insulationProof: InsulationProof
  insulationForm: InsulationFormUpdateOneInput
  insulationStatementFile: FileUpdateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyUpdateindoorFeaturesInput
  outdoorFeatures: PropertyUpdateoutdoorFeaturesInput
  heatSources: PropertyUpdateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean
  owners: UserUpdateManyWithoutPropertiesInput
  creator: UserUpdateOneRequiredWithoutCreatedPropertiesInput
  images: FileUpdateManyWithoutPropertyImagesInput
  proofOfOwnership: FileUpdateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  leases: PropertyLeaseUpdateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityUpdateManyWithoutPropertyInput
  appraisals: RentalAppraisalUpdateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyUpdatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyUpdatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  viewings: ViewingUpdateManyWithoutPropertyInput
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistUpdateOneWithoutPropertyInput
  files: PropertyFilesUpdateOneWithoutPropertyInput
  inspections: InspectionUpdateManyWithoutPropertyInput
}

input PropertyUpdateWithoutViewingsDataInput {
  placeId: String
  location: String
  locationLat: Float
  locationLng: Float
  titleType: PropertyTitleType
  bankDetails: BankDetailUpdateOneWithoutPropertyInput
  type: PropertyType
  fixedLength: TenancyFixedLength
  headline: String
  rooms: Int
  maximumOccupants: Int
  rent: Float
  lowestRoomPrice: Float
  highestRoomPrice: Float
  useAdvancedRent: Boolean
  accommodation: AccommodationUpdateManyWithoutPropertyInput
  bathrooms: Int
  garageSpaces: Int
  carportSpaces: Int
  offStreetSpaces: Int
  insulationProof: InsulationProof
  insulationForm: InsulationFormUpdateOneInput
  insulationStatementFile: FileUpdateOneWithoutPropertyInsulationFileInput
  indoorFeatures: PropertyUpdateindoorFeaturesInput
  outdoorFeatures: PropertyUpdateoutdoorFeaturesInput
  heatSources: PropertyUpdateheatSourcesInput
  moveInDate: DateTime
  expiryDate: DateTime
  leaseLengthInMonths: Int
  onTheMarket: Boolean
  owners: UserUpdateManyWithoutPropertiesInput
  creator: UserUpdateOneRequiredWithoutCreatedPropertiesInput
  images: FileUpdateManyWithoutPropertyImagesInput
  proofOfOwnership: FileUpdateOneWithoutPropertyOwnershipProofInput
  acceptedTerms: Boolean
  rentalApplications: RentalApplicationUpdateManyWithoutPropertyInput
  leases: PropertyLeaseUpdateManyWithoutPropertyInput
  isLeased: Boolean
  lastLeaseId: String
  leaseExpiryDate: DateTime
  rehouserStamp: Boolean
  activity: ActivityUpdateManyWithoutPropertyInput
  appraisals: RentalAppraisalUpdateManyWithoutPropertyInput
  tenancyType: TenancyType
  petsAllowed: Boolean
  pets: PropertyUpdatepetsInput
  manholeLocation: String
  gardenToMaintain: Boolean
  gardenResponsible: PartyResponsible
  maintenanceResponsible: PartyResponsible
  chattels: PropertyUpdatechattelsInput
  landlordProtectionCover: Boolean
  freeGlassCover: Boolean
  workingAlarms: Boolean
  inHallway3mOfEachBedroom: Boolean
  tenYearPhotoelectricAlarms: Boolean
  alarmsEachLevel: Boolean
  rehouserHandlesBills: Boolean
  rehouserAssist: PropertyAssistUpdateOneWithoutPropertyInput
  files: PropertyFilesUpdateOneWithoutPropertyInput
  inspections: InspectionUpdateManyWithoutPropertyInput
}

input PropertyUpdateWithWhereUniqueWithoutCreatorInput {
  where: PropertyWhereUniqueInput!
  data: PropertyUpdateWithoutCreatorDataInput!
}

input PropertyUpdateWithWhereUniqueWithoutOwnersInput {
  where: PropertyWhereUniqueInput!
  data: PropertyUpdateWithoutOwnersDataInput!
}

input PropertyUpsertWithoutAccommodationInput {
  update: PropertyUpdateWithoutAccommodationDataInput!
  create: PropertyCreateWithoutAccommodationInput!
}

input PropertyUpsertWithoutActivityInput {
  update: PropertyUpdateWithoutActivityDataInput!
  create: PropertyCreateWithoutActivityInput!
}

input PropertyUpsertWithoutAppraisalsInput {
  update: PropertyUpdateWithoutAppraisalsDataInput!
  create: PropertyCreateWithoutAppraisalsInput!
}

input PropertyUpsertWithoutBankDetailsInput {
  update: PropertyUpdateWithoutBankDetailsDataInput!
  create: PropertyCreateWithoutBankDetailsInput!
}

input PropertyUpsertWithoutFilesInput {
  update: PropertyUpdateWithoutFilesDataInput!
  create: PropertyCreateWithoutFilesInput!
}

input PropertyUpsertWithoutImagesInput {
  update: PropertyUpdateWithoutImagesDataInput!
  create: PropertyCreateWithoutImagesInput!
}

input PropertyUpsertWithoutInspectionsInput {
  update: PropertyUpdateWithoutInspectionsDataInput!
  create: PropertyCreateWithoutInspectionsInput!
}

input PropertyUpsertWithoutInsulationStatementFileInput {
  update: PropertyUpdateWithoutInsulationStatementFileDataInput!
  create: PropertyCreateWithoutInsulationStatementFileInput!
}

input PropertyUpsertWithoutLeasesInput {
  update: PropertyUpdateWithoutLeasesDataInput!
  create: PropertyCreateWithoutLeasesInput!
}

input PropertyUpsertWithoutProofOfOwnershipInput {
  update: PropertyUpdateWithoutProofOfOwnershipDataInput!
  create: PropertyCreateWithoutProofOfOwnershipInput!
}

input PropertyUpsertWithoutRehouserAssistInput {
  update: PropertyUpdateWithoutRehouserAssistDataInput!
  create: PropertyCreateWithoutRehouserAssistInput!
}

input PropertyUpsertWithoutRentalApplicationsInput {
  update: PropertyUpdateWithoutRentalApplicationsDataInput!
  create: PropertyCreateWithoutRentalApplicationsInput!
}

input PropertyUpsertWithoutViewingsInput {
  update: PropertyUpdateWithoutViewingsDataInput!
  create: PropertyCreateWithoutViewingsInput!
}

input PropertyUpsertWithWhereUniqueWithoutCreatorInput {
  where: PropertyWhereUniqueInput!
  update: PropertyUpdateWithoutCreatorDataInput!
  create: PropertyCreateWithoutCreatorInput!
}

input PropertyUpsertWithWhereUniqueWithoutOwnersInput {
  where: PropertyWhereUniqueInput!
  update: PropertyUpdateWithoutOwnersDataInput!
  create: PropertyCreateWithoutOwnersInput!
}

input PropertyWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  placeId: String
  placeId_not: String
  placeId_in: [String!]
  placeId_not_in: [String!]
  placeId_lt: String
  placeId_lte: String
  placeId_gt: String
  placeId_gte: String
  placeId_contains: String
  placeId_not_contains: String
  placeId_starts_with: String
  placeId_not_starts_with: String
  placeId_ends_with: String
  placeId_not_ends_with: String
  location: String
  location_not: String
  location_in: [String!]
  location_not_in: [String!]
  location_lt: String
  location_lte: String
  location_gt: String
  location_gte: String
  location_contains: String
  location_not_contains: String
  location_starts_with: String
  location_not_starts_with: String
  location_ends_with: String
  location_not_ends_with: String
  locationLat: Float
  locationLat_not: Float
  locationLat_in: [Float!]
  locationLat_not_in: [Float!]
  locationLat_lt: Float
  locationLat_lte: Float
  locationLat_gt: Float
  locationLat_gte: Float
  locationLng: Float
  locationLng_not: Float
  locationLng_in: [Float!]
  locationLng_not_in: [Float!]
  locationLng_lt: Float
  locationLng_lte: Float
  locationLng_gt: Float
  locationLng_gte: Float
  titleType: PropertyTitleType
  titleType_not: PropertyTitleType
  titleType_in: [PropertyTitleType!]
  titleType_not_in: [PropertyTitleType!]
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  bankDetails: BankDetailWhereInput
  type: PropertyType
  type_not: PropertyType
  type_in: [PropertyType!]
  type_not_in: [PropertyType!]
  fixedLength: TenancyFixedLength
  fixedLength_not: TenancyFixedLength
  fixedLength_in: [TenancyFixedLength!]
  fixedLength_not_in: [TenancyFixedLength!]
  headline: String
  headline_not: String
  headline_in: [String!]
  headline_not_in: [String!]
  headline_lt: String
  headline_lte: String
  headline_gt: String
  headline_gte: String
  headline_contains: String
  headline_not_contains: String
  headline_starts_with: String
  headline_not_starts_with: String
  headline_ends_with: String
  headline_not_ends_with: String
  rooms: Int
  rooms_not: Int
  rooms_in: [Int!]
  rooms_not_in: [Int!]
  rooms_lt: Int
  rooms_lte: Int
  rooms_gt: Int
  rooms_gte: Int
  maximumOccupants: Int
  maximumOccupants_not: Int
  maximumOccupants_in: [Int!]
  maximumOccupants_not_in: [Int!]
  maximumOccupants_lt: Int
  maximumOccupants_lte: Int
  maximumOccupants_gt: Int
  maximumOccupants_gte: Int
  rent: Float
  rent_not: Float
  rent_in: [Float!]
  rent_not_in: [Float!]
  rent_lt: Float
  rent_lte: Float
  rent_gt: Float
  rent_gte: Float
  lowestRoomPrice: Float
  lowestRoomPrice_not: Float
  lowestRoomPrice_in: [Float!]
  lowestRoomPrice_not_in: [Float!]
  lowestRoomPrice_lt: Float
  lowestRoomPrice_lte: Float
  lowestRoomPrice_gt: Float
  lowestRoomPrice_gte: Float
  highestRoomPrice: Float
  highestRoomPrice_not: Float
  highestRoomPrice_in: [Float!]
  highestRoomPrice_not_in: [Float!]
  highestRoomPrice_lt: Float
  highestRoomPrice_lte: Float
  highestRoomPrice_gt: Float
  highestRoomPrice_gte: Float
  useAdvancedRent: Boolean
  useAdvancedRent_not: Boolean
  accommodation_every: AccommodationWhereInput
  accommodation_some: AccommodationWhereInput
  accommodation_none: AccommodationWhereInput
  bathrooms: Int
  bathrooms_not: Int
  bathrooms_in: [Int!]
  bathrooms_not_in: [Int!]
  bathrooms_lt: Int
  bathrooms_lte: Int
  bathrooms_gt: Int
  bathrooms_gte: Int
  garageSpaces: Int
  garageSpaces_not: Int
  garageSpaces_in: [Int!]
  garageSpaces_not_in: [Int!]
  garageSpaces_lt: Int
  garageSpaces_lte: Int
  garageSpaces_gt: Int
  garageSpaces_gte: Int
  carportSpaces: Int
  carportSpaces_not: Int
  carportSpaces_in: [Int!]
  carportSpaces_not_in: [Int!]
  carportSpaces_lt: Int
  carportSpaces_lte: Int
  carportSpaces_gt: Int
  carportSpaces_gte: Int
  offStreetSpaces: Int
  offStreetSpaces_not: Int
  offStreetSpaces_in: [Int!]
  offStreetSpaces_not_in: [Int!]
  offStreetSpaces_lt: Int
  offStreetSpaces_lte: Int
  offStreetSpaces_gt: Int
  offStreetSpaces_gte: Int
  insulationProof: InsulationProof
  insulationProof_not: InsulationProof
  insulationProof_in: [InsulationProof!]
  insulationProof_not_in: [InsulationProof!]
  insulationForm: InsulationFormWhereInput
  insulationStatementFile: FileWhereInput
  moveInDate: DateTime
  moveInDate_not: DateTime
  moveInDate_in: [DateTime!]
  moveInDate_not_in: [DateTime!]
  moveInDate_lt: DateTime
  moveInDate_lte: DateTime
  moveInDate_gt: DateTime
  moveInDate_gte: DateTime
  expiryDate: DateTime
  expiryDate_not: DateTime
  expiryDate_in: [DateTime!]
  expiryDate_not_in: [DateTime!]
  expiryDate_lt: DateTime
  expiryDate_lte: DateTime
  expiryDate_gt: DateTime
  expiryDate_gte: DateTime
  leaseLengthInMonths: Int
  leaseLengthInMonths_not: Int
  leaseLengthInMonths_in: [Int!]
  leaseLengthInMonths_not_in: [Int!]
  leaseLengthInMonths_lt: Int
  leaseLengthInMonths_lte: Int
  leaseLengthInMonths_gt: Int
  leaseLengthInMonths_gte: Int
  onTheMarket: Boolean
  onTheMarket_not: Boolean
  owners_every: UserWhereInput
  owners_some: UserWhereInput
  owners_none: UserWhereInput
  creator: UserWhereInput
  images_every: FileWhereInput
  images_some: FileWhereInput
  images_none: FileWhereInput
  proofOfOwnership: FileWhereInput
  acceptedTerms: Boolean
  acceptedTerms_not: Boolean
  rentalApplications_every: RentalApplicationWhereInput
  rentalApplications_some: RentalApplicationWhereInput
  rentalApplications_none: RentalApplicationWhereInput
  leases_every: PropertyLeaseWhereInput
  leases_some: PropertyLeaseWhereInput
  leases_none: PropertyLeaseWhereInput
  isLeased: Boolean
  isLeased_not: Boolean
  lastLeaseId: String
  lastLeaseId_not: String
  lastLeaseId_in: [String!]
  lastLeaseId_not_in: [String!]
  lastLeaseId_lt: String
  lastLeaseId_lte: String
  lastLeaseId_gt: String
  lastLeaseId_gte: String
  lastLeaseId_contains: String
  lastLeaseId_not_contains: String
  lastLeaseId_starts_with: String
  lastLeaseId_not_starts_with: String
  lastLeaseId_ends_with: String
  lastLeaseId_not_ends_with: String
  leaseExpiryDate: DateTime
  leaseExpiryDate_not: DateTime
  leaseExpiryDate_in: [DateTime!]
  leaseExpiryDate_not_in: [DateTime!]
  leaseExpiryDate_lt: DateTime
  leaseExpiryDate_lte: DateTime
  leaseExpiryDate_gt: DateTime
  leaseExpiryDate_gte: DateTime
  rehouserStamp: Boolean
  rehouserStamp_not: Boolean
  activity_every: ActivityWhereInput
  activity_some: ActivityWhereInput
  activity_none: ActivityWhereInput
  appraisals_every: RentalAppraisalWhereInput
  appraisals_some: RentalAppraisalWhereInput
  appraisals_none: RentalAppraisalWhereInput
  tenancyType: TenancyType
  tenancyType_not: TenancyType
  tenancyType_in: [TenancyType!]
  tenancyType_not_in: [TenancyType!]
  petsAllowed: Boolean
  petsAllowed_not: Boolean
  manholeLocation: String
  manholeLocation_not: String
  manholeLocation_in: [String!]
  manholeLocation_not_in: [String!]
  manholeLocation_lt: String
  manholeLocation_lte: String
  manholeLocation_gt: String
  manholeLocation_gte: String
  manholeLocation_contains: String
  manholeLocation_not_contains: String
  manholeLocation_starts_with: String
  manholeLocation_not_starts_with: String
  manholeLocation_ends_with: String
  manholeLocation_not_ends_with: String
  gardenToMaintain: Boolean
  gardenToMaintain_not: Boolean
  gardenResponsible: PartyResponsible
  gardenResponsible_not: PartyResponsible
  gardenResponsible_in: [PartyResponsible!]
  gardenResponsible_not_in: [PartyResponsible!]
  maintenanceResponsible: PartyResponsible
  maintenanceResponsible_not: PartyResponsible
  maintenanceResponsible_in: [PartyResponsible!]
  maintenanceResponsible_not_in: [PartyResponsible!]
  landlordProtectionCover: Boolean
  landlordProtectionCover_not: Boolean
  freeGlassCover: Boolean
  freeGlassCover_not: Boolean
  workingAlarms: Boolean
  workingAlarms_not: Boolean
  inHallway3mOfEachBedroom: Boolean
  inHallway3mOfEachBedroom_not: Boolean
  tenYearPhotoelectricAlarms: Boolean
  tenYearPhotoelectricAlarms_not: Boolean
  alarmsEachLevel: Boolean
  alarmsEachLevel_not: Boolean
  viewings_every: ViewingWhereInput
  viewings_some: ViewingWhereInput
  viewings_none: ViewingWhereInput
  rehouserHandlesBills: Boolean
  rehouserHandlesBills_not: Boolean
  rehouserAssist: PropertyAssistWhereInput
  files: PropertyFilesWhereInput
  inspections_every: InspectionWhereInput
  inspections_some: InspectionWhereInput
  inspections_none: InspectionWhereInput
  AND: [PropertyWhereInput!]
  OR: [PropertyWhereInput!]
  NOT: [PropertyWhereInput!]
}

input PropertyWhereUniqueInput {
  id: ID
  placeId: String
}

type Query {
  accommodation(where: AccommodationWhereUniqueInput!): Accommodation
  accommodations(where: AccommodationWhereInput, orderBy: AccommodationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Accommodation]!
  accommodationsConnection(where: AccommodationWhereInput, orderBy: AccommodationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AccommodationConnection!
  activity(where: ActivityWhereUniqueInput!): Activity
  activities(where: ActivityWhereInput, orderBy: ActivityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Activity]!
  activitiesConnection(where: ActivityWhereInput, orderBy: ActivityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ActivityConnection!
  address(where: AddressWhereUniqueInput!): Address
  addresses(where: AddressWhereInput, orderBy: AddressOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Address]!
  addressesConnection(where: AddressWhereInput, orderBy: AddressOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AddressConnection!
  adminSetting(where: AdminSettingWhereUniqueInput!): AdminSetting
  adminSettings(where: AdminSettingWhereInput, orderBy: AdminSettingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AdminSetting]!
  adminSettingsConnection(where: AdminSettingWhereInput, orderBy: AdminSettingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AdminSettingConnection!
  bankDetail(where: BankDetailWhereUniqueInput!): BankDetail
  bankDetails(where: BankDetailWhereInput, orderBy: BankDetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [BankDetail]!
  bankDetailsConnection(where: BankDetailWhereInput, orderBy: BankDetailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BankDetailConnection!
  charge(where: ChargeWhereUniqueInput!): Charge
  charges(where: ChargeWhereInput, orderBy: ChargeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Charge]!
  chargesConnection(where: ChargeWhereInput, orderBy: ChargeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChargeConnection!
  chat(where: ChatWhereUniqueInput!): Chat
  chats(where: ChatWhereInput, orderBy: ChatOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Chat]!
  chatsConnection(where: ChatWhereInput, orderBy: ChatOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChatConnection!
  creditCard(where: CreditCardWhereUniqueInput!): CreditCard
  creditCards(where: CreditCardWhereInput, orderBy: CreditCardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CreditCard]!
  creditCardsConnection(where: CreditCardWhereInput, orderBy: CreditCardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CreditCardConnection!
  file(where: FileWhereUniqueInput!): File
  files(where: FileWhereInput, orderBy: FileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [File]!
  filesConnection(where: FileWhereInput, orderBy: FileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FileConnection!
  friendRequest(where: FriendRequestWhereUniqueInput!): FriendRequest
  friendRequests(where: FriendRequestWhereInput, orderBy: FriendRequestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FriendRequest]!
  friendRequestsConnection(where: FriendRequestWhereInput, orderBy: FriendRequestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FriendRequestConnection!
  inspection(where: InspectionWhereUniqueInput!): Inspection
  inspections(where: InspectionWhereInput, orderBy: InspectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Inspection]!
  inspectionsConnection(where: InspectionWhereInput, orderBy: InspectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): InspectionConnection!
  insulationForm(where: InsulationFormWhereUniqueInput!): InsulationForm
  insulationForms(where: InsulationFormWhereInput, orderBy: InsulationFormOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [InsulationForm]!
  insulationFormsConnection(where: InsulationFormWhereInput, orderBy: InsulationFormOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): InsulationFormConnection!
  lessee(where: LesseeWhereUniqueInput!): Lessee
  lessees(where: LesseeWhereInput, orderBy: LesseeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Lessee]!
  lesseesConnection(where: LesseeWhereInput, orderBy: LesseeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LesseeConnection!
  lessor(where: LessorWhereUniqueInput!): Lessor
  lessors(where: LessorWhereInput, orderBy: LessorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Lessor]!
  lessorsConnection(where: LessorWhereInput, orderBy: LessorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LessorConnection!
  message(where: MessageWhereUniqueInput!): Message
  messages(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Message]!
  messagesConnection(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): MessageConnection!
  payment(where: PaymentWhereUniqueInput!): Payment
  payments(where: PaymentWhereInput, orderBy: PaymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Payment]!
  paymentsConnection(where: PaymentWhereInput, orderBy: PaymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PaymentConnection!
  preTenancyForm(where: PreTenancyFormWhereUniqueInput!): PreTenancyForm
  preTenancyForms(where: PreTenancyFormWhereInput, orderBy: PreTenancyFormOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PreTenancyForm]!
  preTenancyFormsConnection(where: PreTenancyFormWhereInput, orderBy: PreTenancyFormOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PreTenancyFormConnection!
  property(where: PropertyWhereUniqueInput!): Property
  properties(where: PropertyWhereInput, orderBy: PropertyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Property]!
  propertiesConnection(where: PropertyWhereInput, orderBy: PropertyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PropertyConnection!
  propertyAdvertisement(where: PropertyAdvertisementWhereUniqueInput!): PropertyAdvertisement
  propertyAdvertisements(where: PropertyAdvertisementWhereInput, orderBy: PropertyAdvertisementOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PropertyAdvertisement]!
  propertyAdvertisementsConnection(where: PropertyAdvertisementWhereInput, orderBy: PropertyAdvertisementOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PropertyAdvertisementConnection!
  propertyAssist(where: PropertyAssistWhereUniqueInput!): PropertyAssist
  propertyAssists(where: PropertyAssistWhereInput, orderBy: PropertyAssistOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PropertyAssist]!
  propertyAssistsConnection(where: PropertyAssistWhereInput, orderBy: PropertyAssistOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PropertyAssistConnection!
  propertyFiles(where: PropertyFilesWhereUniqueInput!): PropertyFiles
  propertyFileses(where: PropertyFilesWhereInput, orderBy: PropertyFilesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PropertyFiles]!
  propertyFilesesConnection(where: PropertyFilesWhereInput, orderBy: PropertyFilesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PropertyFilesConnection!
  propertyLease(where: PropertyLeaseWhereUniqueInput!): PropertyLease
  propertyLeases(where: PropertyLeaseWhereInput, orderBy: PropertyLeaseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PropertyLease]!
  propertyLeasesConnection(where: PropertyLeaseWhereInput, orderBy: PropertyLeaseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PropertyLeaseConnection!
  rentalApplication(where: RentalApplicationWhereUniqueInput!): RentalApplication
  rentalApplications(where: RentalApplicationWhereInput, orderBy: RentalApplicationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [RentalApplication]!
  rentalApplicationsConnection(where: RentalApplicationWhereInput, orderBy: RentalApplicationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RentalApplicationConnection!
  rentalAppraisal(where: RentalAppraisalWhereUniqueInput!): RentalAppraisal
  rentalAppraisals(where: RentalAppraisalWhereInput, orderBy: RentalAppraisalOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [RentalAppraisal]!
  rentalAppraisalsConnection(where: RentalAppraisalWhereInput, orderBy: RentalAppraisalOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RentalAppraisalConnection!
  rentalGroupApplicant(where: RentalGroupApplicantWhereUniqueInput!): RentalGroupApplicant
  rentalGroupApplicants(where: RentalGroupApplicantWhereInput, orderBy: RentalGroupApplicantOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [RentalGroupApplicant]!
  rentalGroupApplicantsConnection(where: RentalGroupApplicantWhereInput, orderBy: RentalGroupApplicantOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RentalGroupApplicantConnection!
  seen(where: SeenWhereUniqueInput!): Seen
  seens(where: SeenWhereInput, orderBy: SeenOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Seen]!
  seensConnection(where: SeenWhereInput, orderBy: SeenOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SeenConnection!
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  viewing(where: ViewingWhereUniqueInput!): Viewing
  viewings(where: ViewingWhereInput, orderBy: ViewingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Viewing]!
  viewingsConnection(where: ViewingWhereInput, orderBy: ViewingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ViewingConnection!
  wallet(where: WalletWhereUniqueInput!): Wallet
  wallets(where: WalletWhereInput, orderBy: WalletOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Wallet]!
  walletsConnection(where: WalletWhereInput, orderBy: WalletOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): WalletConnection!
  node(id: ID!): Node
}

enum RecurringType {
  ONCE
  DAILY
  WEEKLY
}

type RentalApplication {
  id: ID!
  updatedAt: DateTime!
  createdAt: DateTime!
  owner: User!
  title: String
  detailsStepComplete: Boolean
  stage: ApplicationStage!
  leaseId: String
  chatId: String
  visibility: VisibilityLevel
  finalised: Boolean
  property: Property!
  applicants(where: RentalGroupApplicantWhereInput, orderBy: RentalGroupApplicantOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [RentalGroupApplicant!]
}

type RentalApplicationConnection {
  pageInfo: PageInfo!
  edges: [RentalApplicationEdge]!
  aggregate: AggregateRentalApplication!
}

input RentalApplicationCreateInput {
  id: ID
  owner: UserCreateOneInput!
  title: String
  detailsStepComplete: Boolean
  stage: ApplicationStage!
  leaseId: String
  chatId: String
  visibility: VisibilityLevel
  finalised: Boolean
  property: PropertyCreateOneWithoutRentalApplicationsInput!
  applicants: RentalGroupApplicantCreateManyWithoutApplicationInput
}

input RentalApplicationCreateManyWithoutPropertyInput {
  create: [RentalApplicationCreateWithoutPropertyInput!]
  connect: [RentalApplicationWhereUniqueInput!]
}

input RentalApplicationCreateOneWithoutApplicantsInput {
  create: RentalApplicationCreateWithoutApplicantsInput
  connect: RentalApplicationWhereUniqueInput
}

input RentalApplicationCreateWithoutApplicantsInput {
  id: ID
  owner: UserCreateOneInput!
  title: String
  detailsStepComplete: Boolean
  stage: ApplicationStage!
  leaseId: String
  chatId: String
  visibility: VisibilityLevel
  finalised: Boolean
  property: PropertyCreateOneWithoutRentalApplicationsInput!
}

input RentalApplicationCreateWithoutPropertyInput {
  id: ID
  owner: UserCreateOneInput!
  title: String
  detailsStepComplete: Boolean
  stage: ApplicationStage!
  leaseId: String
  chatId: String
  visibility: VisibilityLevel
  finalised: Boolean
  applicants: RentalGroupApplicantCreateManyWithoutApplicationInput
}

type RentalApplicationEdge {
  node: RentalApplication!
  cursor: String!
}

enum RentalApplicationOrderByInput {
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  title_ASC
  title_DESC
  detailsStepComplete_ASC
  detailsStepComplete_DESC
  stage_ASC
  stage_DESC
  leaseId_ASC
  leaseId_DESC
  chatId_ASC
  chatId_DESC
  visibility_ASC
  visibility_DESC
  finalised_ASC
  finalised_DESC
}

type RentalApplicationPreviousValues {
  id: ID!
  updatedAt: DateTime!
  createdAt: DateTime!
  title: String
  detailsStepComplete: Boolean
  stage: ApplicationStage!
  leaseId: String
  chatId: String
  visibility: VisibilityLevel
  finalised: Boolean
}

input RentalApplicationScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  detailsStepComplete: Boolean
  detailsStepComplete_not: Boolean
  stage: ApplicationStage
  stage_not: ApplicationStage
  stage_in: [ApplicationStage!]
  stage_not_in: [ApplicationStage!]
  leaseId: String
  leaseId_not: String
  leaseId_in: [String!]
  leaseId_not_in: [String!]
  leaseId_lt: String
  leaseId_lte: String
  leaseId_gt: String
  leaseId_gte: String
  leaseId_contains: String
  leaseId_not_contains: String
  leaseId_starts_with: String
  leaseId_not_starts_with: String
  leaseId_ends_with: String
  leaseId_not_ends_with: String
  chatId: String
  chatId_not: String
  chatId_in: [String!]
  chatId_not_in: [String!]
  chatId_lt: String
  chatId_lte: String
  chatId_gt: String
  chatId_gte: String
  chatId_contains: String
  chatId_not_contains: String
  chatId_starts_with: String
  chatId_not_starts_with: String
  chatId_ends_with: String
  chatId_not_ends_with: String
  visibility: VisibilityLevel
  visibility_not: VisibilityLevel
  visibility_in: [VisibilityLevel!]
  visibility_not_in: [VisibilityLevel!]
  finalised: Boolean
  finalised_not: Boolean
  AND: [RentalApplicationScalarWhereInput!]
  OR: [RentalApplicationScalarWhereInput!]
  NOT: [RentalApplicationScalarWhereInput!]
}

type RentalApplicationSubscriptionPayload {
  mutation: MutationType!
  node: RentalApplication
  updatedFields: [String!]
  previousValues: RentalApplicationPreviousValues
}

input RentalApplicationSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: RentalApplicationWhereInput
  AND: [RentalApplicationSubscriptionWhereInput!]
  OR: [RentalApplicationSubscriptionWhereInput!]
  NOT: [RentalApplicationSubscriptionWhereInput!]
}

input RentalApplicationUpdateInput {
  owner: UserUpdateOneRequiredInput
  title: String
  detailsStepComplete: Boolean
  stage: ApplicationStage
  leaseId: String
  chatId: String
  visibility: VisibilityLevel
  finalised: Boolean
  property: PropertyUpdateOneRequiredWithoutRentalApplicationsInput
  applicants: RentalGroupApplicantUpdateManyWithoutApplicationInput
}

input RentalApplicationUpdateManyDataInput {
  title: String
  detailsStepComplete: Boolean
  stage: ApplicationStage
  leaseId: String
  chatId: String
  visibility: VisibilityLevel
  finalised: Boolean
}

input RentalApplicationUpdateManyMutationInput {
  title: String
  detailsStepComplete: Boolean
  stage: ApplicationStage
  leaseId: String
  chatId: String
  visibility: VisibilityLevel
  finalised: Boolean
}

input RentalApplicationUpdateManyWithoutPropertyInput {
  create: [RentalApplicationCreateWithoutPropertyInput!]
  delete: [RentalApplicationWhereUniqueInput!]
  connect: [RentalApplicationWhereUniqueInput!]
  set: [RentalApplicationWhereUniqueInput!]
  disconnect: [RentalApplicationWhereUniqueInput!]
  update: [RentalApplicationUpdateWithWhereUniqueWithoutPropertyInput!]
  upsert: [RentalApplicationUpsertWithWhereUniqueWithoutPropertyInput!]
  deleteMany: [RentalApplicationScalarWhereInput!]
  updateMany: [RentalApplicationUpdateManyWithWhereNestedInput!]
}

input RentalApplicationUpdateManyWithWhereNestedInput {
  where: RentalApplicationScalarWhereInput!
  data: RentalApplicationUpdateManyDataInput!
}

input RentalApplicationUpdateOneWithoutApplicantsInput {
  create: RentalApplicationCreateWithoutApplicantsInput
  update: RentalApplicationUpdateWithoutApplicantsDataInput
  upsert: RentalApplicationUpsertWithoutApplicantsInput
  delete: Boolean
  disconnect: Boolean
  connect: RentalApplicationWhereUniqueInput
}

input RentalApplicationUpdateWithoutApplicantsDataInput {
  owner: UserUpdateOneRequiredInput
  title: String
  detailsStepComplete: Boolean
  stage: ApplicationStage
  leaseId: String
  chatId: String
  visibility: VisibilityLevel
  finalised: Boolean
  property: PropertyUpdateOneRequiredWithoutRentalApplicationsInput
}

input RentalApplicationUpdateWithoutPropertyDataInput {
  owner: UserUpdateOneRequiredInput
  title: String
  detailsStepComplete: Boolean
  stage: ApplicationStage
  leaseId: String
  chatId: String
  visibility: VisibilityLevel
  finalised: Boolean
  applicants: RentalGroupApplicantUpdateManyWithoutApplicationInput
}

input RentalApplicationUpdateWithWhereUniqueWithoutPropertyInput {
  where: RentalApplicationWhereUniqueInput!
  data: RentalApplicationUpdateWithoutPropertyDataInput!
}

input RentalApplicationUpsertWithoutApplicantsInput {
  update: RentalApplicationUpdateWithoutApplicantsDataInput!
  create: RentalApplicationCreateWithoutApplicantsInput!
}

input RentalApplicationUpsertWithWhereUniqueWithoutPropertyInput {
  where: RentalApplicationWhereUniqueInput!
  update: RentalApplicationUpdateWithoutPropertyDataInput!
  create: RentalApplicationCreateWithoutPropertyInput!
}

input RentalApplicationWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  owner: UserWhereInput
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  detailsStepComplete: Boolean
  detailsStepComplete_not: Boolean
  stage: ApplicationStage
  stage_not: ApplicationStage
  stage_in: [ApplicationStage!]
  stage_not_in: [ApplicationStage!]
  leaseId: String
  leaseId_not: String
  leaseId_in: [String!]
  leaseId_not_in: [String!]
  leaseId_lt: String
  leaseId_lte: String
  leaseId_gt: String
  leaseId_gte: String
  leaseId_contains: String
  leaseId_not_contains: String
  leaseId_starts_with: String
  leaseId_not_starts_with: String
  leaseId_ends_with: String
  leaseId_not_ends_with: String
  chatId: String
  chatId_not: String
  chatId_in: [String!]
  chatId_not_in: [String!]
  chatId_lt: String
  chatId_lte: String
  chatId_gt: String
  chatId_gte: String
  chatId_contains: String
  chatId_not_contains: String
  chatId_starts_with: String
  chatId_not_starts_with: String
  chatId_ends_with: String
  chatId_not_ends_with: String
  visibility: VisibilityLevel
  visibility_not: VisibilityLevel
  visibility_in: [VisibilityLevel!]
  visibility_not_in: [VisibilityLevel!]
  finalised: Boolean
  finalised_not: Boolean
  property: PropertyWhereInput
  applicants_every: RentalGroupApplicantWhereInput
  applicants_some: RentalGroupApplicantWhereInput
  applicants_none: RentalGroupApplicantWhereInput
  AND: [RentalApplicationWhereInput!]
  OR: [RentalApplicationWhereInput!]
  NOT: [RentalApplicationWhereInput!]
}

input RentalApplicationWhereUniqueInput {
  id: ID
}

type RentalAppraisal {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  requestedBy: User!
  placeId: String!
  location: String!
  locationLat: Float!
  locationLng: Float!
  rooms: Int!
  bathrooms: Int!
  garageSpaces: Int!
  heatSources: [HeatSource!]!
  rent: Float
  rentValueAccepted: Boolean
  acceptTerms: Boolean
  property: Property
}

type RentalAppraisalConnection {
  pageInfo: PageInfo!
  edges: [RentalAppraisalEdge]!
  aggregate: AggregateRentalAppraisal!
}

input RentalAppraisalCreateheatSourcesInput {
  set: [HeatSource!]
}

input RentalAppraisalCreateInput {
  id: ID
  requestedBy: UserCreateOneWithoutRentalAppraisalsInput!
  placeId: String!
  location: String!
  locationLat: Float!
  locationLng: Float!
  rooms: Int!
  bathrooms: Int!
  garageSpaces: Int!
  heatSources: RentalAppraisalCreateheatSourcesInput
  rent: Float
  rentValueAccepted: Boolean
  acceptTerms: Boolean
  property: PropertyCreateOneWithoutAppraisalsInput
}

input RentalAppraisalCreateManyWithoutPropertyInput {
  create: [RentalAppraisalCreateWithoutPropertyInput!]
  connect: [RentalAppraisalWhereUniqueInput!]
}

input RentalAppraisalCreateManyWithoutRequestedByInput {
  create: [RentalAppraisalCreateWithoutRequestedByInput!]
  connect: [RentalAppraisalWhereUniqueInput!]
}

input RentalAppraisalCreateWithoutPropertyInput {
  id: ID
  requestedBy: UserCreateOneWithoutRentalAppraisalsInput!
  placeId: String!
  location: String!
  locationLat: Float!
  locationLng: Float!
  rooms: Int!
  bathrooms: Int!
  garageSpaces: Int!
  heatSources: RentalAppraisalCreateheatSourcesInput
  rent: Float
  rentValueAccepted: Boolean
  acceptTerms: Boolean
}

input RentalAppraisalCreateWithoutRequestedByInput {
  id: ID
  placeId: String!
  location: String!
  locationLat: Float!
  locationLng: Float!
  rooms: Int!
  bathrooms: Int!
  garageSpaces: Int!
  heatSources: RentalAppraisalCreateheatSourcesInput
  rent: Float
  rentValueAccepted: Boolean
  acceptTerms: Boolean
  property: PropertyCreateOneWithoutAppraisalsInput
}

type RentalAppraisalEdge {
  node: RentalAppraisal!
  cursor: String!
}

enum RentalAppraisalOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  placeId_ASC
  placeId_DESC
  location_ASC
  location_DESC
  locationLat_ASC
  locationLat_DESC
  locationLng_ASC
  locationLng_DESC
  rooms_ASC
  rooms_DESC
  bathrooms_ASC
  bathrooms_DESC
  garageSpaces_ASC
  garageSpaces_DESC
  rent_ASC
  rent_DESC
  rentValueAccepted_ASC
  rentValueAccepted_DESC
  acceptTerms_ASC
  acceptTerms_DESC
}

type RentalAppraisalPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  placeId: String!
  location: String!
  locationLat: Float!
  locationLng: Float!
  rooms: Int!
  bathrooms: Int!
  garageSpaces: Int!
  heatSources: [HeatSource!]!
  rent: Float
  rentValueAccepted: Boolean
  acceptTerms: Boolean
}

input RentalAppraisalScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  placeId: String
  placeId_not: String
  placeId_in: [String!]
  placeId_not_in: [String!]
  placeId_lt: String
  placeId_lte: String
  placeId_gt: String
  placeId_gte: String
  placeId_contains: String
  placeId_not_contains: String
  placeId_starts_with: String
  placeId_not_starts_with: String
  placeId_ends_with: String
  placeId_not_ends_with: String
  location: String
  location_not: String
  location_in: [String!]
  location_not_in: [String!]
  location_lt: String
  location_lte: String
  location_gt: String
  location_gte: String
  location_contains: String
  location_not_contains: String
  location_starts_with: String
  location_not_starts_with: String
  location_ends_with: String
  location_not_ends_with: String
  locationLat: Float
  locationLat_not: Float
  locationLat_in: [Float!]
  locationLat_not_in: [Float!]
  locationLat_lt: Float
  locationLat_lte: Float
  locationLat_gt: Float
  locationLat_gte: Float
  locationLng: Float
  locationLng_not: Float
  locationLng_in: [Float!]
  locationLng_not_in: [Float!]
  locationLng_lt: Float
  locationLng_lte: Float
  locationLng_gt: Float
  locationLng_gte: Float
  rooms: Int
  rooms_not: Int
  rooms_in: [Int!]
  rooms_not_in: [Int!]
  rooms_lt: Int
  rooms_lte: Int
  rooms_gt: Int
  rooms_gte: Int
  bathrooms: Int
  bathrooms_not: Int
  bathrooms_in: [Int!]
  bathrooms_not_in: [Int!]
  bathrooms_lt: Int
  bathrooms_lte: Int
  bathrooms_gt: Int
  bathrooms_gte: Int
  garageSpaces: Int
  garageSpaces_not: Int
  garageSpaces_in: [Int!]
  garageSpaces_not_in: [Int!]
  garageSpaces_lt: Int
  garageSpaces_lte: Int
  garageSpaces_gt: Int
  garageSpaces_gte: Int
  rent: Float
  rent_not: Float
  rent_in: [Float!]
  rent_not_in: [Float!]
  rent_lt: Float
  rent_lte: Float
  rent_gt: Float
  rent_gte: Float
  rentValueAccepted: Boolean
  rentValueAccepted_not: Boolean
  acceptTerms: Boolean
  acceptTerms_not: Boolean
  AND: [RentalAppraisalScalarWhereInput!]
  OR: [RentalAppraisalScalarWhereInput!]
  NOT: [RentalAppraisalScalarWhereInput!]
}

type RentalAppraisalSubscriptionPayload {
  mutation: MutationType!
  node: RentalAppraisal
  updatedFields: [String!]
  previousValues: RentalAppraisalPreviousValues
}

input RentalAppraisalSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: RentalAppraisalWhereInput
  AND: [RentalAppraisalSubscriptionWhereInput!]
  OR: [RentalAppraisalSubscriptionWhereInput!]
  NOT: [RentalAppraisalSubscriptionWhereInput!]
}

input RentalAppraisalUpdateheatSourcesInput {
  set: [HeatSource!]
}

input RentalAppraisalUpdateInput {
  requestedBy: UserUpdateOneRequiredWithoutRentalAppraisalsInput
  placeId: String
  location: String
  locationLat: Float
  locationLng: Float
  rooms: Int
  bathrooms: Int
  garageSpaces: Int
  heatSources: RentalAppraisalUpdateheatSourcesInput
  rent: Float
  rentValueAccepted: Boolean
  acceptTerms: Boolean
  property: PropertyUpdateOneWithoutAppraisalsInput
}

input RentalAppraisalUpdateManyDataInput {
  placeId: String
  location: String
  locationLat: Float
  locationLng: Float
  rooms: Int
  bathrooms: Int
  garageSpaces: Int
  heatSources: RentalAppraisalUpdateheatSourcesInput
  rent: Float
  rentValueAccepted: Boolean
  acceptTerms: Boolean
}

input RentalAppraisalUpdateManyMutationInput {
  placeId: String
  location: String
  locationLat: Float
  locationLng: Float
  rooms: Int
  bathrooms: Int
  garageSpaces: Int
  heatSources: RentalAppraisalUpdateheatSourcesInput
  rent: Float
  rentValueAccepted: Boolean
  acceptTerms: Boolean
}

input RentalAppraisalUpdateManyWithoutPropertyInput {
  create: [RentalAppraisalCreateWithoutPropertyInput!]
  delete: [RentalAppraisalWhereUniqueInput!]
  connect: [RentalAppraisalWhereUniqueInput!]
  set: [RentalAppraisalWhereUniqueInput!]
  disconnect: [RentalAppraisalWhereUniqueInput!]
  update: [RentalAppraisalUpdateWithWhereUniqueWithoutPropertyInput!]
  upsert: [RentalAppraisalUpsertWithWhereUniqueWithoutPropertyInput!]
  deleteMany: [RentalAppraisalScalarWhereInput!]
  updateMany: [RentalAppraisalUpdateManyWithWhereNestedInput!]
}

input RentalAppraisalUpdateManyWithoutRequestedByInput {
  create: [RentalAppraisalCreateWithoutRequestedByInput!]
  delete: [RentalAppraisalWhereUniqueInput!]
  connect: [RentalAppraisalWhereUniqueInput!]
  set: [RentalAppraisalWhereUniqueInput!]
  disconnect: [RentalAppraisalWhereUniqueInput!]
  update: [RentalAppraisalUpdateWithWhereUniqueWithoutRequestedByInput!]
  upsert: [RentalAppraisalUpsertWithWhereUniqueWithoutRequestedByInput!]
  deleteMany: [RentalAppraisalScalarWhereInput!]
  updateMany: [RentalAppraisalUpdateManyWithWhereNestedInput!]
}

input RentalAppraisalUpdateManyWithWhereNestedInput {
  where: RentalAppraisalScalarWhereInput!
  data: RentalAppraisalUpdateManyDataInput!
}

input RentalAppraisalUpdateWithoutPropertyDataInput {
  requestedBy: UserUpdateOneRequiredWithoutRentalAppraisalsInput
  placeId: String
  location: String
  locationLat: Float
  locationLng: Float
  rooms: Int
  bathrooms: Int
  garageSpaces: Int
  heatSources: RentalAppraisalUpdateheatSourcesInput
  rent: Float
  rentValueAccepted: Boolean
  acceptTerms: Boolean
}

input RentalAppraisalUpdateWithoutRequestedByDataInput {
  placeId: String
  location: String
  locationLat: Float
  locationLng: Float
  rooms: Int
  bathrooms: Int
  garageSpaces: Int
  heatSources: RentalAppraisalUpdateheatSourcesInput
  rent: Float
  rentValueAccepted: Boolean
  acceptTerms: Boolean
  property: PropertyUpdateOneWithoutAppraisalsInput
}

input RentalAppraisalUpdateWithWhereUniqueWithoutPropertyInput {
  where: RentalAppraisalWhereUniqueInput!
  data: RentalAppraisalUpdateWithoutPropertyDataInput!
}

input RentalAppraisalUpdateWithWhereUniqueWithoutRequestedByInput {
  where: RentalAppraisalWhereUniqueInput!
  data: RentalAppraisalUpdateWithoutRequestedByDataInput!
}

input RentalAppraisalUpsertWithWhereUniqueWithoutPropertyInput {
  where: RentalAppraisalWhereUniqueInput!
  update: RentalAppraisalUpdateWithoutPropertyDataInput!
  create: RentalAppraisalCreateWithoutPropertyInput!
}

input RentalAppraisalUpsertWithWhereUniqueWithoutRequestedByInput {
  where: RentalAppraisalWhereUniqueInput!
  update: RentalAppraisalUpdateWithoutRequestedByDataInput!
  create: RentalAppraisalCreateWithoutRequestedByInput!
}

input RentalAppraisalWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  requestedBy: UserWhereInput
  placeId: String
  placeId_not: String
  placeId_in: [String!]
  placeId_not_in: [String!]
  placeId_lt: String
  placeId_lte: String
  placeId_gt: String
  placeId_gte: String
  placeId_contains: String
  placeId_not_contains: String
  placeId_starts_with: String
  placeId_not_starts_with: String
  placeId_ends_with: String
  placeId_not_ends_with: String
  location: String
  location_not: String
  location_in: [String!]
  location_not_in: [String!]
  location_lt: String
  location_lte: String
  location_gt: String
  location_gte: String
  location_contains: String
  location_not_contains: String
  location_starts_with: String
  location_not_starts_with: String
  location_ends_with: String
  location_not_ends_with: String
  locationLat: Float
  locationLat_not: Float
  locationLat_in: [Float!]
  locationLat_not_in: [Float!]
  locationLat_lt: Float
  locationLat_lte: Float
  locationLat_gt: Float
  locationLat_gte: Float
  locationLng: Float
  locationLng_not: Float
  locationLng_in: [Float!]
  locationLng_not_in: [Float!]
  locationLng_lt: Float
  locationLng_lte: Float
  locationLng_gt: Float
  locationLng_gte: Float
  rooms: Int
  rooms_not: Int
  rooms_in: [Int!]
  rooms_not_in: [Int!]
  rooms_lt: Int
  rooms_lte: Int
  rooms_gt: Int
  rooms_gte: Int
  bathrooms: Int
  bathrooms_not: Int
  bathrooms_in: [Int!]
  bathrooms_not_in: [Int!]
  bathrooms_lt: Int
  bathrooms_lte: Int
  bathrooms_gt: Int
  bathrooms_gte: Int
  garageSpaces: Int
  garageSpaces_not: Int
  garageSpaces_in: [Int!]
  garageSpaces_not_in: [Int!]
  garageSpaces_lt: Int
  garageSpaces_lte: Int
  garageSpaces_gt: Int
  garageSpaces_gte: Int
  rent: Float
  rent_not: Float
  rent_in: [Float!]
  rent_not_in: [Float!]
  rent_lt: Float
  rent_lte: Float
  rent_gt: Float
  rent_gte: Float
  rentValueAccepted: Boolean
  rentValueAccepted_not: Boolean
  acceptTerms: Boolean
  acceptTerms_not: Boolean
  property: PropertyWhereInput
  AND: [RentalAppraisalWhereInput!]
  OR: [RentalAppraisalWhereInput!]
  NOT: [RentalAppraisalWhereInput!]
}

input RentalAppraisalWhereUniqueInput {
  id: ID
  placeId: String
}

type RentalGroupApplicant {
  id: ID!
  updatedAt: DateTime!
  createdAt: DateTime!
  user: User!
  approved: Boolean!
  completed: Boolean
  application: RentalApplication
  preTenancyApplicationForm: PreTenancyForm
  firstName: String
  lastName: String
  email: String
}

type RentalGroupApplicantConnection {
  pageInfo: PageInfo!
  edges: [RentalGroupApplicantEdge]!
  aggregate: AggregateRentalGroupApplicant!
}

input RentalGroupApplicantCreateInput {
  id: ID
  user: UserCreateOneInput!
  approved: Boolean!
  completed: Boolean
  application: RentalApplicationCreateOneWithoutApplicantsInput
  preTenancyApplicationForm: PreTenancyFormCreateOneWithoutRentalApplicantInput
  firstName: String
  lastName: String
  email: String
}

input RentalGroupApplicantCreateManyWithoutApplicationInput {
  create: [RentalGroupApplicantCreateWithoutApplicationInput!]
  connect: [RentalGroupApplicantWhereUniqueInput!]
}

input RentalGroupApplicantCreateOneWithoutPreTenancyApplicationFormInput {
  create: RentalGroupApplicantCreateWithoutPreTenancyApplicationFormInput
  connect: RentalGroupApplicantWhereUniqueInput
}

input RentalGroupApplicantCreateWithoutApplicationInput {
  id: ID
  user: UserCreateOneInput!
  approved: Boolean!
  completed: Boolean
  preTenancyApplicationForm: PreTenancyFormCreateOneWithoutRentalApplicantInput
  firstName: String
  lastName: String
  email: String
}

input RentalGroupApplicantCreateWithoutPreTenancyApplicationFormInput {
  id: ID
  user: UserCreateOneInput!
  approved: Boolean!
  completed: Boolean
  application: RentalApplicationCreateOneWithoutApplicantsInput
  firstName: String
  lastName: String
  email: String
}

type RentalGroupApplicantEdge {
  node: RentalGroupApplicant!
  cursor: String!
}

enum RentalGroupApplicantOrderByInput {
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  approved_ASC
  approved_DESC
  completed_ASC
  completed_DESC
  firstName_ASC
  firstName_DESC
  lastName_ASC
  lastName_DESC
  email_ASC
  email_DESC
}

type RentalGroupApplicantPreviousValues {
  id: ID!
  updatedAt: DateTime!
  createdAt: DateTime!
  approved: Boolean!
  completed: Boolean
  firstName: String
  lastName: String
  email: String
}

input RentalGroupApplicantScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  approved: Boolean
  approved_not: Boolean
  completed: Boolean
  completed_not: Boolean
  firstName: String
  firstName_not: String
  firstName_in: [String!]
  firstName_not_in: [String!]
  firstName_lt: String
  firstName_lte: String
  firstName_gt: String
  firstName_gte: String
  firstName_contains: String
  firstName_not_contains: String
  firstName_starts_with: String
  firstName_not_starts_with: String
  firstName_ends_with: String
  firstName_not_ends_with: String
  lastName: String
  lastName_not: String
  lastName_in: [String!]
  lastName_not_in: [String!]
  lastName_lt: String
  lastName_lte: String
  lastName_gt: String
  lastName_gte: String
  lastName_contains: String
  lastName_not_contains: String
  lastName_starts_with: String
  lastName_not_starts_with: String
  lastName_ends_with: String
  lastName_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  AND: [RentalGroupApplicantScalarWhereInput!]
  OR: [RentalGroupApplicantScalarWhereInput!]
  NOT: [RentalGroupApplicantScalarWhereInput!]
}

type RentalGroupApplicantSubscriptionPayload {
  mutation: MutationType!
  node: RentalGroupApplicant
  updatedFields: [String!]
  previousValues: RentalGroupApplicantPreviousValues
}

input RentalGroupApplicantSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: RentalGroupApplicantWhereInput
  AND: [RentalGroupApplicantSubscriptionWhereInput!]
  OR: [RentalGroupApplicantSubscriptionWhereInput!]
  NOT: [RentalGroupApplicantSubscriptionWhereInput!]
}

input RentalGroupApplicantUpdateInput {
  user: UserUpdateOneRequiredInput
  approved: Boolean
  completed: Boolean
  application: RentalApplicationUpdateOneWithoutApplicantsInput
  preTenancyApplicationForm: PreTenancyFormUpdateOneWithoutRentalApplicantInput
  firstName: String
  lastName: String
  email: String
}

input RentalGroupApplicantUpdateManyDataInput {
  approved: Boolean
  completed: Boolean
  firstName: String
  lastName: String
  email: String
}

input RentalGroupApplicantUpdateManyMutationInput {
  approved: Boolean
  completed: Boolean
  firstName: String
  lastName: String
  email: String
}

input RentalGroupApplicantUpdateManyWithoutApplicationInput {
  create: [RentalGroupApplicantCreateWithoutApplicationInput!]
  delete: [RentalGroupApplicantWhereUniqueInput!]
  connect: [RentalGroupApplicantWhereUniqueInput!]
  set: [RentalGroupApplicantWhereUniqueInput!]
  disconnect: [RentalGroupApplicantWhereUniqueInput!]
  update: [RentalGroupApplicantUpdateWithWhereUniqueWithoutApplicationInput!]
  upsert: [RentalGroupApplicantUpsertWithWhereUniqueWithoutApplicationInput!]
  deleteMany: [RentalGroupApplicantScalarWhereInput!]
  updateMany: [RentalGroupApplicantUpdateManyWithWhereNestedInput!]
}

input RentalGroupApplicantUpdateManyWithWhereNestedInput {
  where: RentalGroupApplicantScalarWhereInput!
  data: RentalGroupApplicantUpdateManyDataInput!
}

input RentalGroupApplicantUpdateOneWithoutPreTenancyApplicationFormInput {
  create: RentalGroupApplicantCreateWithoutPreTenancyApplicationFormInput
  update: RentalGroupApplicantUpdateWithoutPreTenancyApplicationFormDataInput
  upsert: RentalGroupApplicantUpsertWithoutPreTenancyApplicationFormInput
  delete: Boolean
  disconnect: Boolean
  connect: RentalGroupApplicantWhereUniqueInput
}

input RentalGroupApplicantUpdateWithoutApplicationDataInput {
  user: UserUpdateOneRequiredInput
  approved: Boolean
  completed: Boolean
  preTenancyApplicationForm: PreTenancyFormUpdateOneWithoutRentalApplicantInput
  firstName: String
  lastName: String
  email: String
}

input RentalGroupApplicantUpdateWithoutPreTenancyApplicationFormDataInput {
  user: UserUpdateOneRequiredInput
  approved: Boolean
  completed: Boolean
  application: RentalApplicationUpdateOneWithoutApplicantsInput
  firstName: String
  lastName: String
  email: String
}

input RentalGroupApplicantUpdateWithWhereUniqueWithoutApplicationInput {
  where: RentalGroupApplicantWhereUniqueInput!
  data: RentalGroupApplicantUpdateWithoutApplicationDataInput!
}

input RentalGroupApplicantUpsertWithoutPreTenancyApplicationFormInput {
  update: RentalGroupApplicantUpdateWithoutPreTenancyApplicationFormDataInput!
  create: RentalGroupApplicantCreateWithoutPreTenancyApplicationFormInput!
}

input RentalGroupApplicantUpsertWithWhereUniqueWithoutApplicationInput {
  where: RentalGroupApplicantWhereUniqueInput!
  update: RentalGroupApplicantUpdateWithoutApplicationDataInput!
  create: RentalGroupApplicantCreateWithoutApplicationInput!
}

input RentalGroupApplicantWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  user: UserWhereInput
  approved: Boolean
  approved_not: Boolean
  completed: Boolean
  completed_not: Boolean
  application: RentalApplicationWhereInput
  preTenancyApplicationForm: PreTenancyFormWhereInput
  firstName: String
  firstName_not: String
  firstName_in: [String!]
  firstName_not_in: [String!]
  firstName_lt: String
  firstName_lte: String
  firstName_gt: String
  firstName_gte: String
  firstName_contains: String
  firstName_not_contains: String
  firstName_starts_with: String
  firstName_not_starts_with: String
  firstName_ends_with: String
  firstName_not_ends_with: String
  lastName: String
  lastName_not: String
  lastName_in: [String!]
  lastName_not_in: [String!]
  lastName_lt: String
  lastName_lte: String
  lastName_gt: String
  lastName_gte: String
  lastName_contains: String
  lastName_not_contains: String
  lastName_starts_with: String
  lastName_not_starts_with: String
  lastName_ends_with: String
  lastName_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  AND: [RentalGroupApplicantWhereInput!]
  OR: [RentalGroupApplicantWhereInput!]
  NOT: [RentalGroupApplicantWhereInput!]
}

input RentalGroupApplicantWhereUniqueInput {
  id: ID
}

type Seen {
  id: ID!
  lastSeen: DateTime
  amountSeen: Int
  seenUserId: String!
  chat: Chat!
}

type SeenConnection {
  pageInfo: PageInfo!
  edges: [SeenEdge]!
  aggregate: AggregateSeen!
}

input SeenCreateInput {
  id: ID
  lastSeen: DateTime
  amountSeen: Int
  seenUserId: String!
  chat: ChatCreateOneWithoutSeenInfoInput!
}

input SeenCreateManyWithoutChatInput {
  create: [SeenCreateWithoutChatInput!]
  connect: [SeenWhereUniqueInput!]
}

input SeenCreateWithoutChatInput {
  id: ID
  lastSeen: DateTime
  amountSeen: Int
  seenUserId: String!
}

type SeenEdge {
  node: Seen!
  cursor: String!
}

enum SeenOrderByInput {
  id_ASC
  id_DESC
  lastSeen_ASC
  lastSeen_DESC
  amountSeen_ASC
  amountSeen_DESC
  seenUserId_ASC
  seenUserId_DESC
}

type SeenPreviousValues {
  id: ID!
  lastSeen: DateTime
  amountSeen: Int
  seenUserId: String!
}

input SeenScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  lastSeen: DateTime
  lastSeen_not: DateTime
  lastSeen_in: [DateTime!]
  lastSeen_not_in: [DateTime!]
  lastSeen_lt: DateTime
  lastSeen_lte: DateTime
  lastSeen_gt: DateTime
  lastSeen_gte: DateTime
  amountSeen: Int
  amountSeen_not: Int
  amountSeen_in: [Int!]
  amountSeen_not_in: [Int!]
  amountSeen_lt: Int
  amountSeen_lte: Int
  amountSeen_gt: Int
  amountSeen_gte: Int
  seenUserId: String
  seenUserId_not: String
  seenUserId_in: [String!]
  seenUserId_not_in: [String!]
  seenUserId_lt: String
  seenUserId_lte: String
  seenUserId_gt: String
  seenUserId_gte: String
  seenUserId_contains: String
  seenUserId_not_contains: String
  seenUserId_starts_with: String
  seenUserId_not_starts_with: String
  seenUserId_ends_with: String
  seenUserId_not_ends_with: String
  AND: [SeenScalarWhereInput!]
  OR: [SeenScalarWhereInput!]
  NOT: [SeenScalarWhereInput!]
}

type SeenSubscriptionPayload {
  mutation: MutationType!
  node: Seen
  updatedFields: [String!]
  previousValues: SeenPreviousValues
}

input SeenSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SeenWhereInput
  AND: [SeenSubscriptionWhereInput!]
  OR: [SeenSubscriptionWhereInput!]
  NOT: [SeenSubscriptionWhereInput!]
}

input SeenUpdateInput {
  lastSeen: DateTime
  amountSeen: Int
  seenUserId: String
  chat: ChatUpdateOneRequiredWithoutSeenInfoInput
}

input SeenUpdateManyDataInput {
  lastSeen: DateTime
  amountSeen: Int
  seenUserId: String
}

input SeenUpdateManyMutationInput {
  lastSeen: DateTime
  amountSeen: Int
  seenUserId: String
}

input SeenUpdateManyWithoutChatInput {
  create: [SeenCreateWithoutChatInput!]
  delete: [SeenWhereUniqueInput!]
  connect: [SeenWhereUniqueInput!]
  set: [SeenWhereUniqueInput!]
  disconnect: [SeenWhereUniqueInput!]
  update: [SeenUpdateWithWhereUniqueWithoutChatInput!]
  upsert: [SeenUpsertWithWhereUniqueWithoutChatInput!]
  deleteMany: [SeenScalarWhereInput!]
  updateMany: [SeenUpdateManyWithWhereNestedInput!]
}

input SeenUpdateManyWithWhereNestedInput {
  where: SeenScalarWhereInput!
  data: SeenUpdateManyDataInput!
}

input SeenUpdateWithoutChatDataInput {
  lastSeen: DateTime
  amountSeen: Int
  seenUserId: String
}

input SeenUpdateWithWhereUniqueWithoutChatInput {
  where: SeenWhereUniqueInput!
  data: SeenUpdateWithoutChatDataInput!
}

input SeenUpsertWithWhereUniqueWithoutChatInput {
  where: SeenWhereUniqueInput!
  update: SeenUpdateWithoutChatDataInput!
  create: SeenCreateWithoutChatInput!
}

input SeenWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  lastSeen: DateTime
  lastSeen_not: DateTime
  lastSeen_in: [DateTime!]
  lastSeen_not_in: [DateTime!]
  lastSeen_lt: DateTime
  lastSeen_lte: DateTime
  lastSeen_gt: DateTime
  lastSeen_gte: DateTime
  amountSeen: Int
  amountSeen_not: Int
  amountSeen_in: [Int!]
  amountSeen_not_in: [Int!]
  amountSeen_lt: Int
  amountSeen_lte: Int
  amountSeen_gt: Int
  amountSeen_gte: Int
  seenUserId: String
  seenUserId_not: String
  seenUserId_in: [String!]
  seenUserId_not_in: [String!]
  seenUserId_lt: String
  seenUserId_lte: String
  seenUserId_gt: String
  seenUserId_gte: String
  seenUserId_contains: String
  seenUserId_not_contains: String
  seenUserId_starts_with: String
  seenUserId_not_starts_with: String
  seenUserId_ends_with: String
  seenUserId_not_ends_with: String
  chat: ChatWhereInput
  AND: [SeenWhereInput!]
  OR: [SeenWhereInput!]
  NOT: [SeenWhereInput!]
}

input SeenWhereUniqueInput {
  id: ID
}

type Subscription {
  accommodation(where: AccommodationSubscriptionWhereInput): AccommodationSubscriptionPayload
  activity(where: ActivitySubscriptionWhereInput): ActivitySubscriptionPayload
  address(where: AddressSubscriptionWhereInput): AddressSubscriptionPayload
  adminSetting(where: AdminSettingSubscriptionWhereInput): AdminSettingSubscriptionPayload
  bankDetail(where: BankDetailSubscriptionWhereInput): BankDetailSubscriptionPayload
  charge(where: ChargeSubscriptionWhereInput): ChargeSubscriptionPayload
  chat(where: ChatSubscriptionWhereInput): ChatSubscriptionPayload
  creditCard(where: CreditCardSubscriptionWhereInput): CreditCardSubscriptionPayload
  file(where: FileSubscriptionWhereInput): FileSubscriptionPayload
  friendRequest(where: FriendRequestSubscriptionWhereInput): FriendRequestSubscriptionPayload
  inspection(where: InspectionSubscriptionWhereInput): InspectionSubscriptionPayload
  insulationForm(where: InsulationFormSubscriptionWhereInput): InsulationFormSubscriptionPayload
  lessee(where: LesseeSubscriptionWhereInput): LesseeSubscriptionPayload
  lessor(where: LessorSubscriptionWhereInput): LessorSubscriptionPayload
  message(where: MessageSubscriptionWhereInput): MessageSubscriptionPayload
  payment(where: PaymentSubscriptionWhereInput): PaymentSubscriptionPayload
  preTenancyForm(where: PreTenancyFormSubscriptionWhereInput): PreTenancyFormSubscriptionPayload
  property(where: PropertySubscriptionWhereInput): PropertySubscriptionPayload
  propertyAdvertisement(where: PropertyAdvertisementSubscriptionWhereInput): PropertyAdvertisementSubscriptionPayload
  propertyAssist(where: PropertyAssistSubscriptionWhereInput): PropertyAssistSubscriptionPayload
  propertyFiles(where: PropertyFilesSubscriptionWhereInput): PropertyFilesSubscriptionPayload
  propertyLease(where: PropertyLeaseSubscriptionWhereInput): PropertyLeaseSubscriptionPayload
  rentalApplication(where: RentalApplicationSubscriptionWhereInput): RentalApplicationSubscriptionPayload
  rentalAppraisal(where: RentalAppraisalSubscriptionWhereInput): RentalAppraisalSubscriptionPayload
  rentalGroupApplicant(where: RentalGroupApplicantSubscriptionWhereInput): RentalGroupApplicantSubscriptionPayload
  seen(where: SeenSubscriptionWhereInput): SeenSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  viewing(where: ViewingSubscriptionWhereInput): ViewingSubscriptionPayload
  wallet(where: WalletSubscriptionWhereInput): WalletSubscriptionPayload
}

enum TenancyFixedLength {
  MONTHS_12
  MONTHS_9
  MONTHS_6
  MONTHS_3
}

enum TenancyType {
  PERIODIC
  FIXED
}

enum UnderfloorInsulationTypes {
  SEGMENTS_BLANKETS
  POLYSTYRENE
  FOIL
  BULK_WITH_FOIL_LINING
  OTHER
  NOT_ACCESSIBLE
}

type User {
  id: ID!
  test: String
  friends(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  friendRequests(where: FriendRequestWhereInput, orderBy: FriendRequestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FriendRequest!]
  awaitingFriends(where: FriendRequestWhereInput, orderBy: FriendRequestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FriendRequest!]
  updatedAt: DateTime!
  createdAt: DateTime!
  dob: DateTime
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  emailValidated: Boolean
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: [Permission!]!
  properties(where: PropertyWhereInput, orderBy: PropertyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Property!]
  lesseeLeases(where: LesseeWhereInput, orderBy: LesseeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Lessee!]
  lessorLeases(where: LessorWhereInput, orderBy: LessorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Lessor!]
  createdProperties(where: PropertyWhereInput, orderBy: PropertyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Property!]
  photoIdentification: File
  profilePhoto: File
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards(where: CreditCardWhereInput, orderBy: CreditCardOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CreditCard!]
  primaryCreditCard: CreditCard
  chats(where: ChatWhereInput, orderBy: ChatOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Chat!]
  sentMessages(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Message!]
  recievedMessages(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Message!]
  rehouserStamp: Boolean
  signature: File
  activity(where: ActivityWhereInput, orderBy: ActivityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Activity!]
  involvedActivity(where: ActivityWhereInput, orderBy: ActivityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Activity!]
  rentalAppraisals(where: RentalAppraisalWhereInput, orderBy: RentalAppraisalOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [RentalAppraisal!]
  currentAddress: Address
  proofOfAddress: File
  acceptedSignupTerms: Boolean!
  adminSettings: AdminSetting!
  viewings(where: ViewingWhereInput, orderBy: ViewingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Viewing!]
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetail
  inspections(where: InspectionWhereInput, orderBy: InspectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Inspection!]
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  test: String
  friends: UserCreateManyInput
  friendRequests: FriendRequestCreateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestCreateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  emailValidated: Boolean
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  properties: PropertyCreateManyWithoutOwnersInput
  lesseeLeases: LesseeCreateManyWithoutUserInput
  lessorLeases: LessorCreateManyWithoutUserInput
  createdProperties: PropertyCreateManyWithoutCreatorInput
  photoIdentification: FileCreateOneWithoutUserPhotoIdInput
  profilePhoto: FileCreateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardCreateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardCreateOneInput
  chats: ChatCreateManyWithoutParticipantsInput
  sentMessages: MessageCreateManyWithoutSenderInput
  recievedMessages: MessageCreateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileCreateOneWithoutUserSignatureInput
  activity: ActivityCreateManyWithoutUserInput
  involvedActivity: ActivityCreateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalCreateManyWithoutRequestedByInput
  currentAddress: AddressCreateOneWithoutUserInput
  proofOfAddress: FileCreateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean!
  adminSettings: AdminSettingCreateOneWithoutUserInput!
  viewings: ViewingCreateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailCreateOneWithoutUserInput
  inspections: InspectionCreateManyWithoutInspectorInput
}

input UserCreateManyInput {
  create: [UserCreateInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateManyWithoutChatsInput {
  create: [UserCreateWithoutChatsInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateManyWithoutInvolvedActivityInput {
  create: [UserCreateWithoutInvolvedActivityInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateManyWithoutPropertiesInput {
  create: [UserCreateWithoutPropertiesInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateManyWithoutViewingsInput {
  create: [UserCreateWithoutViewingsInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutActivityInput {
  create: UserCreateWithoutActivityInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutAdminSettingsInput {
  create: UserCreateWithoutAdminSettingsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutAwaitingFriendsInput {
  create: UserCreateWithoutAwaitingFriendsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutBankDetailsInput {
  create: UserCreateWithoutBankDetailsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutCreatedPropertiesInput {
  create: UserCreateWithoutCreatedPropertiesInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutCreditCardsInput {
  create: UserCreateWithoutCreditCardsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutCurrentAddressInput {
  create: UserCreateWithoutCurrentAddressInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutFriendRequestsInput {
  create: UserCreateWithoutFriendRequestsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutInspectionsInput {
  create: UserCreateWithoutInspectionsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutLesseeLeasesInput {
  create: UserCreateWithoutLesseeLeasesInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutLessorLeasesInput {
  create: UserCreateWithoutLessorLeasesInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutPhotoIdentificationInput {
  create: UserCreateWithoutPhotoIdentificationInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutProfilePhotoInput {
  create: UserCreateWithoutProfilePhotoInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutProofOfAddressInput {
  create: UserCreateWithoutProofOfAddressInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutRecievedMessagesInput {
  create: UserCreateWithoutRecievedMessagesInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutRentalAppraisalsInput {
  create: UserCreateWithoutRentalAppraisalsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutSentMessagesInput {
  create: UserCreateWithoutSentMessagesInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutSignatureInput {
  create: UserCreateWithoutSignatureInput
  connect: UserWhereUniqueInput
}

input UserCreatepermissionsInput {
  set: [Permission!]
}

input UserCreateWithoutActivityInput {
  id: ID
  test: String
  friends: UserCreateManyInput
  friendRequests: FriendRequestCreateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestCreateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  emailValidated: Boolean
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  properties: PropertyCreateManyWithoutOwnersInput
  lesseeLeases: LesseeCreateManyWithoutUserInput
  lessorLeases: LessorCreateManyWithoutUserInput
  createdProperties: PropertyCreateManyWithoutCreatorInput
  photoIdentification: FileCreateOneWithoutUserPhotoIdInput
  profilePhoto: FileCreateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardCreateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardCreateOneInput
  chats: ChatCreateManyWithoutParticipantsInput
  sentMessages: MessageCreateManyWithoutSenderInput
  recievedMessages: MessageCreateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileCreateOneWithoutUserSignatureInput
  involvedActivity: ActivityCreateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalCreateManyWithoutRequestedByInput
  currentAddress: AddressCreateOneWithoutUserInput
  proofOfAddress: FileCreateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean!
  adminSettings: AdminSettingCreateOneWithoutUserInput!
  viewings: ViewingCreateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailCreateOneWithoutUserInput
  inspections: InspectionCreateManyWithoutInspectorInput
}

input UserCreateWithoutAdminSettingsInput {
  id: ID
  test: String
  friends: UserCreateManyInput
  friendRequests: FriendRequestCreateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestCreateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  emailValidated: Boolean
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  properties: PropertyCreateManyWithoutOwnersInput
  lesseeLeases: LesseeCreateManyWithoutUserInput
  lessorLeases: LessorCreateManyWithoutUserInput
  createdProperties: PropertyCreateManyWithoutCreatorInput
  photoIdentification: FileCreateOneWithoutUserPhotoIdInput
  profilePhoto: FileCreateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardCreateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardCreateOneInput
  chats: ChatCreateManyWithoutParticipantsInput
  sentMessages: MessageCreateManyWithoutSenderInput
  recievedMessages: MessageCreateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileCreateOneWithoutUserSignatureInput
  activity: ActivityCreateManyWithoutUserInput
  involvedActivity: ActivityCreateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalCreateManyWithoutRequestedByInput
  currentAddress: AddressCreateOneWithoutUserInput
  proofOfAddress: FileCreateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean!
  viewings: ViewingCreateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailCreateOneWithoutUserInput
  inspections: InspectionCreateManyWithoutInspectorInput
}

input UserCreateWithoutAwaitingFriendsInput {
  id: ID
  test: String
  friends: UserCreateManyInput
  friendRequests: FriendRequestCreateManyWithoutAcceptingUserInput
  dob: DateTime
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  emailValidated: Boolean
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  properties: PropertyCreateManyWithoutOwnersInput
  lesseeLeases: LesseeCreateManyWithoutUserInput
  lessorLeases: LessorCreateManyWithoutUserInput
  createdProperties: PropertyCreateManyWithoutCreatorInput
  photoIdentification: FileCreateOneWithoutUserPhotoIdInput
  profilePhoto: FileCreateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardCreateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardCreateOneInput
  chats: ChatCreateManyWithoutParticipantsInput
  sentMessages: MessageCreateManyWithoutSenderInput
  recievedMessages: MessageCreateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileCreateOneWithoutUserSignatureInput
  activity: ActivityCreateManyWithoutUserInput
  involvedActivity: ActivityCreateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalCreateManyWithoutRequestedByInput
  currentAddress: AddressCreateOneWithoutUserInput
  proofOfAddress: FileCreateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean!
  adminSettings: AdminSettingCreateOneWithoutUserInput!
  viewings: ViewingCreateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailCreateOneWithoutUserInput
  inspections: InspectionCreateManyWithoutInspectorInput
}

input UserCreateWithoutBankDetailsInput {
  id: ID
  test: String
  friends: UserCreateManyInput
  friendRequests: FriendRequestCreateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestCreateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  emailValidated: Boolean
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  properties: PropertyCreateManyWithoutOwnersInput
  lesseeLeases: LesseeCreateManyWithoutUserInput
  lessorLeases: LessorCreateManyWithoutUserInput
  createdProperties: PropertyCreateManyWithoutCreatorInput
  photoIdentification: FileCreateOneWithoutUserPhotoIdInput
  profilePhoto: FileCreateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardCreateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardCreateOneInput
  chats: ChatCreateManyWithoutParticipantsInput
  sentMessages: MessageCreateManyWithoutSenderInput
  recievedMessages: MessageCreateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileCreateOneWithoutUserSignatureInput
  activity: ActivityCreateManyWithoutUserInput
  involvedActivity: ActivityCreateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalCreateManyWithoutRequestedByInput
  currentAddress: AddressCreateOneWithoutUserInput
  proofOfAddress: FileCreateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean!
  adminSettings: AdminSettingCreateOneWithoutUserInput!
  viewings: ViewingCreateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  inspections: InspectionCreateManyWithoutInspectorInput
}

input UserCreateWithoutChatsInput {
  id: ID
  test: String
  friends: UserCreateManyInput
  friendRequests: FriendRequestCreateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestCreateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  emailValidated: Boolean
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  properties: PropertyCreateManyWithoutOwnersInput
  lesseeLeases: LesseeCreateManyWithoutUserInput
  lessorLeases: LessorCreateManyWithoutUserInput
  createdProperties: PropertyCreateManyWithoutCreatorInput
  photoIdentification: FileCreateOneWithoutUserPhotoIdInput
  profilePhoto: FileCreateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardCreateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardCreateOneInput
  sentMessages: MessageCreateManyWithoutSenderInput
  recievedMessages: MessageCreateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileCreateOneWithoutUserSignatureInput
  activity: ActivityCreateManyWithoutUserInput
  involvedActivity: ActivityCreateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalCreateManyWithoutRequestedByInput
  currentAddress: AddressCreateOneWithoutUserInput
  proofOfAddress: FileCreateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean!
  adminSettings: AdminSettingCreateOneWithoutUserInput!
  viewings: ViewingCreateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailCreateOneWithoutUserInput
  inspections: InspectionCreateManyWithoutInspectorInput
}

input UserCreateWithoutCreatedPropertiesInput {
  id: ID
  test: String
  friends: UserCreateManyInput
  friendRequests: FriendRequestCreateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestCreateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  emailValidated: Boolean
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  properties: PropertyCreateManyWithoutOwnersInput
  lesseeLeases: LesseeCreateManyWithoutUserInput
  lessorLeases: LessorCreateManyWithoutUserInput
  photoIdentification: FileCreateOneWithoutUserPhotoIdInput
  profilePhoto: FileCreateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardCreateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardCreateOneInput
  chats: ChatCreateManyWithoutParticipantsInput
  sentMessages: MessageCreateManyWithoutSenderInput
  recievedMessages: MessageCreateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileCreateOneWithoutUserSignatureInput
  activity: ActivityCreateManyWithoutUserInput
  involvedActivity: ActivityCreateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalCreateManyWithoutRequestedByInput
  currentAddress: AddressCreateOneWithoutUserInput
  proofOfAddress: FileCreateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean!
  adminSettings: AdminSettingCreateOneWithoutUserInput!
  viewings: ViewingCreateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailCreateOneWithoutUserInput
  inspections: InspectionCreateManyWithoutInspectorInput
}

input UserCreateWithoutCreditCardsInput {
  id: ID
  test: String
  friends: UserCreateManyInput
  friendRequests: FriendRequestCreateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestCreateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  emailValidated: Boolean
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  properties: PropertyCreateManyWithoutOwnersInput
  lesseeLeases: LesseeCreateManyWithoutUserInput
  lessorLeases: LessorCreateManyWithoutUserInput
  createdProperties: PropertyCreateManyWithoutCreatorInput
  photoIdentification: FileCreateOneWithoutUserPhotoIdInput
  profilePhoto: FileCreateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  primaryCreditCard: CreditCardCreateOneInput
  chats: ChatCreateManyWithoutParticipantsInput
  sentMessages: MessageCreateManyWithoutSenderInput
  recievedMessages: MessageCreateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileCreateOneWithoutUserSignatureInput
  activity: ActivityCreateManyWithoutUserInput
  involvedActivity: ActivityCreateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalCreateManyWithoutRequestedByInput
  currentAddress: AddressCreateOneWithoutUserInput
  proofOfAddress: FileCreateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean!
  adminSettings: AdminSettingCreateOneWithoutUserInput!
  viewings: ViewingCreateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailCreateOneWithoutUserInput
  inspections: InspectionCreateManyWithoutInspectorInput
}

input UserCreateWithoutCurrentAddressInput {
  id: ID
  test: String
  friends: UserCreateManyInput
  friendRequests: FriendRequestCreateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestCreateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  emailValidated: Boolean
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  properties: PropertyCreateManyWithoutOwnersInput
  lesseeLeases: LesseeCreateManyWithoutUserInput
  lessorLeases: LessorCreateManyWithoutUserInput
  createdProperties: PropertyCreateManyWithoutCreatorInput
  photoIdentification: FileCreateOneWithoutUserPhotoIdInput
  profilePhoto: FileCreateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardCreateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardCreateOneInput
  chats: ChatCreateManyWithoutParticipantsInput
  sentMessages: MessageCreateManyWithoutSenderInput
  recievedMessages: MessageCreateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileCreateOneWithoutUserSignatureInput
  activity: ActivityCreateManyWithoutUserInput
  involvedActivity: ActivityCreateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalCreateManyWithoutRequestedByInput
  proofOfAddress: FileCreateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean!
  adminSettings: AdminSettingCreateOneWithoutUserInput!
  viewings: ViewingCreateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailCreateOneWithoutUserInput
  inspections: InspectionCreateManyWithoutInspectorInput
}

input UserCreateWithoutFriendRequestsInput {
  id: ID
  test: String
  friends: UserCreateManyInput
  awaitingFriends: FriendRequestCreateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  emailValidated: Boolean
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  properties: PropertyCreateManyWithoutOwnersInput
  lesseeLeases: LesseeCreateManyWithoutUserInput
  lessorLeases: LessorCreateManyWithoutUserInput
  createdProperties: PropertyCreateManyWithoutCreatorInput
  photoIdentification: FileCreateOneWithoutUserPhotoIdInput
  profilePhoto: FileCreateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardCreateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardCreateOneInput
  chats: ChatCreateManyWithoutParticipantsInput
  sentMessages: MessageCreateManyWithoutSenderInput
  recievedMessages: MessageCreateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileCreateOneWithoutUserSignatureInput
  activity: ActivityCreateManyWithoutUserInput
  involvedActivity: ActivityCreateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalCreateManyWithoutRequestedByInput
  currentAddress: AddressCreateOneWithoutUserInput
  proofOfAddress: FileCreateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean!
  adminSettings: AdminSettingCreateOneWithoutUserInput!
  viewings: ViewingCreateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailCreateOneWithoutUserInput
  inspections: InspectionCreateManyWithoutInspectorInput
}

input UserCreateWithoutInspectionsInput {
  id: ID
  test: String
  friends: UserCreateManyInput
  friendRequests: FriendRequestCreateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestCreateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  emailValidated: Boolean
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  properties: PropertyCreateManyWithoutOwnersInput
  lesseeLeases: LesseeCreateManyWithoutUserInput
  lessorLeases: LessorCreateManyWithoutUserInput
  createdProperties: PropertyCreateManyWithoutCreatorInput
  photoIdentification: FileCreateOneWithoutUserPhotoIdInput
  profilePhoto: FileCreateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardCreateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardCreateOneInput
  chats: ChatCreateManyWithoutParticipantsInput
  sentMessages: MessageCreateManyWithoutSenderInput
  recievedMessages: MessageCreateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileCreateOneWithoutUserSignatureInput
  activity: ActivityCreateManyWithoutUserInput
  involvedActivity: ActivityCreateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalCreateManyWithoutRequestedByInput
  currentAddress: AddressCreateOneWithoutUserInput
  proofOfAddress: FileCreateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean!
  adminSettings: AdminSettingCreateOneWithoutUserInput!
  viewings: ViewingCreateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailCreateOneWithoutUserInput
}

input UserCreateWithoutInvolvedActivityInput {
  id: ID
  test: String
  friends: UserCreateManyInput
  friendRequests: FriendRequestCreateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestCreateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  emailValidated: Boolean
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  properties: PropertyCreateManyWithoutOwnersInput
  lesseeLeases: LesseeCreateManyWithoutUserInput
  lessorLeases: LessorCreateManyWithoutUserInput
  createdProperties: PropertyCreateManyWithoutCreatorInput
  photoIdentification: FileCreateOneWithoutUserPhotoIdInput
  profilePhoto: FileCreateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardCreateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardCreateOneInput
  chats: ChatCreateManyWithoutParticipantsInput
  sentMessages: MessageCreateManyWithoutSenderInput
  recievedMessages: MessageCreateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileCreateOneWithoutUserSignatureInput
  activity: ActivityCreateManyWithoutUserInput
  rentalAppraisals: RentalAppraisalCreateManyWithoutRequestedByInput
  currentAddress: AddressCreateOneWithoutUserInput
  proofOfAddress: FileCreateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean!
  adminSettings: AdminSettingCreateOneWithoutUserInput!
  viewings: ViewingCreateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailCreateOneWithoutUserInput
  inspections: InspectionCreateManyWithoutInspectorInput
}

input UserCreateWithoutLesseeLeasesInput {
  id: ID
  test: String
  friends: UserCreateManyInput
  friendRequests: FriendRequestCreateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestCreateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  emailValidated: Boolean
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  properties: PropertyCreateManyWithoutOwnersInput
  lessorLeases: LessorCreateManyWithoutUserInput
  createdProperties: PropertyCreateManyWithoutCreatorInput
  photoIdentification: FileCreateOneWithoutUserPhotoIdInput
  profilePhoto: FileCreateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardCreateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardCreateOneInput
  chats: ChatCreateManyWithoutParticipantsInput
  sentMessages: MessageCreateManyWithoutSenderInput
  recievedMessages: MessageCreateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileCreateOneWithoutUserSignatureInput
  activity: ActivityCreateManyWithoutUserInput
  involvedActivity: ActivityCreateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalCreateManyWithoutRequestedByInput
  currentAddress: AddressCreateOneWithoutUserInput
  proofOfAddress: FileCreateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean!
  adminSettings: AdminSettingCreateOneWithoutUserInput!
  viewings: ViewingCreateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailCreateOneWithoutUserInput
  inspections: InspectionCreateManyWithoutInspectorInput
}

input UserCreateWithoutLessorLeasesInput {
  id: ID
  test: String
  friends: UserCreateManyInput
  friendRequests: FriendRequestCreateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestCreateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  emailValidated: Boolean
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  properties: PropertyCreateManyWithoutOwnersInput
  lesseeLeases: LesseeCreateManyWithoutUserInput
  createdProperties: PropertyCreateManyWithoutCreatorInput
  photoIdentification: FileCreateOneWithoutUserPhotoIdInput
  profilePhoto: FileCreateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardCreateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardCreateOneInput
  chats: ChatCreateManyWithoutParticipantsInput
  sentMessages: MessageCreateManyWithoutSenderInput
  recievedMessages: MessageCreateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileCreateOneWithoutUserSignatureInput
  activity: ActivityCreateManyWithoutUserInput
  involvedActivity: ActivityCreateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalCreateManyWithoutRequestedByInput
  currentAddress: AddressCreateOneWithoutUserInput
  proofOfAddress: FileCreateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean!
  adminSettings: AdminSettingCreateOneWithoutUserInput!
  viewings: ViewingCreateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailCreateOneWithoutUserInput
  inspections: InspectionCreateManyWithoutInspectorInput
}

input UserCreateWithoutPhotoIdentificationInput {
  id: ID
  test: String
  friends: UserCreateManyInput
  friendRequests: FriendRequestCreateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestCreateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  emailValidated: Boolean
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  properties: PropertyCreateManyWithoutOwnersInput
  lesseeLeases: LesseeCreateManyWithoutUserInput
  lessorLeases: LessorCreateManyWithoutUserInput
  createdProperties: PropertyCreateManyWithoutCreatorInput
  profilePhoto: FileCreateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardCreateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardCreateOneInput
  chats: ChatCreateManyWithoutParticipantsInput
  sentMessages: MessageCreateManyWithoutSenderInput
  recievedMessages: MessageCreateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileCreateOneWithoutUserSignatureInput
  activity: ActivityCreateManyWithoutUserInput
  involvedActivity: ActivityCreateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalCreateManyWithoutRequestedByInput
  currentAddress: AddressCreateOneWithoutUserInput
  proofOfAddress: FileCreateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean!
  adminSettings: AdminSettingCreateOneWithoutUserInput!
  viewings: ViewingCreateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailCreateOneWithoutUserInput
  inspections: InspectionCreateManyWithoutInspectorInput
}

input UserCreateWithoutProfilePhotoInput {
  id: ID
  test: String
  friends: UserCreateManyInput
  friendRequests: FriendRequestCreateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestCreateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  emailValidated: Boolean
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  properties: PropertyCreateManyWithoutOwnersInput
  lesseeLeases: LesseeCreateManyWithoutUserInput
  lessorLeases: LessorCreateManyWithoutUserInput
  createdProperties: PropertyCreateManyWithoutCreatorInput
  photoIdentification: FileCreateOneWithoutUserPhotoIdInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardCreateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardCreateOneInput
  chats: ChatCreateManyWithoutParticipantsInput
  sentMessages: MessageCreateManyWithoutSenderInput
  recievedMessages: MessageCreateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileCreateOneWithoutUserSignatureInput
  activity: ActivityCreateManyWithoutUserInput
  involvedActivity: ActivityCreateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalCreateManyWithoutRequestedByInput
  currentAddress: AddressCreateOneWithoutUserInput
  proofOfAddress: FileCreateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean!
  adminSettings: AdminSettingCreateOneWithoutUserInput!
  viewings: ViewingCreateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailCreateOneWithoutUserInput
  inspections: InspectionCreateManyWithoutInspectorInput
}

input UserCreateWithoutProofOfAddressInput {
  id: ID
  test: String
  friends: UserCreateManyInput
  friendRequests: FriendRequestCreateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestCreateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  emailValidated: Boolean
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  properties: PropertyCreateManyWithoutOwnersInput
  lesseeLeases: LesseeCreateManyWithoutUserInput
  lessorLeases: LessorCreateManyWithoutUserInput
  createdProperties: PropertyCreateManyWithoutCreatorInput
  photoIdentification: FileCreateOneWithoutUserPhotoIdInput
  profilePhoto: FileCreateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardCreateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardCreateOneInput
  chats: ChatCreateManyWithoutParticipantsInput
  sentMessages: MessageCreateManyWithoutSenderInput
  recievedMessages: MessageCreateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileCreateOneWithoutUserSignatureInput
  activity: ActivityCreateManyWithoutUserInput
  involvedActivity: ActivityCreateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalCreateManyWithoutRequestedByInput
  currentAddress: AddressCreateOneWithoutUserInput
  acceptedSignupTerms: Boolean!
  adminSettings: AdminSettingCreateOneWithoutUserInput!
  viewings: ViewingCreateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailCreateOneWithoutUserInput
  inspections: InspectionCreateManyWithoutInspectorInput
}

input UserCreateWithoutPropertiesInput {
  id: ID
  test: String
  friends: UserCreateManyInput
  friendRequests: FriendRequestCreateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestCreateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  emailValidated: Boolean
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  lesseeLeases: LesseeCreateManyWithoutUserInput
  lessorLeases: LessorCreateManyWithoutUserInput
  createdProperties: PropertyCreateManyWithoutCreatorInput
  photoIdentification: FileCreateOneWithoutUserPhotoIdInput
  profilePhoto: FileCreateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardCreateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardCreateOneInput
  chats: ChatCreateManyWithoutParticipantsInput
  sentMessages: MessageCreateManyWithoutSenderInput
  recievedMessages: MessageCreateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileCreateOneWithoutUserSignatureInput
  activity: ActivityCreateManyWithoutUserInput
  involvedActivity: ActivityCreateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalCreateManyWithoutRequestedByInput
  currentAddress: AddressCreateOneWithoutUserInput
  proofOfAddress: FileCreateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean!
  adminSettings: AdminSettingCreateOneWithoutUserInput!
  viewings: ViewingCreateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailCreateOneWithoutUserInput
  inspections: InspectionCreateManyWithoutInspectorInput
}

input UserCreateWithoutRecievedMessagesInput {
  id: ID
  test: String
  friends: UserCreateManyInput
  friendRequests: FriendRequestCreateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestCreateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  emailValidated: Boolean
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  properties: PropertyCreateManyWithoutOwnersInput
  lesseeLeases: LesseeCreateManyWithoutUserInput
  lessorLeases: LessorCreateManyWithoutUserInput
  createdProperties: PropertyCreateManyWithoutCreatorInput
  photoIdentification: FileCreateOneWithoutUserPhotoIdInput
  profilePhoto: FileCreateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardCreateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardCreateOneInput
  chats: ChatCreateManyWithoutParticipantsInput
  sentMessages: MessageCreateManyWithoutSenderInput
  rehouserStamp: Boolean
  signature: FileCreateOneWithoutUserSignatureInput
  activity: ActivityCreateManyWithoutUserInput
  involvedActivity: ActivityCreateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalCreateManyWithoutRequestedByInput
  currentAddress: AddressCreateOneWithoutUserInput
  proofOfAddress: FileCreateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean!
  adminSettings: AdminSettingCreateOneWithoutUserInput!
  viewings: ViewingCreateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailCreateOneWithoutUserInput
  inspections: InspectionCreateManyWithoutInspectorInput
}

input UserCreateWithoutRentalAppraisalsInput {
  id: ID
  test: String
  friends: UserCreateManyInput
  friendRequests: FriendRequestCreateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestCreateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  emailValidated: Boolean
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  properties: PropertyCreateManyWithoutOwnersInput
  lesseeLeases: LesseeCreateManyWithoutUserInput
  lessorLeases: LessorCreateManyWithoutUserInput
  createdProperties: PropertyCreateManyWithoutCreatorInput
  photoIdentification: FileCreateOneWithoutUserPhotoIdInput
  profilePhoto: FileCreateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardCreateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardCreateOneInput
  chats: ChatCreateManyWithoutParticipantsInput
  sentMessages: MessageCreateManyWithoutSenderInput
  recievedMessages: MessageCreateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileCreateOneWithoutUserSignatureInput
  activity: ActivityCreateManyWithoutUserInput
  involvedActivity: ActivityCreateManyWithoutInvolvedInput
  currentAddress: AddressCreateOneWithoutUserInput
  proofOfAddress: FileCreateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean!
  adminSettings: AdminSettingCreateOneWithoutUserInput!
  viewings: ViewingCreateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailCreateOneWithoutUserInput
  inspections: InspectionCreateManyWithoutInspectorInput
}

input UserCreateWithoutSentMessagesInput {
  id: ID
  test: String
  friends: UserCreateManyInput
  friendRequests: FriendRequestCreateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestCreateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  emailValidated: Boolean
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  properties: PropertyCreateManyWithoutOwnersInput
  lesseeLeases: LesseeCreateManyWithoutUserInput
  lessorLeases: LessorCreateManyWithoutUserInput
  createdProperties: PropertyCreateManyWithoutCreatorInput
  photoIdentification: FileCreateOneWithoutUserPhotoIdInput
  profilePhoto: FileCreateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardCreateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardCreateOneInput
  chats: ChatCreateManyWithoutParticipantsInput
  recievedMessages: MessageCreateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileCreateOneWithoutUserSignatureInput
  activity: ActivityCreateManyWithoutUserInput
  involvedActivity: ActivityCreateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalCreateManyWithoutRequestedByInput
  currentAddress: AddressCreateOneWithoutUserInput
  proofOfAddress: FileCreateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean!
  adminSettings: AdminSettingCreateOneWithoutUserInput!
  viewings: ViewingCreateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailCreateOneWithoutUserInput
  inspections: InspectionCreateManyWithoutInspectorInput
}

input UserCreateWithoutSignatureInput {
  id: ID
  test: String
  friends: UserCreateManyInput
  friendRequests: FriendRequestCreateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestCreateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  emailValidated: Boolean
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  properties: PropertyCreateManyWithoutOwnersInput
  lesseeLeases: LesseeCreateManyWithoutUserInput
  lessorLeases: LessorCreateManyWithoutUserInput
  createdProperties: PropertyCreateManyWithoutCreatorInput
  photoIdentification: FileCreateOneWithoutUserPhotoIdInput
  profilePhoto: FileCreateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardCreateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardCreateOneInput
  chats: ChatCreateManyWithoutParticipantsInput
  sentMessages: MessageCreateManyWithoutSenderInput
  recievedMessages: MessageCreateManyWithoutRecipientInput
  rehouserStamp: Boolean
  activity: ActivityCreateManyWithoutUserInput
  involvedActivity: ActivityCreateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalCreateManyWithoutRequestedByInput
  currentAddress: AddressCreateOneWithoutUserInput
  proofOfAddress: FileCreateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean!
  adminSettings: AdminSettingCreateOneWithoutUserInput!
  viewings: ViewingCreateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailCreateOneWithoutUserInput
  inspections: InspectionCreateManyWithoutInspectorInput
}

input UserCreateWithoutViewingsInput {
  id: ID
  test: String
  friends: UserCreateManyInput
  friendRequests: FriendRequestCreateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestCreateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  emailValidated: Boolean
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserCreatepermissionsInput
  properties: PropertyCreateManyWithoutOwnersInput
  lesseeLeases: LesseeCreateManyWithoutUserInput
  lessorLeases: LessorCreateManyWithoutUserInput
  createdProperties: PropertyCreateManyWithoutCreatorInput
  photoIdentification: FileCreateOneWithoutUserPhotoIdInput
  profilePhoto: FileCreateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardCreateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardCreateOneInput
  chats: ChatCreateManyWithoutParticipantsInput
  sentMessages: MessageCreateManyWithoutSenderInput
  recievedMessages: MessageCreateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileCreateOneWithoutUserSignatureInput
  activity: ActivityCreateManyWithoutUserInput
  involvedActivity: ActivityCreateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalCreateManyWithoutRequestedByInput
  currentAddress: AddressCreateOneWithoutUserInput
  proofOfAddress: FileCreateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean!
  adminSettings: AdminSettingCreateOneWithoutUserInput!
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailCreateOneWithoutUserInput
  inspections: InspectionCreateManyWithoutInspectorInput
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  test_ASC
  test_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  dob_ASC
  dob_DESC
  firstName_ASC
  firstName_DESC
  lastName_ASC
  lastName_DESC
  phone_ASC
  phone_DESC
  email_ASC
  email_DESC
  emailValidated_ASC
  emailValidated_DESC
  password_ASC
  password_DESC
  resetToken_ASC
  resetToken_DESC
  resetTokenExpiry_ASC
  resetTokenExpiry_DESC
  confirmEmailToken_ASC
  confirmEmailToken_DESC
  confirmEmailTokenExpiry_ASC
  confirmEmailTokenExpiry_DESC
  identificationNumber_ASC
  identificationNumber_DESC
  emergencyContactName_ASC
  emergencyContactName_DESC
  emergencyContactNumber_ASC
  emergencyContactNumber_DESC
  emergencyContactEmail_ASC
  emergencyContactEmail_DESC
  referee1Name_ASC
  referee1Name_DESC
  referee1Phone_ASC
  referee1Phone_DESC
  referee1Email_ASC
  referee1Email_DESC
  referee2Name_ASC
  referee2Name_DESC
  referee2Phone_ASC
  referee2Phone_DESC
  referee2Email_ASC
  referee2Email_DESC
  rehouserStamp_ASC
  rehouserStamp_DESC
  acceptedSignupTerms_ASC
  acceptedSignupTerms_DESC
  acceptedTermsOfEngagement_ASC
  acceptedTermsOfEngagement_DESC
}

type UserPreviousValues {
  id: ID!
  test: String
  updatedAt: DateTime!
  createdAt: DateTime!
  dob: DateTime
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  emailValidated: Boolean
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: [Permission!]!
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  rehouserStamp: Boolean
  acceptedSignupTerms: Boolean!
  acceptedTermsOfEngagement: Boolean
}

input UserScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  test: String
  test_not: String
  test_in: [String!]
  test_not_in: [String!]
  test_lt: String
  test_lte: String
  test_gt: String
  test_gte: String
  test_contains: String
  test_not_contains: String
  test_starts_with: String
  test_not_starts_with: String
  test_ends_with: String
  test_not_ends_with: String
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  dob: DateTime
  dob_not: DateTime
  dob_in: [DateTime!]
  dob_not_in: [DateTime!]
  dob_lt: DateTime
  dob_lte: DateTime
  dob_gt: DateTime
  dob_gte: DateTime
  firstName: String
  firstName_not: String
  firstName_in: [String!]
  firstName_not_in: [String!]
  firstName_lt: String
  firstName_lte: String
  firstName_gt: String
  firstName_gte: String
  firstName_contains: String
  firstName_not_contains: String
  firstName_starts_with: String
  firstName_not_starts_with: String
  firstName_ends_with: String
  firstName_not_ends_with: String
  lastName: String
  lastName_not: String
  lastName_in: [String!]
  lastName_not_in: [String!]
  lastName_lt: String
  lastName_lte: String
  lastName_gt: String
  lastName_gte: String
  lastName_contains: String
  lastName_not_contains: String
  lastName_starts_with: String
  lastName_not_starts_with: String
  lastName_ends_with: String
  lastName_not_ends_with: String
  phone: String
  phone_not: String
  phone_in: [String!]
  phone_not_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_gt: String
  phone_gte: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  emailValidated: Boolean
  emailValidated_not: Boolean
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  resetToken: String
  resetToken_not: String
  resetToken_in: [String!]
  resetToken_not_in: [String!]
  resetToken_lt: String
  resetToken_lte: String
  resetToken_gt: String
  resetToken_gte: String
  resetToken_contains: String
  resetToken_not_contains: String
  resetToken_starts_with: String
  resetToken_not_starts_with: String
  resetToken_ends_with: String
  resetToken_not_ends_with: String
  resetTokenExpiry: Float
  resetTokenExpiry_not: Float
  resetTokenExpiry_in: [Float!]
  resetTokenExpiry_not_in: [Float!]
  resetTokenExpiry_lt: Float
  resetTokenExpiry_lte: Float
  resetTokenExpiry_gt: Float
  resetTokenExpiry_gte: Float
  confirmEmailToken: String
  confirmEmailToken_not: String
  confirmEmailToken_in: [String!]
  confirmEmailToken_not_in: [String!]
  confirmEmailToken_lt: String
  confirmEmailToken_lte: String
  confirmEmailToken_gt: String
  confirmEmailToken_gte: String
  confirmEmailToken_contains: String
  confirmEmailToken_not_contains: String
  confirmEmailToken_starts_with: String
  confirmEmailToken_not_starts_with: String
  confirmEmailToken_ends_with: String
  confirmEmailToken_not_ends_with: String
  confirmEmailTokenExpiry: Float
  confirmEmailTokenExpiry_not: Float
  confirmEmailTokenExpiry_in: [Float!]
  confirmEmailTokenExpiry_not_in: [Float!]
  confirmEmailTokenExpiry_lt: Float
  confirmEmailTokenExpiry_lte: Float
  confirmEmailTokenExpiry_gt: Float
  confirmEmailTokenExpiry_gte: Float
  identificationNumber: String
  identificationNumber_not: String
  identificationNumber_in: [String!]
  identificationNumber_not_in: [String!]
  identificationNumber_lt: String
  identificationNumber_lte: String
  identificationNumber_gt: String
  identificationNumber_gte: String
  identificationNumber_contains: String
  identificationNumber_not_contains: String
  identificationNumber_starts_with: String
  identificationNumber_not_starts_with: String
  identificationNumber_ends_with: String
  identificationNumber_not_ends_with: String
  emergencyContactName: String
  emergencyContactName_not: String
  emergencyContactName_in: [String!]
  emergencyContactName_not_in: [String!]
  emergencyContactName_lt: String
  emergencyContactName_lte: String
  emergencyContactName_gt: String
  emergencyContactName_gte: String
  emergencyContactName_contains: String
  emergencyContactName_not_contains: String
  emergencyContactName_starts_with: String
  emergencyContactName_not_starts_with: String
  emergencyContactName_ends_with: String
  emergencyContactName_not_ends_with: String
  emergencyContactNumber: String
  emergencyContactNumber_not: String
  emergencyContactNumber_in: [String!]
  emergencyContactNumber_not_in: [String!]
  emergencyContactNumber_lt: String
  emergencyContactNumber_lte: String
  emergencyContactNumber_gt: String
  emergencyContactNumber_gte: String
  emergencyContactNumber_contains: String
  emergencyContactNumber_not_contains: String
  emergencyContactNumber_starts_with: String
  emergencyContactNumber_not_starts_with: String
  emergencyContactNumber_ends_with: String
  emergencyContactNumber_not_ends_with: String
  emergencyContactEmail: String
  emergencyContactEmail_not: String
  emergencyContactEmail_in: [String!]
  emergencyContactEmail_not_in: [String!]
  emergencyContactEmail_lt: String
  emergencyContactEmail_lte: String
  emergencyContactEmail_gt: String
  emergencyContactEmail_gte: String
  emergencyContactEmail_contains: String
  emergencyContactEmail_not_contains: String
  emergencyContactEmail_starts_with: String
  emergencyContactEmail_not_starts_with: String
  emergencyContactEmail_ends_with: String
  emergencyContactEmail_not_ends_with: String
  referee1Name: String
  referee1Name_not: String
  referee1Name_in: [String!]
  referee1Name_not_in: [String!]
  referee1Name_lt: String
  referee1Name_lte: String
  referee1Name_gt: String
  referee1Name_gte: String
  referee1Name_contains: String
  referee1Name_not_contains: String
  referee1Name_starts_with: String
  referee1Name_not_starts_with: String
  referee1Name_ends_with: String
  referee1Name_not_ends_with: String
  referee1Phone: String
  referee1Phone_not: String
  referee1Phone_in: [String!]
  referee1Phone_not_in: [String!]
  referee1Phone_lt: String
  referee1Phone_lte: String
  referee1Phone_gt: String
  referee1Phone_gte: String
  referee1Phone_contains: String
  referee1Phone_not_contains: String
  referee1Phone_starts_with: String
  referee1Phone_not_starts_with: String
  referee1Phone_ends_with: String
  referee1Phone_not_ends_with: String
  referee1Email: String
  referee1Email_not: String
  referee1Email_in: [String!]
  referee1Email_not_in: [String!]
  referee1Email_lt: String
  referee1Email_lte: String
  referee1Email_gt: String
  referee1Email_gte: String
  referee1Email_contains: String
  referee1Email_not_contains: String
  referee1Email_starts_with: String
  referee1Email_not_starts_with: String
  referee1Email_ends_with: String
  referee1Email_not_ends_with: String
  referee2Name: String
  referee2Name_not: String
  referee2Name_in: [String!]
  referee2Name_not_in: [String!]
  referee2Name_lt: String
  referee2Name_lte: String
  referee2Name_gt: String
  referee2Name_gte: String
  referee2Name_contains: String
  referee2Name_not_contains: String
  referee2Name_starts_with: String
  referee2Name_not_starts_with: String
  referee2Name_ends_with: String
  referee2Name_not_ends_with: String
  referee2Phone: String
  referee2Phone_not: String
  referee2Phone_in: [String!]
  referee2Phone_not_in: [String!]
  referee2Phone_lt: String
  referee2Phone_lte: String
  referee2Phone_gt: String
  referee2Phone_gte: String
  referee2Phone_contains: String
  referee2Phone_not_contains: String
  referee2Phone_starts_with: String
  referee2Phone_not_starts_with: String
  referee2Phone_ends_with: String
  referee2Phone_not_ends_with: String
  referee2Email: String
  referee2Email_not: String
  referee2Email_in: [String!]
  referee2Email_not_in: [String!]
  referee2Email_lt: String
  referee2Email_lte: String
  referee2Email_gt: String
  referee2Email_gte: String
  referee2Email_contains: String
  referee2Email_not_contains: String
  referee2Email_starts_with: String
  referee2Email_not_starts_with: String
  referee2Email_ends_with: String
  referee2Email_not_ends_with: String
  rehouserStamp: Boolean
  rehouserStamp_not: Boolean
  acceptedSignupTerms: Boolean
  acceptedSignupTerms_not: Boolean
  acceptedTermsOfEngagement: Boolean
  acceptedTermsOfEngagement_not: Boolean
  AND: [UserScalarWhereInput!]
  OR: [UserScalarWhereInput!]
  NOT: [UserScalarWhereInput!]
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserWhereInput
  AND: [UserSubscriptionWhereInput!]
  OR: [UserSubscriptionWhereInput!]
  NOT: [UserSubscriptionWhereInput!]
}

input UserUpdateDataInput {
  test: String
  friends: UserUpdateManyInput
  friendRequests: FriendRequestUpdateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestUpdateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String
  lastName: String
  phone: String
  email: String
  emailValidated: Boolean
  password: String
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  properties: PropertyUpdateManyWithoutOwnersInput
  lesseeLeases: LesseeUpdateManyWithoutUserInput
  lessorLeases: LessorUpdateManyWithoutUserInput
  createdProperties: PropertyUpdateManyWithoutCreatorInput
  photoIdentification: FileUpdateOneWithoutUserPhotoIdInput
  profilePhoto: FileUpdateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardUpdateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardUpdateOneInput
  chats: ChatUpdateManyWithoutParticipantsInput
  sentMessages: MessageUpdateManyWithoutSenderInput
  recievedMessages: MessageUpdateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileUpdateOneWithoutUserSignatureInput
  activity: ActivityUpdateManyWithoutUserInput
  involvedActivity: ActivityUpdateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalUpdateManyWithoutRequestedByInput
  currentAddress: AddressUpdateOneWithoutUserInput
  proofOfAddress: FileUpdateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean
  adminSettings: AdminSettingUpdateOneRequiredWithoutUserInput
  viewings: ViewingUpdateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailUpdateOneWithoutUserInput
  inspections: InspectionUpdateManyWithoutInspectorInput
}

input UserUpdateInput {
  test: String
  friends: UserUpdateManyInput
  friendRequests: FriendRequestUpdateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestUpdateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String
  lastName: String
  phone: String
  email: String
  emailValidated: Boolean
  password: String
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  properties: PropertyUpdateManyWithoutOwnersInput
  lesseeLeases: LesseeUpdateManyWithoutUserInput
  lessorLeases: LessorUpdateManyWithoutUserInput
  createdProperties: PropertyUpdateManyWithoutCreatorInput
  photoIdentification: FileUpdateOneWithoutUserPhotoIdInput
  profilePhoto: FileUpdateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardUpdateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardUpdateOneInput
  chats: ChatUpdateManyWithoutParticipantsInput
  sentMessages: MessageUpdateManyWithoutSenderInput
  recievedMessages: MessageUpdateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileUpdateOneWithoutUserSignatureInput
  activity: ActivityUpdateManyWithoutUserInput
  involvedActivity: ActivityUpdateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalUpdateManyWithoutRequestedByInput
  currentAddress: AddressUpdateOneWithoutUserInput
  proofOfAddress: FileUpdateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean
  adminSettings: AdminSettingUpdateOneRequiredWithoutUserInput
  viewings: ViewingUpdateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailUpdateOneWithoutUserInput
  inspections: InspectionUpdateManyWithoutInspectorInput
}

input UserUpdateManyDataInput {
  test: String
  dob: DateTime
  firstName: String
  lastName: String
  phone: String
  email: String
  emailValidated: Boolean
  password: String
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  rehouserStamp: Boolean
  acceptedSignupTerms: Boolean
  acceptedTermsOfEngagement: Boolean
}

input UserUpdateManyInput {
  create: [UserCreateInput!]
  update: [UserUpdateWithWhereUniqueNestedInput!]
  upsert: [UserUpsertWithWhereUniqueNestedInput!]
  delete: [UserWhereUniqueInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
}

input UserUpdateManyMutationInput {
  test: String
  dob: DateTime
  firstName: String
  lastName: String
  phone: String
  email: String
  emailValidated: Boolean
  password: String
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  rehouserStamp: Boolean
  acceptedSignupTerms: Boolean
  acceptedTermsOfEngagement: Boolean
}

input UserUpdateManyWithoutChatsInput {
  create: [UserCreateWithoutChatsInput!]
  delete: [UserWhereUniqueInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutChatsInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutChatsInput!]
  deleteMany: [UserScalarWhereInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
}

input UserUpdateManyWithoutInvolvedActivityInput {
  create: [UserCreateWithoutInvolvedActivityInput!]
  delete: [UserWhereUniqueInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutInvolvedActivityInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutInvolvedActivityInput!]
  deleteMany: [UserScalarWhereInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
}

input UserUpdateManyWithoutPropertiesInput {
  create: [UserCreateWithoutPropertiesInput!]
  delete: [UserWhereUniqueInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutPropertiesInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutPropertiesInput!]
  deleteMany: [UserScalarWhereInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
}

input UserUpdateManyWithoutViewingsInput {
  create: [UserCreateWithoutViewingsInput!]
  delete: [UserWhereUniqueInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutViewingsInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutViewingsInput!]
  deleteMany: [UserScalarWhereInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
}

input UserUpdateManyWithWhereNestedInput {
  where: UserScalarWhereInput!
  data: UserUpdateManyDataInput!
}

input UserUpdateOneRequiredInput {
  create: UserCreateInput
  update: UserUpdateDataInput
  upsert: UserUpsertNestedInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutAwaitingFriendsInput {
  create: UserCreateWithoutAwaitingFriendsInput
  update: UserUpdateWithoutAwaitingFriendsDataInput
  upsert: UserUpsertWithoutAwaitingFriendsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutCreatedPropertiesInput {
  create: UserCreateWithoutCreatedPropertiesInput
  update: UserUpdateWithoutCreatedPropertiesDataInput
  upsert: UserUpsertWithoutCreatedPropertiesInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutCreditCardsInput {
  create: UserCreateWithoutCreditCardsInput
  update: UserUpdateWithoutCreditCardsDataInput
  upsert: UserUpsertWithoutCreditCardsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutFriendRequestsInput {
  create: UserCreateWithoutFriendRequestsInput
  update: UserUpdateWithoutFriendRequestsDataInput
  upsert: UserUpsertWithoutFriendRequestsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutRentalAppraisalsInput {
  create: UserCreateWithoutRentalAppraisalsInput
  update: UserUpdateWithoutRentalAppraisalsDataInput
  upsert: UserUpsertWithoutRentalAppraisalsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutActivityInput {
  create: UserCreateWithoutActivityInput
  update: UserUpdateWithoutActivityDataInput
  upsert: UserUpsertWithoutActivityInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutAdminSettingsInput {
  create: UserCreateWithoutAdminSettingsInput
  update: UserUpdateWithoutAdminSettingsDataInput
  upsert: UserUpsertWithoutAdminSettingsInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutBankDetailsInput {
  create: UserCreateWithoutBankDetailsInput
  update: UserUpdateWithoutBankDetailsDataInput
  upsert: UserUpsertWithoutBankDetailsInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutCurrentAddressInput {
  create: UserCreateWithoutCurrentAddressInput
  update: UserUpdateWithoutCurrentAddressDataInput
  upsert: UserUpsertWithoutCurrentAddressInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutInspectionsInput {
  create: UserCreateWithoutInspectionsInput
  update: UserUpdateWithoutInspectionsDataInput
  upsert: UserUpsertWithoutInspectionsInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutLesseeLeasesInput {
  create: UserCreateWithoutLesseeLeasesInput
  update: UserUpdateWithoutLesseeLeasesDataInput
  upsert: UserUpsertWithoutLesseeLeasesInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutLessorLeasesInput {
  create: UserCreateWithoutLessorLeasesInput
  update: UserUpdateWithoutLessorLeasesDataInput
  upsert: UserUpsertWithoutLessorLeasesInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutPhotoIdentificationInput {
  create: UserCreateWithoutPhotoIdentificationInput
  update: UserUpdateWithoutPhotoIdentificationDataInput
  upsert: UserUpsertWithoutPhotoIdentificationInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutProfilePhotoInput {
  create: UserCreateWithoutProfilePhotoInput
  update: UserUpdateWithoutProfilePhotoDataInput
  upsert: UserUpsertWithoutProfilePhotoInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutProofOfAddressInput {
  create: UserCreateWithoutProofOfAddressInput
  update: UserUpdateWithoutProofOfAddressDataInput
  upsert: UserUpsertWithoutProofOfAddressInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutRecievedMessagesInput {
  create: UserCreateWithoutRecievedMessagesInput
  update: UserUpdateWithoutRecievedMessagesDataInput
  upsert: UserUpsertWithoutRecievedMessagesInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutSentMessagesInput {
  create: UserCreateWithoutSentMessagesInput
  update: UserUpdateWithoutSentMessagesDataInput
  upsert: UserUpsertWithoutSentMessagesInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutSignatureInput {
  create: UserCreateWithoutSignatureInput
  update: UserUpdateWithoutSignatureDataInput
  upsert: UserUpsertWithoutSignatureInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdatepermissionsInput {
  set: [Permission!]
}

input UserUpdateWithoutActivityDataInput {
  test: String
  friends: UserUpdateManyInput
  friendRequests: FriendRequestUpdateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestUpdateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String
  lastName: String
  phone: String
  email: String
  emailValidated: Boolean
  password: String
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  properties: PropertyUpdateManyWithoutOwnersInput
  lesseeLeases: LesseeUpdateManyWithoutUserInput
  lessorLeases: LessorUpdateManyWithoutUserInput
  createdProperties: PropertyUpdateManyWithoutCreatorInput
  photoIdentification: FileUpdateOneWithoutUserPhotoIdInput
  profilePhoto: FileUpdateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardUpdateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardUpdateOneInput
  chats: ChatUpdateManyWithoutParticipantsInput
  sentMessages: MessageUpdateManyWithoutSenderInput
  recievedMessages: MessageUpdateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileUpdateOneWithoutUserSignatureInput
  involvedActivity: ActivityUpdateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalUpdateManyWithoutRequestedByInput
  currentAddress: AddressUpdateOneWithoutUserInput
  proofOfAddress: FileUpdateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean
  adminSettings: AdminSettingUpdateOneRequiredWithoutUserInput
  viewings: ViewingUpdateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailUpdateOneWithoutUserInput
  inspections: InspectionUpdateManyWithoutInspectorInput
}

input UserUpdateWithoutAdminSettingsDataInput {
  test: String
  friends: UserUpdateManyInput
  friendRequests: FriendRequestUpdateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestUpdateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String
  lastName: String
  phone: String
  email: String
  emailValidated: Boolean
  password: String
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  properties: PropertyUpdateManyWithoutOwnersInput
  lesseeLeases: LesseeUpdateManyWithoutUserInput
  lessorLeases: LessorUpdateManyWithoutUserInput
  createdProperties: PropertyUpdateManyWithoutCreatorInput
  photoIdentification: FileUpdateOneWithoutUserPhotoIdInput
  profilePhoto: FileUpdateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardUpdateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardUpdateOneInput
  chats: ChatUpdateManyWithoutParticipantsInput
  sentMessages: MessageUpdateManyWithoutSenderInput
  recievedMessages: MessageUpdateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileUpdateOneWithoutUserSignatureInput
  activity: ActivityUpdateManyWithoutUserInput
  involvedActivity: ActivityUpdateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalUpdateManyWithoutRequestedByInput
  currentAddress: AddressUpdateOneWithoutUserInput
  proofOfAddress: FileUpdateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean
  viewings: ViewingUpdateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailUpdateOneWithoutUserInput
  inspections: InspectionUpdateManyWithoutInspectorInput
}

input UserUpdateWithoutAwaitingFriendsDataInput {
  test: String
  friends: UserUpdateManyInput
  friendRequests: FriendRequestUpdateManyWithoutAcceptingUserInput
  dob: DateTime
  firstName: String
  lastName: String
  phone: String
  email: String
  emailValidated: Boolean
  password: String
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  properties: PropertyUpdateManyWithoutOwnersInput
  lesseeLeases: LesseeUpdateManyWithoutUserInput
  lessorLeases: LessorUpdateManyWithoutUserInput
  createdProperties: PropertyUpdateManyWithoutCreatorInput
  photoIdentification: FileUpdateOneWithoutUserPhotoIdInput
  profilePhoto: FileUpdateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardUpdateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardUpdateOneInput
  chats: ChatUpdateManyWithoutParticipantsInput
  sentMessages: MessageUpdateManyWithoutSenderInput
  recievedMessages: MessageUpdateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileUpdateOneWithoutUserSignatureInput
  activity: ActivityUpdateManyWithoutUserInput
  involvedActivity: ActivityUpdateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalUpdateManyWithoutRequestedByInput
  currentAddress: AddressUpdateOneWithoutUserInput
  proofOfAddress: FileUpdateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean
  adminSettings: AdminSettingUpdateOneRequiredWithoutUserInput
  viewings: ViewingUpdateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailUpdateOneWithoutUserInput
  inspections: InspectionUpdateManyWithoutInspectorInput
}

input UserUpdateWithoutBankDetailsDataInput {
  test: String
  friends: UserUpdateManyInput
  friendRequests: FriendRequestUpdateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestUpdateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String
  lastName: String
  phone: String
  email: String
  emailValidated: Boolean
  password: String
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  properties: PropertyUpdateManyWithoutOwnersInput
  lesseeLeases: LesseeUpdateManyWithoutUserInput
  lessorLeases: LessorUpdateManyWithoutUserInput
  createdProperties: PropertyUpdateManyWithoutCreatorInput
  photoIdentification: FileUpdateOneWithoutUserPhotoIdInput
  profilePhoto: FileUpdateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardUpdateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardUpdateOneInput
  chats: ChatUpdateManyWithoutParticipantsInput
  sentMessages: MessageUpdateManyWithoutSenderInput
  recievedMessages: MessageUpdateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileUpdateOneWithoutUserSignatureInput
  activity: ActivityUpdateManyWithoutUserInput
  involvedActivity: ActivityUpdateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalUpdateManyWithoutRequestedByInput
  currentAddress: AddressUpdateOneWithoutUserInput
  proofOfAddress: FileUpdateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean
  adminSettings: AdminSettingUpdateOneRequiredWithoutUserInput
  viewings: ViewingUpdateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  inspections: InspectionUpdateManyWithoutInspectorInput
}

input UserUpdateWithoutChatsDataInput {
  test: String
  friends: UserUpdateManyInput
  friendRequests: FriendRequestUpdateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestUpdateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String
  lastName: String
  phone: String
  email: String
  emailValidated: Boolean
  password: String
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  properties: PropertyUpdateManyWithoutOwnersInput
  lesseeLeases: LesseeUpdateManyWithoutUserInput
  lessorLeases: LessorUpdateManyWithoutUserInput
  createdProperties: PropertyUpdateManyWithoutCreatorInput
  photoIdentification: FileUpdateOneWithoutUserPhotoIdInput
  profilePhoto: FileUpdateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardUpdateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardUpdateOneInput
  sentMessages: MessageUpdateManyWithoutSenderInput
  recievedMessages: MessageUpdateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileUpdateOneWithoutUserSignatureInput
  activity: ActivityUpdateManyWithoutUserInput
  involvedActivity: ActivityUpdateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalUpdateManyWithoutRequestedByInput
  currentAddress: AddressUpdateOneWithoutUserInput
  proofOfAddress: FileUpdateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean
  adminSettings: AdminSettingUpdateOneRequiredWithoutUserInput
  viewings: ViewingUpdateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailUpdateOneWithoutUserInput
  inspections: InspectionUpdateManyWithoutInspectorInput
}

input UserUpdateWithoutCreatedPropertiesDataInput {
  test: String
  friends: UserUpdateManyInput
  friendRequests: FriendRequestUpdateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestUpdateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String
  lastName: String
  phone: String
  email: String
  emailValidated: Boolean
  password: String
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  properties: PropertyUpdateManyWithoutOwnersInput
  lesseeLeases: LesseeUpdateManyWithoutUserInput
  lessorLeases: LessorUpdateManyWithoutUserInput
  photoIdentification: FileUpdateOneWithoutUserPhotoIdInput
  profilePhoto: FileUpdateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardUpdateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardUpdateOneInput
  chats: ChatUpdateManyWithoutParticipantsInput
  sentMessages: MessageUpdateManyWithoutSenderInput
  recievedMessages: MessageUpdateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileUpdateOneWithoutUserSignatureInput
  activity: ActivityUpdateManyWithoutUserInput
  involvedActivity: ActivityUpdateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalUpdateManyWithoutRequestedByInput
  currentAddress: AddressUpdateOneWithoutUserInput
  proofOfAddress: FileUpdateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean
  adminSettings: AdminSettingUpdateOneRequiredWithoutUserInput
  viewings: ViewingUpdateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailUpdateOneWithoutUserInput
  inspections: InspectionUpdateManyWithoutInspectorInput
}

input UserUpdateWithoutCreditCardsDataInput {
  test: String
  friends: UserUpdateManyInput
  friendRequests: FriendRequestUpdateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestUpdateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String
  lastName: String
  phone: String
  email: String
  emailValidated: Boolean
  password: String
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  properties: PropertyUpdateManyWithoutOwnersInput
  lesseeLeases: LesseeUpdateManyWithoutUserInput
  lessorLeases: LessorUpdateManyWithoutUserInput
  createdProperties: PropertyUpdateManyWithoutCreatorInput
  photoIdentification: FileUpdateOneWithoutUserPhotoIdInput
  profilePhoto: FileUpdateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  primaryCreditCard: CreditCardUpdateOneInput
  chats: ChatUpdateManyWithoutParticipantsInput
  sentMessages: MessageUpdateManyWithoutSenderInput
  recievedMessages: MessageUpdateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileUpdateOneWithoutUserSignatureInput
  activity: ActivityUpdateManyWithoutUserInput
  involvedActivity: ActivityUpdateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalUpdateManyWithoutRequestedByInput
  currentAddress: AddressUpdateOneWithoutUserInput
  proofOfAddress: FileUpdateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean
  adminSettings: AdminSettingUpdateOneRequiredWithoutUserInput
  viewings: ViewingUpdateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailUpdateOneWithoutUserInput
  inspections: InspectionUpdateManyWithoutInspectorInput
}

input UserUpdateWithoutCurrentAddressDataInput {
  test: String
  friends: UserUpdateManyInput
  friendRequests: FriendRequestUpdateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestUpdateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String
  lastName: String
  phone: String
  email: String
  emailValidated: Boolean
  password: String
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  properties: PropertyUpdateManyWithoutOwnersInput
  lesseeLeases: LesseeUpdateManyWithoutUserInput
  lessorLeases: LessorUpdateManyWithoutUserInput
  createdProperties: PropertyUpdateManyWithoutCreatorInput
  photoIdentification: FileUpdateOneWithoutUserPhotoIdInput
  profilePhoto: FileUpdateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardUpdateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardUpdateOneInput
  chats: ChatUpdateManyWithoutParticipantsInput
  sentMessages: MessageUpdateManyWithoutSenderInput
  recievedMessages: MessageUpdateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileUpdateOneWithoutUserSignatureInput
  activity: ActivityUpdateManyWithoutUserInput
  involvedActivity: ActivityUpdateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalUpdateManyWithoutRequestedByInput
  proofOfAddress: FileUpdateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean
  adminSettings: AdminSettingUpdateOneRequiredWithoutUserInput
  viewings: ViewingUpdateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailUpdateOneWithoutUserInput
  inspections: InspectionUpdateManyWithoutInspectorInput
}

input UserUpdateWithoutFriendRequestsDataInput {
  test: String
  friends: UserUpdateManyInput
  awaitingFriends: FriendRequestUpdateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String
  lastName: String
  phone: String
  email: String
  emailValidated: Boolean
  password: String
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  properties: PropertyUpdateManyWithoutOwnersInput
  lesseeLeases: LesseeUpdateManyWithoutUserInput
  lessorLeases: LessorUpdateManyWithoutUserInput
  createdProperties: PropertyUpdateManyWithoutCreatorInput
  photoIdentification: FileUpdateOneWithoutUserPhotoIdInput
  profilePhoto: FileUpdateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardUpdateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardUpdateOneInput
  chats: ChatUpdateManyWithoutParticipantsInput
  sentMessages: MessageUpdateManyWithoutSenderInput
  recievedMessages: MessageUpdateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileUpdateOneWithoutUserSignatureInput
  activity: ActivityUpdateManyWithoutUserInput
  involvedActivity: ActivityUpdateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalUpdateManyWithoutRequestedByInput
  currentAddress: AddressUpdateOneWithoutUserInput
  proofOfAddress: FileUpdateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean
  adminSettings: AdminSettingUpdateOneRequiredWithoutUserInput
  viewings: ViewingUpdateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailUpdateOneWithoutUserInput
  inspections: InspectionUpdateManyWithoutInspectorInput
}

input UserUpdateWithoutInspectionsDataInput {
  test: String
  friends: UserUpdateManyInput
  friendRequests: FriendRequestUpdateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestUpdateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String
  lastName: String
  phone: String
  email: String
  emailValidated: Boolean
  password: String
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  properties: PropertyUpdateManyWithoutOwnersInput
  lesseeLeases: LesseeUpdateManyWithoutUserInput
  lessorLeases: LessorUpdateManyWithoutUserInput
  createdProperties: PropertyUpdateManyWithoutCreatorInput
  photoIdentification: FileUpdateOneWithoutUserPhotoIdInput
  profilePhoto: FileUpdateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardUpdateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardUpdateOneInput
  chats: ChatUpdateManyWithoutParticipantsInput
  sentMessages: MessageUpdateManyWithoutSenderInput
  recievedMessages: MessageUpdateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileUpdateOneWithoutUserSignatureInput
  activity: ActivityUpdateManyWithoutUserInput
  involvedActivity: ActivityUpdateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalUpdateManyWithoutRequestedByInput
  currentAddress: AddressUpdateOneWithoutUserInput
  proofOfAddress: FileUpdateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean
  adminSettings: AdminSettingUpdateOneRequiredWithoutUserInput
  viewings: ViewingUpdateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailUpdateOneWithoutUserInput
}

input UserUpdateWithoutInvolvedActivityDataInput {
  test: String
  friends: UserUpdateManyInput
  friendRequests: FriendRequestUpdateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestUpdateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String
  lastName: String
  phone: String
  email: String
  emailValidated: Boolean
  password: String
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  properties: PropertyUpdateManyWithoutOwnersInput
  lesseeLeases: LesseeUpdateManyWithoutUserInput
  lessorLeases: LessorUpdateManyWithoutUserInput
  createdProperties: PropertyUpdateManyWithoutCreatorInput
  photoIdentification: FileUpdateOneWithoutUserPhotoIdInput
  profilePhoto: FileUpdateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardUpdateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardUpdateOneInput
  chats: ChatUpdateManyWithoutParticipantsInput
  sentMessages: MessageUpdateManyWithoutSenderInput
  recievedMessages: MessageUpdateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileUpdateOneWithoutUserSignatureInput
  activity: ActivityUpdateManyWithoutUserInput
  rentalAppraisals: RentalAppraisalUpdateManyWithoutRequestedByInput
  currentAddress: AddressUpdateOneWithoutUserInput
  proofOfAddress: FileUpdateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean
  adminSettings: AdminSettingUpdateOneRequiredWithoutUserInput
  viewings: ViewingUpdateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailUpdateOneWithoutUserInput
  inspections: InspectionUpdateManyWithoutInspectorInput
}

input UserUpdateWithoutLesseeLeasesDataInput {
  test: String
  friends: UserUpdateManyInput
  friendRequests: FriendRequestUpdateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestUpdateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String
  lastName: String
  phone: String
  email: String
  emailValidated: Boolean
  password: String
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  properties: PropertyUpdateManyWithoutOwnersInput
  lessorLeases: LessorUpdateManyWithoutUserInput
  createdProperties: PropertyUpdateManyWithoutCreatorInput
  photoIdentification: FileUpdateOneWithoutUserPhotoIdInput
  profilePhoto: FileUpdateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardUpdateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardUpdateOneInput
  chats: ChatUpdateManyWithoutParticipantsInput
  sentMessages: MessageUpdateManyWithoutSenderInput
  recievedMessages: MessageUpdateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileUpdateOneWithoutUserSignatureInput
  activity: ActivityUpdateManyWithoutUserInput
  involvedActivity: ActivityUpdateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalUpdateManyWithoutRequestedByInput
  currentAddress: AddressUpdateOneWithoutUserInput
  proofOfAddress: FileUpdateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean
  adminSettings: AdminSettingUpdateOneRequiredWithoutUserInput
  viewings: ViewingUpdateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailUpdateOneWithoutUserInput
  inspections: InspectionUpdateManyWithoutInspectorInput
}

input UserUpdateWithoutLessorLeasesDataInput {
  test: String
  friends: UserUpdateManyInput
  friendRequests: FriendRequestUpdateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestUpdateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String
  lastName: String
  phone: String
  email: String
  emailValidated: Boolean
  password: String
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  properties: PropertyUpdateManyWithoutOwnersInput
  lesseeLeases: LesseeUpdateManyWithoutUserInput
  createdProperties: PropertyUpdateManyWithoutCreatorInput
  photoIdentification: FileUpdateOneWithoutUserPhotoIdInput
  profilePhoto: FileUpdateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardUpdateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardUpdateOneInput
  chats: ChatUpdateManyWithoutParticipantsInput
  sentMessages: MessageUpdateManyWithoutSenderInput
  recievedMessages: MessageUpdateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileUpdateOneWithoutUserSignatureInput
  activity: ActivityUpdateManyWithoutUserInput
  involvedActivity: ActivityUpdateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalUpdateManyWithoutRequestedByInput
  currentAddress: AddressUpdateOneWithoutUserInput
  proofOfAddress: FileUpdateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean
  adminSettings: AdminSettingUpdateOneRequiredWithoutUserInput
  viewings: ViewingUpdateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailUpdateOneWithoutUserInput
  inspections: InspectionUpdateManyWithoutInspectorInput
}

input UserUpdateWithoutPhotoIdentificationDataInput {
  test: String
  friends: UserUpdateManyInput
  friendRequests: FriendRequestUpdateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestUpdateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String
  lastName: String
  phone: String
  email: String
  emailValidated: Boolean
  password: String
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  properties: PropertyUpdateManyWithoutOwnersInput
  lesseeLeases: LesseeUpdateManyWithoutUserInput
  lessorLeases: LessorUpdateManyWithoutUserInput
  createdProperties: PropertyUpdateManyWithoutCreatorInput
  profilePhoto: FileUpdateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardUpdateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardUpdateOneInput
  chats: ChatUpdateManyWithoutParticipantsInput
  sentMessages: MessageUpdateManyWithoutSenderInput
  recievedMessages: MessageUpdateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileUpdateOneWithoutUserSignatureInput
  activity: ActivityUpdateManyWithoutUserInput
  involvedActivity: ActivityUpdateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalUpdateManyWithoutRequestedByInput
  currentAddress: AddressUpdateOneWithoutUserInput
  proofOfAddress: FileUpdateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean
  adminSettings: AdminSettingUpdateOneRequiredWithoutUserInput
  viewings: ViewingUpdateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailUpdateOneWithoutUserInput
  inspections: InspectionUpdateManyWithoutInspectorInput
}

input UserUpdateWithoutProfilePhotoDataInput {
  test: String
  friends: UserUpdateManyInput
  friendRequests: FriendRequestUpdateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestUpdateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String
  lastName: String
  phone: String
  email: String
  emailValidated: Boolean
  password: String
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  properties: PropertyUpdateManyWithoutOwnersInput
  lesseeLeases: LesseeUpdateManyWithoutUserInput
  lessorLeases: LessorUpdateManyWithoutUserInput
  createdProperties: PropertyUpdateManyWithoutCreatorInput
  photoIdentification: FileUpdateOneWithoutUserPhotoIdInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardUpdateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardUpdateOneInput
  chats: ChatUpdateManyWithoutParticipantsInput
  sentMessages: MessageUpdateManyWithoutSenderInput
  recievedMessages: MessageUpdateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileUpdateOneWithoutUserSignatureInput
  activity: ActivityUpdateManyWithoutUserInput
  involvedActivity: ActivityUpdateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalUpdateManyWithoutRequestedByInput
  currentAddress: AddressUpdateOneWithoutUserInput
  proofOfAddress: FileUpdateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean
  adminSettings: AdminSettingUpdateOneRequiredWithoutUserInput
  viewings: ViewingUpdateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailUpdateOneWithoutUserInput
  inspections: InspectionUpdateManyWithoutInspectorInput
}

input UserUpdateWithoutProofOfAddressDataInput {
  test: String
  friends: UserUpdateManyInput
  friendRequests: FriendRequestUpdateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestUpdateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String
  lastName: String
  phone: String
  email: String
  emailValidated: Boolean
  password: String
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  properties: PropertyUpdateManyWithoutOwnersInput
  lesseeLeases: LesseeUpdateManyWithoutUserInput
  lessorLeases: LessorUpdateManyWithoutUserInput
  createdProperties: PropertyUpdateManyWithoutCreatorInput
  photoIdentification: FileUpdateOneWithoutUserPhotoIdInput
  profilePhoto: FileUpdateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardUpdateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardUpdateOneInput
  chats: ChatUpdateManyWithoutParticipantsInput
  sentMessages: MessageUpdateManyWithoutSenderInput
  recievedMessages: MessageUpdateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileUpdateOneWithoutUserSignatureInput
  activity: ActivityUpdateManyWithoutUserInput
  involvedActivity: ActivityUpdateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalUpdateManyWithoutRequestedByInput
  currentAddress: AddressUpdateOneWithoutUserInput
  acceptedSignupTerms: Boolean
  adminSettings: AdminSettingUpdateOneRequiredWithoutUserInput
  viewings: ViewingUpdateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailUpdateOneWithoutUserInput
  inspections: InspectionUpdateManyWithoutInspectorInput
}

input UserUpdateWithoutPropertiesDataInput {
  test: String
  friends: UserUpdateManyInput
  friendRequests: FriendRequestUpdateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestUpdateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String
  lastName: String
  phone: String
  email: String
  emailValidated: Boolean
  password: String
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  lesseeLeases: LesseeUpdateManyWithoutUserInput
  lessorLeases: LessorUpdateManyWithoutUserInput
  createdProperties: PropertyUpdateManyWithoutCreatorInput
  photoIdentification: FileUpdateOneWithoutUserPhotoIdInput
  profilePhoto: FileUpdateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardUpdateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardUpdateOneInput
  chats: ChatUpdateManyWithoutParticipantsInput
  sentMessages: MessageUpdateManyWithoutSenderInput
  recievedMessages: MessageUpdateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileUpdateOneWithoutUserSignatureInput
  activity: ActivityUpdateManyWithoutUserInput
  involvedActivity: ActivityUpdateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalUpdateManyWithoutRequestedByInput
  currentAddress: AddressUpdateOneWithoutUserInput
  proofOfAddress: FileUpdateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean
  adminSettings: AdminSettingUpdateOneRequiredWithoutUserInput
  viewings: ViewingUpdateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailUpdateOneWithoutUserInput
  inspections: InspectionUpdateManyWithoutInspectorInput
}

input UserUpdateWithoutRecievedMessagesDataInput {
  test: String
  friends: UserUpdateManyInput
  friendRequests: FriendRequestUpdateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestUpdateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String
  lastName: String
  phone: String
  email: String
  emailValidated: Boolean
  password: String
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  properties: PropertyUpdateManyWithoutOwnersInput
  lesseeLeases: LesseeUpdateManyWithoutUserInput
  lessorLeases: LessorUpdateManyWithoutUserInput
  createdProperties: PropertyUpdateManyWithoutCreatorInput
  photoIdentification: FileUpdateOneWithoutUserPhotoIdInput
  profilePhoto: FileUpdateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardUpdateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardUpdateOneInput
  chats: ChatUpdateManyWithoutParticipantsInput
  sentMessages: MessageUpdateManyWithoutSenderInput
  rehouserStamp: Boolean
  signature: FileUpdateOneWithoutUserSignatureInput
  activity: ActivityUpdateManyWithoutUserInput
  involvedActivity: ActivityUpdateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalUpdateManyWithoutRequestedByInput
  currentAddress: AddressUpdateOneWithoutUserInput
  proofOfAddress: FileUpdateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean
  adminSettings: AdminSettingUpdateOneRequiredWithoutUserInput
  viewings: ViewingUpdateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailUpdateOneWithoutUserInput
  inspections: InspectionUpdateManyWithoutInspectorInput
}

input UserUpdateWithoutRentalAppraisalsDataInput {
  test: String
  friends: UserUpdateManyInput
  friendRequests: FriendRequestUpdateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestUpdateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String
  lastName: String
  phone: String
  email: String
  emailValidated: Boolean
  password: String
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  properties: PropertyUpdateManyWithoutOwnersInput
  lesseeLeases: LesseeUpdateManyWithoutUserInput
  lessorLeases: LessorUpdateManyWithoutUserInput
  createdProperties: PropertyUpdateManyWithoutCreatorInput
  photoIdentification: FileUpdateOneWithoutUserPhotoIdInput
  profilePhoto: FileUpdateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardUpdateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardUpdateOneInput
  chats: ChatUpdateManyWithoutParticipantsInput
  sentMessages: MessageUpdateManyWithoutSenderInput
  recievedMessages: MessageUpdateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileUpdateOneWithoutUserSignatureInput
  activity: ActivityUpdateManyWithoutUserInput
  involvedActivity: ActivityUpdateManyWithoutInvolvedInput
  currentAddress: AddressUpdateOneWithoutUserInput
  proofOfAddress: FileUpdateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean
  adminSettings: AdminSettingUpdateOneRequiredWithoutUserInput
  viewings: ViewingUpdateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailUpdateOneWithoutUserInput
  inspections: InspectionUpdateManyWithoutInspectorInput
}

input UserUpdateWithoutSentMessagesDataInput {
  test: String
  friends: UserUpdateManyInput
  friendRequests: FriendRequestUpdateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestUpdateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String
  lastName: String
  phone: String
  email: String
  emailValidated: Boolean
  password: String
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  properties: PropertyUpdateManyWithoutOwnersInput
  lesseeLeases: LesseeUpdateManyWithoutUserInput
  lessorLeases: LessorUpdateManyWithoutUserInput
  createdProperties: PropertyUpdateManyWithoutCreatorInput
  photoIdentification: FileUpdateOneWithoutUserPhotoIdInput
  profilePhoto: FileUpdateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardUpdateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardUpdateOneInput
  chats: ChatUpdateManyWithoutParticipantsInput
  recievedMessages: MessageUpdateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileUpdateOneWithoutUserSignatureInput
  activity: ActivityUpdateManyWithoutUserInput
  involvedActivity: ActivityUpdateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalUpdateManyWithoutRequestedByInput
  currentAddress: AddressUpdateOneWithoutUserInput
  proofOfAddress: FileUpdateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean
  adminSettings: AdminSettingUpdateOneRequiredWithoutUserInput
  viewings: ViewingUpdateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailUpdateOneWithoutUserInput
  inspections: InspectionUpdateManyWithoutInspectorInput
}

input UserUpdateWithoutSignatureDataInput {
  test: String
  friends: UserUpdateManyInput
  friendRequests: FriendRequestUpdateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestUpdateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String
  lastName: String
  phone: String
  email: String
  emailValidated: Boolean
  password: String
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  properties: PropertyUpdateManyWithoutOwnersInput
  lesseeLeases: LesseeUpdateManyWithoutUserInput
  lessorLeases: LessorUpdateManyWithoutUserInput
  createdProperties: PropertyUpdateManyWithoutCreatorInput
  photoIdentification: FileUpdateOneWithoutUserPhotoIdInput
  profilePhoto: FileUpdateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardUpdateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardUpdateOneInput
  chats: ChatUpdateManyWithoutParticipantsInput
  sentMessages: MessageUpdateManyWithoutSenderInput
  recievedMessages: MessageUpdateManyWithoutRecipientInput
  rehouserStamp: Boolean
  activity: ActivityUpdateManyWithoutUserInput
  involvedActivity: ActivityUpdateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalUpdateManyWithoutRequestedByInput
  currentAddress: AddressUpdateOneWithoutUserInput
  proofOfAddress: FileUpdateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean
  adminSettings: AdminSettingUpdateOneRequiredWithoutUserInput
  viewings: ViewingUpdateManyWithoutHostsInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailUpdateOneWithoutUserInput
  inspections: InspectionUpdateManyWithoutInspectorInput
}

input UserUpdateWithoutViewingsDataInput {
  test: String
  friends: UserUpdateManyInput
  friendRequests: FriendRequestUpdateManyWithoutAcceptingUserInput
  awaitingFriends: FriendRequestUpdateManyWithoutRequestUserInput
  dob: DateTime
  firstName: String
  lastName: String
  phone: String
  email: String
  emailValidated: Boolean
  password: String
  resetToken: String
  resetTokenExpiry: Float
  confirmEmailToken: String
  confirmEmailTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
  properties: PropertyUpdateManyWithoutOwnersInput
  lesseeLeases: LesseeUpdateManyWithoutUserInput
  lessorLeases: LessorUpdateManyWithoutUserInput
  createdProperties: PropertyUpdateManyWithoutCreatorInput
  photoIdentification: FileUpdateOneWithoutUserPhotoIdInput
  profilePhoto: FileUpdateOneWithoutUserProfilePhotoInput
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: CreditCardUpdateManyWithoutCardOwnerInput
  primaryCreditCard: CreditCardUpdateOneInput
  chats: ChatUpdateManyWithoutParticipantsInput
  sentMessages: MessageUpdateManyWithoutSenderInput
  recievedMessages: MessageUpdateManyWithoutRecipientInput
  rehouserStamp: Boolean
  signature: FileUpdateOneWithoutUserSignatureInput
  activity: ActivityUpdateManyWithoutUserInput
  involvedActivity: ActivityUpdateManyWithoutInvolvedInput
  rentalAppraisals: RentalAppraisalUpdateManyWithoutRequestedByInput
  currentAddress: AddressUpdateOneWithoutUserInput
  proofOfAddress: FileUpdateOneWithoutUserProofOfAddressInput
  acceptedSignupTerms: Boolean
  adminSettings: AdminSettingUpdateOneRequiredWithoutUserInput
  acceptedTermsOfEngagement: Boolean
  bankDetails: BankDetailUpdateOneWithoutUserInput
  inspections: InspectionUpdateManyWithoutInspectorInput
}

input UserUpdateWithWhereUniqueNestedInput {
  where: UserWhereUniqueInput!
  data: UserUpdateDataInput!
}

input UserUpdateWithWhereUniqueWithoutChatsInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutChatsDataInput!
}

input UserUpdateWithWhereUniqueWithoutInvolvedActivityInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutInvolvedActivityDataInput!
}

input UserUpdateWithWhereUniqueWithoutPropertiesInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutPropertiesDataInput!
}

input UserUpdateWithWhereUniqueWithoutViewingsInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutViewingsDataInput!
}

input UserUpsertNestedInput {
  update: UserUpdateDataInput!
  create: UserCreateInput!
}

input UserUpsertWithoutActivityInput {
  update: UserUpdateWithoutActivityDataInput!
  create: UserCreateWithoutActivityInput!
}

input UserUpsertWithoutAdminSettingsInput {
  update: UserUpdateWithoutAdminSettingsDataInput!
  create: UserCreateWithoutAdminSettingsInput!
}

input UserUpsertWithoutAwaitingFriendsInput {
  update: UserUpdateWithoutAwaitingFriendsDataInput!
  create: UserCreateWithoutAwaitingFriendsInput!
}

input UserUpsertWithoutBankDetailsInput {
  update: UserUpdateWithoutBankDetailsDataInput!
  create: UserCreateWithoutBankDetailsInput!
}

input UserUpsertWithoutCreatedPropertiesInput {
  update: UserUpdateWithoutCreatedPropertiesDataInput!
  create: UserCreateWithoutCreatedPropertiesInput!
}

input UserUpsertWithoutCreditCardsInput {
  update: UserUpdateWithoutCreditCardsDataInput!
  create: UserCreateWithoutCreditCardsInput!
}

input UserUpsertWithoutCurrentAddressInput {
  update: UserUpdateWithoutCurrentAddressDataInput!
  create: UserCreateWithoutCurrentAddressInput!
}

input UserUpsertWithoutFriendRequestsInput {
  update: UserUpdateWithoutFriendRequestsDataInput!
  create: UserCreateWithoutFriendRequestsInput!
}

input UserUpsertWithoutInspectionsInput {
  update: UserUpdateWithoutInspectionsDataInput!
  create: UserCreateWithoutInspectionsInput!
}

input UserUpsertWithoutLesseeLeasesInput {
  update: UserUpdateWithoutLesseeLeasesDataInput!
  create: UserCreateWithoutLesseeLeasesInput!
}

input UserUpsertWithoutLessorLeasesInput {
  update: UserUpdateWithoutLessorLeasesDataInput!
  create: UserCreateWithoutLessorLeasesInput!
}

input UserUpsertWithoutPhotoIdentificationInput {
  update: UserUpdateWithoutPhotoIdentificationDataInput!
  create: UserCreateWithoutPhotoIdentificationInput!
}

input UserUpsertWithoutProfilePhotoInput {
  update: UserUpdateWithoutProfilePhotoDataInput!
  create: UserCreateWithoutProfilePhotoInput!
}

input UserUpsertWithoutProofOfAddressInput {
  update: UserUpdateWithoutProofOfAddressDataInput!
  create: UserCreateWithoutProofOfAddressInput!
}

input UserUpsertWithoutRecievedMessagesInput {
  update: UserUpdateWithoutRecievedMessagesDataInput!
  create: UserCreateWithoutRecievedMessagesInput!
}

input UserUpsertWithoutRentalAppraisalsInput {
  update: UserUpdateWithoutRentalAppraisalsDataInput!
  create: UserCreateWithoutRentalAppraisalsInput!
}

input UserUpsertWithoutSentMessagesInput {
  update: UserUpdateWithoutSentMessagesDataInput!
  create: UserCreateWithoutSentMessagesInput!
}

input UserUpsertWithoutSignatureInput {
  update: UserUpdateWithoutSignatureDataInput!
  create: UserCreateWithoutSignatureInput!
}

input UserUpsertWithWhereUniqueNestedInput {
  where: UserWhereUniqueInput!
  update: UserUpdateDataInput!
  create: UserCreateInput!
}

input UserUpsertWithWhereUniqueWithoutChatsInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutChatsDataInput!
  create: UserCreateWithoutChatsInput!
}

input UserUpsertWithWhereUniqueWithoutInvolvedActivityInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutInvolvedActivityDataInput!
  create: UserCreateWithoutInvolvedActivityInput!
}

input UserUpsertWithWhereUniqueWithoutPropertiesInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutPropertiesDataInput!
  create: UserCreateWithoutPropertiesInput!
}

input UserUpsertWithWhereUniqueWithoutViewingsInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutViewingsDataInput!
  create: UserCreateWithoutViewingsInput!
}

input UserWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  test: String
  test_not: String
  test_in: [String!]
  test_not_in: [String!]
  test_lt: String
  test_lte: String
  test_gt: String
  test_gte: String
  test_contains: String
  test_not_contains: String
  test_starts_with: String
  test_not_starts_with: String
  test_ends_with: String
  test_not_ends_with: String
  friends_every: UserWhereInput
  friends_some: UserWhereInput
  friends_none: UserWhereInput
  friendRequests_every: FriendRequestWhereInput
  friendRequests_some: FriendRequestWhereInput
  friendRequests_none: FriendRequestWhereInput
  awaitingFriends_every: FriendRequestWhereInput
  awaitingFriends_some: FriendRequestWhereInput
  awaitingFriends_none: FriendRequestWhereInput
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  dob: DateTime
  dob_not: DateTime
  dob_in: [DateTime!]
  dob_not_in: [DateTime!]
  dob_lt: DateTime
  dob_lte: DateTime
  dob_gt: DateTime
  dob_gte: DateTime
  firstName: String
  firstName_not: String
  firstName_in: [String!]
  firstName_not_in: [String!]
  firstName_lt: String
  firstName_lte: String
  firstName_gt: String
  firstName_gte: String
  firstName_contains: String
  firstName_not_contains: String
  firstName_starts_with: String
  firstName_not_starts_with: String
  firstName_ends_with: String
  firstName_not_ends_with: String
  lastName: String
  lastName_not: String
  lastName_in: [String!]
  lastName_not_in: [String!]
  lastName_lt: String
  lastName_lte: String
  lastName_gt: String
  lastName_gte: String
  lastName_contains: String
  lastName_not_contains: String
  lastName_starts_with: String
  lastName_not_starts_with: String
  lastName_ends_with: String
  lastName_not_ends_with: String
  phone: String
  phone_not: String
  phone_in: [String!]
  phone_not_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_gt: String
  phone_gte: String
  phone_contains: String
  phone_not_contains: String
  phone_starts_with: String
  phone_not_starts_with: String
  phone_ends_with: String
  phone_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  emailValidated: Boolean
  emailValidated_not: Boolean
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  resetToken: String
  resetToken_not: String
  resetToken_in: [String!]
  resetToken_not_in: [String!]
  resetToken_lt: String
  resetToken_lte: String
  resetToken_gt: String
  resetToken_gte: String
  resetToken_contains: String
  resetToken_not_contains: String
  resetToken_starts_with: String
  resetToken_not_starts_with: String
  resetToken_ends_with: String
  resetToken_not_ends_with: String
  resetTokenExpiry: Float
  resetTokenExpiry_not: Float
  resetTokenExpiry_in: [Float!]
  resetTokenExpiry_not_in: [Float!]
  resetTokenExpiry_lt: Float
  resetTokenExpiry_lte: Float
  resetTokenExpiry_gt: Float
  resetTokenExpiry_gte: Float
  confirmEmailToken: String
  confirmEmailToken_not: String
  confirmEmailToken_in: [String!]
  confirmEmailToken_not_in: [String!]
  confirmEmailToken_lt: String
  confirmEmailToken_lte: String
  confirmEmailToken_gt: String
  confirmEmailToken_gte: String
  confirmEmailToken_contains: String
  confirmEmailToken_not_contains: String
  confirmEmailToken_starts_with: String
  confirmEmailToken_not_starts_with: String
  confirmEmailToken_ends_with: String
  confirmEmailToken_not_ends_with: String
  confirmEmailTokenExpiry: Float
  confirmEmailTokenExpiry_not: Float
  confirmEmailTokenExpiry_in: [Float!]
  confirmEmailTokenExpiry_not_in: [Float!]
  confirmEmailTokenExpiry_lt: Float
  confirmEmailTokenExpiry_lte: Float
  confirmEmailTokenExpiry_gt: Float
  confirmEmailTokenExpiry_gte: Float
  properties_every: PropertyWhereInput
  properties_some: PropertyWhereInput
  properties_none: PropertyWhereInput
  lesseeLeases_every: LesseeWhereInput
  lesseeLeases_some: LesseeWhereInput
  lesseeLeases_none: LesseeWhereInput
  lessorLeases_every: LessorWhereInput
  lessorLeases_some: LessorWhereInput
  lessorLeases_none: LessorWhereInput
  createdProperties_every: PropertyWhereInput
  createdProperties_some: PropertyWhereInput
  createdProperties_none: PropertyWhereInput
  photoIdentification: FileWhereInput
  profilePhoto: FileWhereInput
  identificationNumber: String
  identificationNumber_not: String
  identificationNumber_in: [String!]
  identificationNumber_not_in: [String!]
  identificationNumber_lt: String
  identificationNumber_lte: String
  identificationNumber_gt: String
  identificationNumber_gte: String
  identificationNumber_contains: String
  identificationNumber_not_contains: String
  identificationNumber_starts_with: String
  identificationNumber_not_starts_with: String
  identificationNumber_ends_with: String
  identificationNumber_not_ends_with: String
  emergencyContactName: String
  emergencyContactName_not: String
  emergencyContactName_in: [String!]
  emergencyContactName_not_in: [String!]
  emergencyContactName_lt: String
  emergencyContactName_lte: String
  emergencyContactName_gt: String
  emergencyContactName_gte: String
  emergencyContactName_contains: String
  emergencyContactName_not_contains: String
  emergencyContactName_starts_with: String
  emergencyContactName_not_starts_with: String
  emergencyContactName_ends_with: String
  emergencyContactName_not_ends_with: String
  emergencyContactNumber: String
  emergencyContactNumber_not: String
  emergencyContactNumber_in: [String!]
  emergencyContactNumber_not_in: [String!]
  emergencyContactNumber_lt: String
  emergencyContactNumber_lte: String
  emergencyContactNumber_gt: String
  emergencyContactNumber_gte: String
  emergencyContactNumber_contains: String
  emergencyContactNumber_not_contains: String
  emergencyContactNumber_starts_with: String
  emergencyContactNumber_not_starts_with: String
  emergencyContactNumber_ends_with: String
  emergencyContactNumber_not_ends_with: String
  emergencyContactEmail: String
  emergencyContactEmail_not: String
  emergencyContactEmail_in: [String!]
  emergencyContactEmail_not_in: [String!]
  emergencyContactEmail_lt: String
  emergencyContactEmail_lte: String
  emergencyContactEmail_gt: String
  emergencyContactEmail_gte: String
  emergencyContactEmail_contains: String
  emergencyContactEmail_not_contains: String
  emergencyContactEmail_starts_with: String
  emergencyContactEmail_not_starts_with: String
  emergencyContactEmail_ends_with: String
  emergencyContactEmail_not_ends_with: String
  referee1Name: String
  referee1Name_not: String
  referee1Name_in: [String!]
  referee1Name_not_in: [String!]
  referee1Name_lt: String
  referee1Name_lte: String
  referee1Name_gt: String
  referee1Name_gte: String
  referee1Name_contains: String
  referee1Name_not_contains: String
  referee1Name_starts_with: String
  referee1Name_not_starts_with: String
  referee1Name_ends_with: String
  referee1Name_not_ends_with: String
  referee1Phone: String
  referee1Phone_not: String
  referee1Phone_in: [String!]
  referee1Phone_not_in: [String!]
  referee1Phone_lt: String
  referee1Phone_lte: String
  referee1Phone_gt: String
  referee1Phone_gte: String
  referee1Phone_contains: String
  referee1Phone_not_contains: String
  referee1Phone_starts_with: String
  referee1Phone_not_starts_with: String
  referee1Phone_ends_with: String
  referee1Phone_not_ends_with: String
  referee1Email: String
  referee1Email_not: String
  referee1Email_in: [String!]
  referee1Email_not_in: [String!]
  referee1Email_lt: String
  referee1Email_lte: String
  referee1Email_gt: String
  referee1Email_gte: String
  referee1Email_contains: String
  referee1Email_not_contains: String
  referee1Email_starts_with: String
  referee1Email_not_starts_with: String
  referee1Email_ends_with: String
  referee1Email_not_ends_with: String
  referee2Name: String
  referee2Name_not: String
  referee2Name_in: [String!]
  referee2Name_not_in: [String!]
  referee2Name_lt: String
  referee2Name_lte: String
  referee2Name_gt: String
  referee2Name_gte: String
  referee2Name_contains: String
  referee2Name_not_contains: String
  referee2Name_starts_with: String
  referee2Name_not_starts_with: String
  referee2Name_ends_with: String
  referee2Name_not_ends_with: String
  referee2Phone: String
  referee2Phone_not: String
  referee2Phone_in: [String!]
  referee2Phone_not_in: [String!]
  referee2Phone_lt: String
  referee2Phone_lte: String
  referee2Phone_gt: String
  referee2Phone_gte: String
  referee2Phone_contains: String
  referee2Phone_not_contains: String
  referee2Phone_starts_with: String
  referee2Phone_not_starts_with: String
  referee2Phone_ends_with: String
  referee2Phone_not_ends_with: String
  referee2Email: String
  referee2Email_not: String
  referee2Email_in: [String!]
  referee2Email_not_in: [String!]
  referee2Email_lt: String
  referee2Email_lte: String
  referee2Email_gt: String
  referee2Email_gte: String
  referee2Email_contains: String
  referee2Email_not_contains: String
  referee2Email_starts_with: String
  referee2Email_not_starts_with: String
  referee2Email_ends_with: String
  referee2Email_not_ends_with: String
  creditCards_every: CreditCardWhereInput
  creditCards_some: CreditCardWhereInput
  creditCards_none: CreditCardWhereInput
  primaryCreditCard: CreditCardWhereInput
  chats_every: ChatWhereInput
  chats_some: ChatWhereInput
  chats_none: ChatWhereInput
  sentMessages_every: MessageWhereInput
  sentMessages_some: MessageWhereInput
  sentMessages_none: MessageWhereInput
  recievedMessages_every: MessageWhereInput
  recievedMessages_some: MessageWhereInput
  recievedMessages_none: MessageWhereInput
  rehouserStamp: Boolean
  rehouserStamp_not: Boolean
  signature: FileWhereInput
  activity_every: ActivityWhereInput
  activity_some: ActivityWhereInput
  activity_none: ActivityWhereInput
  involvedActivity_every: ActivityWhereInput
  involvedActivity_some: ActivityWhereInput
  involvedActivity_none: ActivityWhereInput
  rentalAppraisals_every: RentalAppraisalWhereInput
  rentalAppraisals_some: RentalAppraisalWhereInput
  rentalAppraisals_none: RentalAppraisalWhereInput
  currentAddress: AddressWhereInput
  proofOfAddress: FileWhereInput
  acceptedSignupTerms: Boolean
  acceptedSignupTerms_not: Boolean
  adminSettings: AdminSettingWhereInput
  viewings_every: ViewingWhereInput
  viewings_some: ViewingWhereInput
  viewings_none: ViewingWhereInput
  acceptedTermsOfEngagement: Boolean
  acceptedTermsOfEngagement_not: Boolean
  bankDetails: BankDetailWhereInput
  inspections_every: InspectionWhereInput
  inspections_some: InspectionWhereInput
  inspections_none: InspectionWhereInput
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
}

input UserWhereUniqueInput {
  id: ID
  email: String
}

type Viewing {
  id: ID!
  updatedAt: DateTime!
  createdAt: DateTime!
  dateTime: DateTime!
  minutesFor: Int!
  onRequest: Boolean
  recurringType: RecurringType!
  notes: String
  hosts(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  property: Property!
}

type ViewingConnection {
  pageInfo: PageInfo!
  edges: [ViewingEdge]!
  aggregate: AggregateViewing!
}

input ViewingCreateInput {
  id: ID
  dateTime: DateTime!
  minutesFor: Int!
  onRequest: Boolean
  recurringType: RecurringType!
  notes: String
  hosts: UserCreateManyWithoutViewingsInput
  property: PropertyCreateOneWithoutViewingsInput!
}

input ViewingCreateManyWithoutHostsInput {
  create: [ViewingCreateWithoutHostsInput!]
  connect: [ViewingWhereUniqueInput!]
}

input ViewingCreateManyWithoutPropertyInput {
  create: [ViewingCreateWithoutPropertyInput!]
  connect: [ViewingWhereUniqueInput!]
}

input ViewingCreateWithoutHostsInput {
  id: ID
  dateTime: DateTime!
  minutesFor: Int!
  onRequest: Boolean
  recurringType: RecurringType!
  notes: String
  property: PropertyCreateOneWithoutViewingsInput!
}

input ViewingCreateWithoutPropertyInput {
  id: ID
  dateTime: DateTime!
  minutesFor: Int!
  onRequest: Boolean
  recurringType: RecurringType!
  notes: String
  hosts: UserCreateManyWithoutViewingsInput
}

type ViewingEdge {
  node: Viewing!
  cursor: String!
}

enum ViewingOrderByInput {
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  dateTime_ASC
  dateTime_DESC
  minutesFor_ASC
  minutesFor_DESC
  onRequest_ASC
  onRequest_DESC
  recurringType_ASC
  recurringType_DESC
  notes_ASC
  notes_DESC
}

type ViewingPreviousValues {
  id: ID!
  updatedAt: DateTime!
  createdAt: DateTime!
  dateTime: DateTime!
  minutesFor: Int!
  onRequest: Boolean
  recurringType: RecurringType!
  notes: String
}

input ViewingScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  dateTime: DateTime
  dateTime_not: DateTime
  dateTime_in: [DateTime!]
  dateTime_not_in: [DateTime!]
  dateTime_lt: DateTime
  dateTime_lte: DateTime
  dateTime_gt: DateTime
  dateTime_gte: DateTime
  minutesFor: Int
  minutesFor_not: Int
  minutesFor_in: [Int!]
  minutesFor_not_in: [Int!]
  minutesFor_lt: Int
  minutesFor_lte: Int
  minutesFor_gt: Int
  minutesFor_gte: Int
  onRequest: Boolean
  onRequest_not: Boolean
  recurringType: RecurringType
  recurringType_not: RecurringType
  recurringType_in: [RecurringType!]
  recurringType_not_in: [RecurringType!]
  notes: String
  notes_not: String
  notes_in: [String!]
  notes_not_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_gt: String
  notes_gte: String
  notes_contains: String
  notes_not_contains: String
  notes_starts_with: String
  notes_not_starts_with: String
  notes_ends_with: String
  notes_not_ends_with: String
  AND: [ViewingScalarWhereInput!]
  OR: [ViewingScalarWhereInput!]
  NOT: [ViewingScalarWhereInput!]
}

type ViewingSubscriptionPayload {
  mutation: MutationType!
  node: Viewing
  updatedFields: [String!]
  previousValues: ViewingPreviousValues
}

input ViewingSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ViewingWhereInput
  AND: [ViewingSubscriptionWhereInput!]
  OR: [ViewingSubscriptionWhereInput!]
  NOT: [ViewingSubscriptionWhereInput!]
}

input ViewingUpdateInput {
  dateTime: DateTime
  minutesFor: Int
  onRequest: Boolean
  recurringType: RecurringType
  notes: String
  hosts: UserUpdateManyWithoutViewingsInput
  property: PropertyUpdateOneRequiredWithoutViewingsInput
}

input ViewingUpdateManyDataInput {
  dateTime: DateTime
  minutesFor: Int
  onRequest: Boolean
  recurringType: RecurringType
  notes: String
}

input ViewingUpdateManyMutationInput {
  dateTime: DateTime
  minutesFor: Int
  onRequest: Boolean
  recurringType: RecurringType
  notes: String
}

input ViewingUpdateManyWithoutHostsInput {
  create: [ViewingCreateWithoutHostsInput!]
  delete: [ViewingWhereUniqueInput!]
  connect: [ViewingWhereUniqueInput!]
  set: [ViewingWhereUniqueInput!]
  disconnect: [ViewingWhereUniqueInput!]
  update: [ViewingUpdateWithWhereUniqueWithoutHostsInput!]
  upsert: [ViewingUpsertWithWhereUniqueWithoutHostsInput!]
  deleteMany: [ViewingScalarWhereInput!]
  updateMany: [ViewingUpdateManyWithWhereNestedInput!]
}

input ViewingUpdateManyWithoutPropertyInput {
  create: [ViewingCreateWithoutPropertyInput!]
  delete: [ViewingWhereUniqueInput!]
  connect: [ViewingWhereUniqueInput!]
  set: [ViewingWhereUniqueInput!]
  disconnect: [ViewingWhereUniqueInput!]
  update: [ViewingUpdateWithWhereUniqueWithoutPropertyInput!]
  upsert: [ViewingUpsertWithWhereUniqueWithoutPropertyInput!]
  deleteMany: [ViewingScalarWhereInput!]
  updateMany: [ViewingUpdateManyWithWhereNestedInput!]
}

input ViewingUpdateManyWithWhereNestedInput {
  where: ViewingScalarWhereInput!
  data: ViewingUpdateManyDataInput!
}

input ViewingUpdateWithoutHostsDataInput {
  dateTime: DateTime
  minutesFor: Int
  onRequest: Boolean
  recurringType: RecurringType
  notes: String
  property: PropertyUpdateOneRequiredWithoutViewingsInput
}

input ViewingUpdateWithoutPropertyDataInput {
  dateTime: DateTime
  minutesFor: Int
  onRequest: Boolean
  recurringType: RecurringType
  notes: String
  hosts: UserUpdateManyWithoutViewingsInput
}

input ViewingUpdateWithWhereUniqueWithoutHostsInput {
  where: ViewingWhereUniqueInput!
  data: ViewingUpdateWithoutHostsDataInput!
}

input ViewingUpdateWithWhereUniqueWithoutPropertyInput {
  where: ViewingWhereUniqueInput!
  data: ViewingUpdateWithoutPropertyDataInput!
}

input ViewingUpsertWithWhereUniqueWithoutHostsInput {
  where: ViewingWhereUniqueInput!
  update: ViewingUpdateWithoutHostsDataInput!
  create: ViewingCreateWithoutHostsInput!
}

input ViewingUpsertWithWhereUniqueWithoutPropertyInput {
  where: ViewingWhereUniqueInput!
  update: ViewingUpdateWithoutPropertyDataInput!
  create: ViewingCreateWithoutPropertyInput!
}

input ViewingWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  dateTime: DateTime
  dateTime_not: DateTime
  dateTime_in: [DateTime!]
  dateTime_not_in: [DateTime!]
  dateTime_lt: DateTime
  dateTime_lte: DateTime
  dateTime_gt: DateTime
  dateTime_gte: DateTime
  minutesFor: Int
  minutesFor_not: Int
  minutesFor_in: [Int!]
  minutesFor_not_in: [Int!]
  minutesFor_lt: Int
  minutesFor_lte: Int
  minutesFor_gt: Int
  minutesFor_gte: Int
  onRequest: Boolean
  onRequest_not: Boolean
  recurringType: RecurringType
  recurringType_not: RecurringType
  recurringType_in: [RecurringType!]
  recurringType_not_in: [RecurringType!]
  notes: String
  notes_not: String
  notes_in: [String!]
  notes_not_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_gt: String
  notes_gte: String
  notes_contains: String
  notes_not_contains: String
  notes_starts_with: String
  notes_not_starts_with: String
  notes_ends_with: String
  notes_not_ends_with: String
  hosts_every: UserWhereInput
  hosts_some: UserWhereInput
  hosts_none: UserWhereInput
  property: PropertyWhereInput
  AND: [ViewingWhereInput!]
  OR: [ViewingWhereInput!]
  NOT: [ViewingWhereInput!]
}

input ViewingWhereUniqueInput {
  id: ID
}

enum VisibilityLevel {
  PRIVATE
  FRIENDS_ONLY
  PUBLIC
}

type Wallet {
  id: ID!
  lease: PropertyLease
  amount: Float
  charges(where: ChargeWhereInput, orderBy: ChargeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Charge!]
  payments(where: PaymentWhereInput, orderBy: PaymentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Payment!]
}

type WalletConnection {
  pageInfo: PageInfo!
  edges: [WalletEdge]!
  aggregate: AggregateWallet!
}

input WalletCreateInput {
  id: ID
  lease: PropertyLeaseCreateOneWithoutWalletInput
  amount: Float
  charges: ChargeCreateManyWithoutWalletInput
  payments: PaymentCreateManyWithoutWalletInput
}

input WalletCreateOneWithoutChargesInput {
  create: WalletCreateWithoutChargesInput
  connect: WalletWhereUniqueInput
}

input WalletCreateOneWithoutLeaseInput {
  create: WalletCreateWithoutLeaseInput
  connect: WalletWhereUniqueInput
}

input WalletCreateOneWithoutPaymentsInput {
  create: WalletCreateWithoutPaymentsInput
  connect: WalletWhereUniqueInput
}

input WalletCreateWithoutChargesInput {
  id: ID
  lease: PropertyLeaseCreateOneWithoutWalletInput
  amount: Float
  payments: PaymentCreateManyWithoutWalletInput
}

input WalletCreateWithoutLeaseInput {
  id: ID
  amount: Float
  charges: ChargeCreateManyWithoutWalletInput
  payments: PaymentCreateManyWithoutWalletInput
}

input WalletCreateWithoutPaymentsInput {
  id: ID
  lease: PropertyLeaseCreateOneWithoutWalletInput
  amount: Float
  charges: ChargeCreateManyWithoutWalletInput
}

type WalletEdge {
  node: Wallet!
  cursor: String!
}

enum WalletOrderByInput {
  id_ASC
  id_DESC
  amount_ASC
  amount_DESC
}

type WalletPreviousValues {
  id: ID!
  amount: Float
}

type WalletSubscriptionPayload {
  mutation: MutationType!
  node: Wallet
  updatedFields: [String!]
  previousValues: WalletPreviousValues
}

input WalletSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: WalletWhereInput
  AND: [WalletSubscriptionWhereInput!]
  OR: [WalletSubscriptionWhereInput!]
  NOT: [WalletSubscriptionWhereInput!]
}

input WalletUpdateInput {
  lease: PropertyLeaseUpdateOneWithoutWalletInput
  amount: Float
  charges: ChargeUpdateManyWithoutWalletInput
  payments: PaymentUpdateManyWithoutWalletInput
}

input WalletUpdateManyMutationInput {
  amount: Float
}

input WalletUpdateOneWithoutChargesInput {
  create: WalletCreateWithoutChargesInput
  update: WalletUpdateWithoutChargesDataInput
  upsert: WalletUpsertWithoutChargesInput
  delete: Boolean
  disconnect: Boolean
  connect: WalletWhereUniqueInput
}

input WalletUpdateOneWithoutLeaseInput {
  create: WalletCreateWithoutLeaseInput
  update: WalletUpdateWithoutLeaseDataInput
  upsert: WalletUpsertWithoutLeaseInput
  delete: Boolean
  disconnect: Boolean
  connect: WalletWhereUniqueInput
}

input WalletUpdateOneWithoutPaymentsInput {
  create: WalletCreateWithoutPaymentsInput
  update: WalletUpdateWithoutPaymentsDataInput
  upsert: WalletUpsertWithoutPaymentsInput
  delete: Boolean
  disconnect: Boolean
  connect: WalletWhereUniqueInput
}

input WalletUpdateWithoutChargesDataInput {
  lease: PropertyLeaseUpdateOneWithoutWalletInput
  amount: Float
  payments: PaymentUpdateManyWithoutWalletInput
}

input WalletUpdateWithoutLeaseDataInput {
  amount: Float
  charges: ChargeUpdateManyWithoutWalletInput
  payments: PaymentUpdateManyWithoutWalletInput
}

input WalletUpdateWithoutPaymentsDataInput {
  lease: PropertyLeaseUpdateOneWithoutWalletInput
  amount: Float
  charges: ChargeUpdateManyWithoutWalletInput
}

input WalletUpsertWithoutChargesInput {
  update: WalletUpdateWithoutChargesDataInput!
  create: WalletCreateWithoutChargesInput!
}

input WalletUpsertWithoutLeaseInput {
  update: WalletUpdateWithoutLeaseDataInput!
  create: WalletCreateWithoutLeaseInput!
}

input WalletUpsertWithoutPaymentsInput {
  update: WalletUpdateWithoutPaymentsDataInput!
  create: WalletCreateWithoutPaymentsInput!
}

input WalletWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  lease: PropertyLeaseWhereInput
  amount: Float
  amount_not: Float
  amount_in: [Float!]
  amount_not_in: [Float!]
  amount_lt: Float
  amount_lte: Float
  amount_gt: Float
  amount_gte: Float
  charges_every: ChargeWhereInput
  charges_some: ChargeWhereInput
  charges_none: ChargeWhereInput
  payments_every: PaymentWhereInput
  payments_some: PaymentWhereInput
  payments_none: PaymentWhereInput
  AND: [WalletWhereInput!]
  OR: [WalletWhereInput!]
  NOT: [WalletWhereInput!]
}

input WalletWhereUniqueInput {
  id: ID
}
