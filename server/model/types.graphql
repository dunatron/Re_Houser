type User {
  id: ID! @unique @id
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  firstName: String!
  lastName: String!
  phone: String!
  email: String! @unique
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission] @scalarList(strategy: RELATION)
  properties: [Property!]! @relation(name: "PropertyOwner")
  leases: [PropertyLease!]! @relation(name: "LeaseOwners")
  tenantLeases: [PropertyLease!]! @relation(name: "LeaseTenants")
  createdProperties: [Property!]! @relation(name: "PropertyCreator")
  photoIdentification: File
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
  creditCards: [CreditCard!]! @relation(name: "UserCreditCards")
  primaryCreditCard: CreditCard @relation(name: "UserPrimaryCreditCard")
}

type CreditCard {
  id: ID! @unique @id
  cardOwner: User! @relation(name: "UserCreditCards")
  createdAt: DateTime! @createdAt
  stripeCardId: String @unique
  brand: String
  country: String
  stripeCustomerId: String
  exp_month: Int
  exp_year: Int
  fingerprint: String
  last4: String
  name: String
  tron: String
}

type File {
  id: ID! @unique @id
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  filename: String!
  mimetype: String!
  encoding: String!
  url: String
}

type Property implements PropertyInfo {
  id: ID! @unique @id
  updatedAt: DateTime! @updatedAt
  
  createdAt: DateTime! @createdAt
  type: PropertyType
  headline: String
  rooms: Int!
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  indoorFeatures: [IndoorFeature] @scalarList(strategy: RELATION)
  outdoorFeatures: [OutdoorFeature] @scalarList(strategy: RELATION)
  rent: Float!
  moveInDate: DateTime
  onTheMarket: Boolean!
  location: String!
  locationLat: Float!
  locationLng: Float!
  owners: [User!]! @relation(name: "PropertyOwner")
  creator: User! @relation(name: "PropertyCreator")
  images: [File!]!
  # floorPlans: File
  rentalApplications: [RentalApplication]
    @relation(name: "PropertyRentalApplication")
}

type RentalGroupApplicant {
  id: ID! @unique @id
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  user: User!
  approved: Boolean!
  completed: Boolean
  application: RentalApplication @relation(name: "RentalGroupApplicant")
  preTenancyApplicationForm: File
  firstName: String
  email: String
}

type RentalApplication {
  id: ID! @unique @id
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  owner: User!
  title: String
  stage: ApplicationStage!
  visibility: VisibilityLevel
  finalised: Boolean
  property: Property! @relation(name: "PropertyRentalApplication")
  applicants: [RentalGroupApplicant!]! @relation(name: "RentalGroupApplicant")
}

type PropertyLease implements PropertyInfo {
  id: ID! @unique @id
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  owners: [User!]! @relation(name: "LeaseOwners")
  tenants: [User!]! @relation(name: "LeaseTenants")
  rooms: Int!
  bathrooms: Int
  garageSpaces: Int!
  carportSpaces: Int!
  offStreetSpaces: Int!
  indoorFeatures: [IndoorFeature] @scalarList(strategy: RELATION)
  outdoorFeatures: [OutdoorFeature] @scalarList(strategy: RELATION)
  rent: Float!
  moveInDate: DateTime
  location: String!
  locationLat: Float!
  locationLng: Float!
}
