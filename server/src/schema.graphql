# import * from './generated/prisma.graphql'

scalar Json
scalar Float
scalar Upload

type SuccessMessage {
  message: String
}

type Mutation {
  signup(
    email: String!
    password: String!
    firstName: String!
    lastName: String!
    phone: String!
  ): User!
  signin(email: String!, password: String!): User!
  signout: SuccessMessage
  requestReset(email: String!): SuccessMessage
  resetPassword(
    resetToken: String!
    password: String!
    confirmPassword: String!
  ): User!
  updatePermissions(permissions: [Permission], userId: ID!): User
  singleUpload(file: Upload!): File!
  uploadFile(file: Upload!): File!
  uploadFiles(files: [Upload!]!): [File!]!
  deleteFile(id: ID!): File
  renameFile(id: ID!, filename: String!): File
  createProperty(data: PropertyCreateInput!, files: [Upload]): Property
  updateProperty(id: ID!, onTheMarket: Boolean): Property!
  createRentalApplication(
    data: RentalApplicationCreateInput!
  ): RentalApplication!
  applyToRentalGroup(
    data: RentalGroupApplicantCreateInput!
  ): RentalGroupApplicant!
  createPreRentalDocument(rentalGroupApplicantId: ID!): Json!
  updateUser(data: UserUpdateInput!, photoFile: Upload): User!
}

type Query {
  me: User
  users: [User]!
  file(id: ID!): File
  files: [File!]!
  properties: [Property!]!
  ownerProperties: [Property!]!
  ownerProperty(id: ID!): Property
  myRentalApplications: [RentalApplication!]!
  rentalApplications(where: RentalApplicationWhereInput!): [RentalApplication!]!
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  phone: String!
  email: String!
  permissions: [Permission!]!
  properties: [Property!]!
  createdProperties: [Property!]!
  photoIdentification: File
  identificationNumber: String
  emergencyContactName: String
  emergencyContactNumber: String
  emergencyContactEmail: String
  referee1Name: String
  referee1Phone: String
  referee1Email: String
  referee2Name: String
  referee2Phone: String
  referee2Email: String
}
